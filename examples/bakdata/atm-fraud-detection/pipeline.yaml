- type: producer-app
  name: account-producer
  app:
    replicaCount: 1
    image: ${DOCKER_REGISTRY}/atm-demo-accountproducer
    imageTag: 1.0.0
    schedule: 0 12 * * *
    suspend: true
    prometheus:
      jmx:
        enabled: false
    debug: true

- type: producer-app
  name: transaction-avro-producer
  app:
    replicaCount: 1
    image: ${DOCKER_REGISTRY}/atm-demo-transactionavroproducer
    imageTag: 1.0.0
    commandLine:
      REAL_TX: 19
      ITERATION: 20
    schedule: 0 12 * * *
    suspend: true
    prometheus:
      jmx:
        enabled: false
    debug: true

- type: streams-app
  name: transaction-joiner
  app:
    replicaCount: 1
    image: ${DOCKER_REGISTRY}/atm-demo-transactionjoiner
    imageTag: 1.0.0
    commandLine:
      PRODUCTIVE: false
    annotations:
      consumerGroup: atm-transactionjoiner-atm-fraud-joinedtransactions-topic
    prometheus:
      jmx:
        enabled: false
    debug: true

- type: streams-app
  name: fraud-detector
  app:
    replicaCount: 1
    image: ${DOCKER_REGISTRY}/atm-demo-frauddetector
    imageTag: 1.0.0
    commandLine:
      PRODUCTIVE: false
    annotations:
      consumerGroup: atm-frauddetector-atm-fraud-possiblefraudtransactions-topic
    prometheus:
      jmx:
        enabled: false
    debug: true

- type: streams-app
  name: account-linker
  from:
    components:
      fraud-detector:
        type: input
      account-producer:
        role: accounts
  app:
    replicaCount: 1
    image: ${DOCKER_REGISTRY}/atm-demo-accountlinker
    imageTag: 1.0.0
    commandLine:
      PRODUCTIVE: false
    annotations:
      consumerGroup: atm-accountlinker-atm-fraud-output-topic
    prometheus:
      jmx:
        enabled: false
    debug: true

- type: kafka-sink-connector
  name: postgresql-connector
  app:
    connector.class: io.confluent.connect.jdbc.JdbcSinkConnector
    tasks.max: 1
    topics: ${pipeline.name}-account-linker-topic
    connection.url: jdbc:postgresql://postgresql-dev.${NAMESPACE}.svc.cluster.local:5432/app_db
    connection.user: app1
    connection.password: AppPassword
    connection.ds.pool.size: 5
    insert.mode: insert
    insert.mode.databaselevel: true
    value.converter: io.confluent.connect.avro.AvroConverter
    value.converter.schema.registry.url: http://k8kafka-cp-schema-registry.${NAMESPACE}.svc.cluster.local:8081
    key.converter: org.apache.kafka.connect.storage.StringConverter
    transforms: flatten
    transforms.flatten.type: org.apache.kafka.connect.transforms.Flatten$Value
    auto.create: true
    table.name.format: fraud_transactions
    errors.deadletterqueue.context.headers.enable: true
    errors.deadletterqueue.topic.name: postgres-request-sink-dead-letters
    errors.deadletterqueue.topic.replication.factor: 1
    errors.tolerance: all
    pk.mode: record_value
