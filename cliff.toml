[changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
body = """
{%- macro remote_url() -%}\
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}
{%- if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}]({{ self::remote_url() }}/tree/{{ version | trim_start_matches(pat="v")}}) - {{ timestamp | date(format="%Y-%m-%d") }}
{%- else -%}
    ## [unreleased]
{%- endif %}
### What's changed
{% for group, commits in commits | group_by(attribute="group") %}
  #### {{ group }}
  {% for commit in commits %}
    {% if commit.github.pr_title -%}\
      {%- set commit_message = commit.github.pr_title -%}
    {%- else -%}
      {%- set commit_message = commit.message -%}
    {%- endif -%}
    * {{ commit_message | split(pat="\n") | first | trim }}\
      {% if commit.github.username %} by @{{ commit.github.username }}{%- endif -%}
      {% if commit.github.pr_number %} in \
        [#{{ commit.github.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.github.pr_number }}) \
      {%- endif %}    
  {%- endfor -%}
{% endfor %}\n
{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  {% raw %}\n{% endraw -%}
  ### New Contributors
{%- endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif -%}

{% if version %}
    {% if previous.version %}
      **Full Changelog**: {{ self::remote_url() }}/compare/{{ previous.version }}...{{ version }}
    {% endif %}
{% endif %}
"""
footer = """
<!-- generated by git-cliff -->
"""
trim = true

[git]
conventional_commits = true
filter_unconventional = false
split_commits = false
commit_parsers = [
  { message = "^Bump version", skip = true },
  { field = "github.pr_labels", pattern = "breaking-change", group = "<!-- 0 -->🏗️ Breaking changes" },
  { field = "github.pr_labels", pattern = "type/enhancement", group = "<!-- 1 -->🚀 Features" },
  { field = "github.pr_labels", pattern = "type/bug", group = "<!-- 2 -->🐛 Fixes" }, # TODO: use new issue type instead of label as identifier
  { field = "github.pr_labels", pattern = "type/update", group = "<!-- 3 -->🧪 Dependencies" },
  { field = "github.pr_labels", pattern = "type/refactor", group = "<!-- 4 -->🏭 Refactor" },
  { field = "github.pr_labels", pattern = "area/documentation", group = "<!-- 5 -->📝 Documentation" },
  { field = "github.pr_labels", pattern = ".*", group = "<!-- 6 -->🌀 Miscellaneous" },
]
protect_breaking_commits = false
filter_commits = false
topo_order = false
sort_commits = "oldest"
