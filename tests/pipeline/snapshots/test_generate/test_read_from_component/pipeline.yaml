- type: producer-app
  name: producer1
  prefix: resources-read-from-component-
  to:
    topics:
      resources-read-from-component-producer1:
        type: output
        configs: {}
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-producer-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: resources-read-from-component-producer1
  version: 3.6.1
  helm_release_name: resources-read-from-component-producer1
  helm_name_override: resources-read-from-component-producer1
- type: producer-app
  name: producer2
  prefix: ''
  to:
    topics:
      resources-read-from-component-producer2:
        type: output
        configs: {}
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-producer-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: resources-read-from-component-producer2
  version: 3.6.1
  helm_release_name: producer2
  helm_name_override: producer2
- type: should-inflate
  name: inflate-step
  prefix: resources-read-from-component-
  to:
    topics:
      resources-read-from-component-inflate-step:
        type: output
        partitions_count: 50
        configs:
          retention.ms: '-1'
      resources-read-from-component-inflate-step-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: fake-registry/filter
    imageTag: 2.4.1
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: resources-read-from-component-inflate-step
      applicationId: filter-resources-read-from-component-inflate-step
      inputTopics:
        - resources-read-from-component-producer2
      errorTopic: resources-read-from-component-inflate-step-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    autoscaling:
      enabled: true
      lagThreshold: 10000
      maxReplicas: 1
      topics:
        - resources-read-from-component-inflate-step
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-inflate-step
  helm_name_override: resources-read-from-component-inflate-step
- type: kafka-sink-connector
  name: inflate-step-inflated-sink-connector
  prefix: resources-read-from-component-
  to:
    topics:
      kafka-sink-connector:
        type: output
        configs: {}
      inflate-step-inflated-sink-connector:
        configs: {}
        label: test
    models: {}
  config:
    connector.class: io.confluent.connect.elasticsearch.ElasticsearchSinkConnector
    name: resources-read-from-component-inflate-step-inflated-sink-connector
    topics: resources-read-from-component-inflate-step
    transforms.changeTopic.replacement: resources-read-from-component-inflate-step-index-v1
    batch.size: '2000'
    behavior.on.malformed.documents: warn
    behavior.on.null.values: delete
    connection.compression: 'true'
    key.ignore: 'false'
    linger.ms: '5000'
    max.buffered.records: '20000'
    read.timeout.ms: '120000'
    tasks.max: '1'
  resetter_values: {}
- type: streams-app
  name: inflate-step-inflated-streams-app
  prefix: resources-read-from-component-
  to:
    topics:
      resources-read-from-component-inflate-step-inflate-step-inflated-streams-app:
        type: output
        configs: {}
      resources-read-from-component-inflate-step-inflated-streams-app-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
      inputTopics:
        - kafka-sink-connector
      errorTopic: resources-read-from-component-inflate-step-inflated-streams-app-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-inflate-step-infl-5def2
  helm_name_override: resources-read-from-component-inflate-step-inflated-streams-app
- type: should-inflate
  name: inflate-step-without-prefix
  prefix: ''
  to:
    topics:
      resources-read-from-component-inflate-step-without-prefix:
        type: output
        partitions_count: 50
        configs:
          retention.ms: '-1'
      resources-read-from-component-inflate-step-without-prefix-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: fake-registry/filter
    imageTag: 2.4.1
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: resources-read-from-component-inflate-step-without-prefix
      applicationId: filter-resources-read-from-component-inflate-step-without-prefix
      inputTopics:
        - resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
      errorTopic: resources-read-from-component-inflate-step-without-prefix-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    autoscaling:
      enabled: true
      lagThreshold: 10000
      maxReplicas: 1
      topics:
        - resources-read-from-component-inflate-step-without-prefix
    statefulSet: false
  version: 3.6.1
  helm_release_name: inflate-step-without-prefix
  helm_name_override: inflate-step-without-prefix
- type: kafka-sink-connector
  name: inflate-step-without-prefix-inflated-sink-connector
  prefix: resources-read-from-component-
  to:
    topics:
      kafka-sink-connector:
        type: output
        configs: {}
      inflate-step-without-prefix-inflated-sink-connector:
        configs: {}
        label: test
    models: {}
  config:
    connector.class: io.confluent.connect.elasticsearch.ElasticsearchSinkConnector
    name: resources-read-from-component-inflate-step-without-prefix-inflated-sink-connector
    topics: resources-read-from-component-inflate-step-without-prefix
    transforms.changeTopic.replacement: resources-read-from-component-inflate-step-without-prefix-index-v1
    batch.size: '2000'
    behavior.on.malformed.documents: warn
    behavior.on.null.values: delete
    connection.compression: 'true'
    key.ignore: 'false'
    linger.ms: '5000'
    max.buffered.records: '20000'
    read.timeout.ms: '120000'
    tasks.max: '1'
  resetter_values: {}
- type: streams-app
  name: inflate-step-without-prefix-inflated-streams-app
  prefix: resources-read-from-component-
  to:
    topics:
      inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app:
        type: output
        configs: {}
      resources-read-from-component-inflate-step-without-prefix-inflated-streams-app-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app
      inputTopics:
        - kafka-sink-connector
      errorTopic: resources-read-from-component-inflate-step-without-prefix-inflated-streams-app-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-inflate-step-with-000dc
  helm_name_override: resources-read-from-component-inflate-step-without-prefix-000dc
- type: streams-app
  name: consumer1
  prefix: resources-read-from-component-
  from:
    topics: {}
    components:
      producer1:
        type: input
  to:
    topics:
      resources-read-from-component-consumer1:
        type: output
        configs: {}
      resources-read-from-component-consumer1-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      outputTopic: resources-read-from-component-consumer1
      inputTopics:
        - resources-read-from-component-producer1
      errorTopic: resources-read-from-component-consumer1-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-consumer1
  helm_name_override: resources-read-from-component-consumer1
- type: streams-app
  name: consumer2
  prefix: resources-read-from-component-
  from:
    topics: {}
    components:
      producer1:
        type: input
      consumer1:
        type: input
  to:
    topics:
      resources-read-from-component-consumer2-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      inputTopics:
        - resources-read-from-component-producer1
        - resources-read-from-component-consumer1
      errorTopic: resources-read-from-component-consumer2-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-consumer2
  helm_name_override: resources-read-from-component-consumer2
- type: streams-app
  name: consumer3
  prefix: resources-read-from-component-
  from:
    topics:
      resources-read-from-component-producer1:
        type: input
    components:
      producer2:
        type: input
  to:
    topics:
      resources-read-from-component-consumer3-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      inputTopics:
        - resources-read-from-component-producer1
        - resources-read-from-component-producer2
      errorTopic: resources-read-from-component-consumer3-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-consumer3
  helm_name_override: resources-read-from-component-consumer3
- type: streams-app
  name: consumer4
  prefix: resources-read-from-component-
  from:
    topics: {}
    components:
      inflate-step:
        type: input
  to:
    topics:
      resources-read-from-component-consumer4-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      inputTopics:
        - resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
      errorTopic: resources-read-from-component-consumer4-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-consumer4
  helm_name_override: resources-read-from-component-consumer4
- type: streams-app
  name: consumer5
  prefix: resources-read-from-component-
  from:
    topics: {}
    components:
      inflate-step-without-prefix:
        type: input
  to:
    topics:
      resources-read-from-component-consumer5-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      inputTopics:
        - inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app
      errorTopic: resources-read-from-component-consumer5-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-read-from-component-consumer5
  helm_name_override: resources-read-from-component-consumer5

