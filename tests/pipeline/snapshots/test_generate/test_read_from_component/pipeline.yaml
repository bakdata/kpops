- _cleaner:
    name: producer1
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: producer-app-cleaner
    values:
      image: bakdata-demo-producer-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        outputTopic: resources-read-from-component-producer1
        schemaRegistryUrl: http://localhost:8081/
    version: 3.1.0
  name: producer1
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-producer1:
        configs: {}
        type: output
  type: producer-app
  values:
    image: bakdata-demo-producer-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      outputTopic: resources-read-from-component-producer1
      schemaRegistryUrl: http://localhost:8081/
  version: 3.1.0
- _cleaner:
    name: producer2
    namespace: example-namespace
    prefix: ''
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: producer-app-cleaner
    values:
      image: bakdata-demo-producer-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        outputTopic: resources-read-from-component-producer2
        schemaRegistryUrl: http://localhost:8081/
    version: 3.1.0
  name: producer2
  namespace: example-namespace
  prefix: ''
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-producer2:
        configs: {}
        type: output
  type: producer-app
  values:
    image: bakdata-demo-producer-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      outputTopic: resources-read-from-component-producer2
      schemaRegistryUrl: http://localhost:8081/
  version: 3.1.0
- _cleaner:
    name: inflate-step
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      autoscaling:
        enabled: true
        lagThreshold: 10000
        maxReplicas: 1
        topics:
          - resources-read-from-component-inflate-step
      image: fake-registry/filter
      imageTag: 2.4.1
      kafka:
        applicationId: filter-resources-read-from-component-inflate-step
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-inflate-step-error
        inputTopics:
          - resources-read-from-component-producer2
        outputTopic: resources-read-from-component-inflate-step
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  name: inflate-step
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-inflate-step:
        configs:
          retention.ms: '-1'
        partitions_count: 50
        type: output
      resources-read-from-component-inflate-step-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: should-inflate
  values:
    autoscaling:
      enabled: true
      lagThreshold: 10000
      maxReplicas: 1
      topics:
        - resources-read-from-component-inflate-step
    image: fake-registry/filter
    imageTag: 2.4.1
    kafka:
      applicationId: filter-resources-read-from-component-inflate-step
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-inflate-step-error
      inputTopics:
        - resources-read-from-component-producer2
      outputTopic: resources-read-from-component-inflate-step
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _resetter:
    name: inflate-step-inflated-sink-connector
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-kafka-connect-resetter
      url: https://bakdata.github.io/kafka-connect-resetter/
    suffix: -clean
    type: kafka-connector-resetter
    values:
      config:
        brokers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        connector: resources-read-from-component-inflate-step-inflated-sink-connector
      connectorType: sink
    version: 1.0.4
  config:
    batch.size: '2000'
    behavior.on.malformed.documents: warn
    behavior.on.null.values: delete
    connection.compression: 'true'
    connector.class: io.confluent.connect.elasticsearch.ElasticsearchSinkConnector
    key.ignore: 'false'
    linger.ms: '5000'
    max.buffered.records: '20000'
    name: resources-read-from-component-inflate-step-inflated-sink-connector
    read.timeout.ms: '120000'
    tasks.max: '1'
    topics: resources-read-from-component-inflate-step
    transforms.changeTopic.replacement: resources-read-from-component-inflate-step-index-v1
  name: inflate-step-inflated-sink-connector
  prefix: resources-read-from-component-
  resetter_values: {}
  to:
    models: {}
    topics:
      inflate-step-inflated-sink-connector:
        configs: {}
        label: test
      kafka-sink-connector:
        configs: {}
        type: output
  type: kafka-sink-connector
- _cleaner:
    name: inflate-step-inflated-streams-app
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-inflate-step-inflated-streams-app-error
        inputTopics:
          - kafka-sink-connector
        outputTopic: resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  name: inflate-step-inflated-streams-app
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-inflate-step-inflate-step-inflated-streams-app:
        configs: {}
        type: output
      resources-read-from-component-inflate-step-inflated-streams-app-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-inflate-step-inflated-streams-app-error
      inputTopics:
        - kafka-sink-connector
      outputTopic: resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _cleaner:
    name: inflate-step-without-prefix
    namespace: example-namespace
    prefix: ''
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      autoscaling:
        enabled: true
        lagThreshold: 10000
        maxReplicas: 1
        topics:
          - resources-read-from-component-inflate-step-without-prefix
      image: fake-registry/filter
      imageTag: 2.4.1
      kafka:
        applicationId: filter-resources-read-from-component-inflate-step-without-prefix
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-inflate-step-without-prefix-error
        inputTopics:
          - resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
        outputTopic: resources-read-from-component-inflate-step-without-prefix
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  name: inflate-step-without-prefix
  namespace: example-namespace
  prefix: ''
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-inflate-step-without-prefix:
        configs:
          retention.ms: '-1'
        partitions_count: 50
        type: output
      resources-read-from-component-inflate-step-without-prefix-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: should-inflate
  values:
    autoscaling:
      enabled: true
      lagThreshold: 10000
      maxReplicas: 1
      topics:
        - resources-read-from-component-inflate-step-without-prefix
    image: fake-registry/filter
    imageTag: 2.4.1
    kafka:
      applicationId: filter-resources-read-from-component-inflate-step-without-prefix
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-inflate-step-without-prefix-error
      inputTopics:
        - resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
      outputTopic: resources-read-from-component-inflate-step-without-prefix
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _resetter:
    name: inflate-step-without-prefix-inflated-sink-connector
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-kafka-connect-resetter
      url: https://bakdata.github.io/kafka-connect-resetter/
    suffix: -clean
    type: kafka-connector-resetter
    values:
      config:
        brokers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        connector: resources-read-from-component-inflate-step-without-prefix-inflated-sink-connector
      connectorType: sink
    version: 1.0.4
  config:
    batch.size: '2000'
    behavior.on.malformed.documents: warn
    behavior.on.null.values: delete
    connection.compression: 'true'
    connector.class: io.confluent.connect.elasticsearch.ElasticsearchSinkConnector
    key.ignore: 'false'
    linger.ms: '5000'
    max.buffered.records: '20000'
    name: resources-read-from-component-inflate-step-without-prefix-inflated-sink-connector
    read.timeout.ms: '120000'
    tasks.max: '1'
    topics: resources-read-from-component-inflate-step-without-prefix
    transforms.changeTopic.replacement: resources-read-from-component-inflate-step-without-prefix-index-v1
  name: inflate-step-without-prefix-inflated-sink-connector
  prefix: resources-read-from-component-
  resetter_values: {}
  to:
    models: {}
    topics:
      inflate-step-without-prefix-inflated-sink-connector:
        configs: {}
        label: test
      kafka-sink-connector:
        configs: {}
        type: output
  type: kafka-sink-connector
- _cleaner:
    name: inflate-step-without-prefix-inflated-streams-app
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-inflate-step-without-prefix-inflated-streams-app-error
        inputTopics:
          - kafka-sink-connector
        outputTopic: inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  name: inflate-step-without-prefix-inflated-streams-app
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app:
        configs: {}
        type: output
      resources-read-from-component-inflate-step-without-prefix-inflated-streams-app-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-inflate-step-without-prefix-inflated-streams-app-error
      inputTopics:
        - kafka-sink-connector
      outputTopic: inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _cleaner:
    name: consumer1
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-consumer1-error
        inputTopics:
          - resources-read-from-component-producer1
        outputTopic: resources-read-from-component-consumer1
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  from:
    components:
      producer1:
        type: input
    topics: {}
  name: consumer1
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-consumer1:
        configs: {}
        type: output
      resources-read-from-component-consumer1-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-consumer1-error
      inputTopics:
        - resources-read-from-component-producer1
      outputTopic: resources-read-from-component-consumer1
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _cleaner:
    name: consumer2
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-consumer2-error
        inputTopics:
          - resources-read-from-component-producer1
          - resources-read-from-component-consumer1
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  from:
    components:
      consumer1:
        type: input
      producer1:
        type: input
    topics: {}
  name: consumer2
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-consumer2-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-consumer2-error
      inputTopics:
        - resources-read-from-component-producer1
        - resources-read-from-component-consumer1
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _cleaner:
    name: consumer3
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-consumer3-error
        inputTopics:
          - resources-read-from-component-producer1
          - resources-read-from-component-producer2
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  from:
    components:
      producer2:
        type: input
    topics:
      resources-read-from-component-producer1:
        type: input
  name: consumer3
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-consumer3-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-consumer3-error
      inputTopics:
        - resources-read-from-component-producer1
        - resources-read-from-component-producer2
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _cleaner:
    name: consumer4
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-consumer4-error
        inputTopics:
          - resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  from:
    components:
      inflate-step:
        type: input
    topics: {}
  name: consumer4
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-consumer4-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-consumer4-error
      inputTopics:
        - resources-read-from-component-inflate-step-inflate-step-inflated-streams-app
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0
- _cleaner:
    name: consumer5
    namespace: example-namespace
    prefix: resources-read-from-component-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      image: bakdata-demo-streams-app
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-read-from-component-consumer5-error
        inputTopics:
          - inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app
        schemaRegistryUrl: http://localhost:8081/
      statefulSet: false
    version: 3.1.0
  from:
    components:
      inflate-step-without-prefix:
        type: input
    topics: {}
  name: consumer5
  namespace: example-namespace
  prefix: resources-read-from-component-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      resources-read-from-component-consumer5-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: streams-app
  values:
    image: bakdata-demo-streams-app
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-read-from-component-consumer5-error
      inputTopics:
        - inflate-step-without-prefix-inflate-step-without-prefix-inflated-streams-app
      schemaRegistryUrl: http://localhost:8081/
    statefulSet: false
  version: 3.1.0

