- _cleaner:
    name: my-producer-app
    namespace: example-namespace
    prefix: resources-streams-bootstrap-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: producer-app-cleaner
    values:
      affinity: {}
      commandLine:
        FAKE_ARG: fake-arg-value
      env: {}
      files:
        log4j2.xml:
          content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration>\n\
            \    <Appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\"\
            >\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger{36}\
            \ - %msg%n\"/>\n        </Console>\n    </Appenders>\n    <Loggers>\n\
            \        <Root level=\"info\">\n            <AppenderRef ref=\"Console\"\
            />\n        </Root>\n    </Loggers>\n</Configuration>\n"
          mountPath: app/resources
      image: my-registry/my-producer-image
      imagePullPolicy: IfNotPresent
      imagePullSecrets: []
      imageTag: 1.0.0
      kafka:
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        labeledOutputTopics:
          my-producer-app-output-topic-label: my-labeled-producer-app-topic-output
        outputTopic: my-producer-app-output-topic
        schemaRegistryUrl: http://localhost:8081/
      livenessProbe: {}
      podAnnotations: {}
      podLabels: {}
      ports: []
      readinessProbe: {}
      schedule: 30 3/8 * * *
      secretFilesRefs: []
      secretRefs: {}
      secrets: {}
      tolerations: []
    version: 3.0.3
  name: my-producer-app
  namespace: example-namespace
  prefix: resources-streams-bootstrap-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      my-labeled-producer-app-topic-output:
        configs: {}
        label: my-producer-app-output-topic-label
      my-producer-app-output-topic:
        configs: {}
        type: output
  type: my-producer-app
  values:
    affinity: {}
    commandLine:
      FAKE_ARG: fake-arg-value
    env: {}
    files:
      log4j2.xml:
        content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration>\n  \
          \  <Appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\"\
          >\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger{36}\
          \ - %msg%n\"/>\n        </Console>\n    </Appenders>\n    <Loggers>\n  \
          \      <Root level=\"info\">\n            <AppenderRef ref=\"Console\"/>\n\
          \        </Root>\n    </Loggers>\n</Configuration>\n"
        mountPath: app/resources
    image: my-registry/my-producer-image
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    imageTag: 1.0.0
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      labeledOutputTopics:
        my-producer-app-output-topic-label: my-labeled-producer-app-topic-output
      outputTopic: my-producer-app-output-topic
      schemaRegistryUrl: http://localhost:8081/
    livenessProbe: {}
    podAnnotations: {}
    podLabels: {}
    ports: []
    readinessProbe: {}
    schedule: 30 3/8 * * *
    secretFilesRefs: []
    secretRefs: {}
    secrets: {}
    tolerations: []
  version: 3.0.3
- _cleaner:
    name: my-streams-app
    namespace: example-namespace
    prefix: resources-streams-bootstrap-
    repo_config:
      repo_auth_flags:
        insecure_skip_tls_verify: false
      repository_name: bakdata-streams-bootstrap
      url: https://bakdata.github.io/streams-bootstrap/
    suffix: -clean
    type: streams-app-cleaner
    values:
      affinity: {}
      commandLine:
        CONVERT_XML: true
      env: {}
      files:
        log4j2.xml:
          content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration>\n\
            \    <Appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\"\
            >\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger{36}\
            \ - %msg%n\"/>\n        </Console>\n    </Appenders>\n    <Loggers>\n\
            \        <Root level=\"info\">\n            <AppenderRef ref=\"Console\"\
            />\n        </Root>\n    </Loggers>\n</Configuration>\n"
          mountPath: app/resources
      image: my-registry/my-streams-app-image
      imagePullPolicy: IfNotPresent
      imagePullSecrets: []
      imageTag: 1.0.0
      javaOptions:
        maxRAMPercentage: 85
        others: []
      kafka:
        applicationId: my-streams-app-id
        bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
        config:
          large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
        errorTopic: resources-streams-bootstrap-my-streams-app-error
        inputPattern: my-input-pattern
        inputTopics:
        - my-input-topic
        labeledInputPatterns:
          my-input-topic-labeled-pattern: my-labeled-input-pattern
        labeledInputTopics:
          my-input-topic-label:
          - my-labeled-input-topic
        labeledOutputTopics:
          my-output-topic-label: my-labeled-topic-output
        outputTopic: my-output-topic
        schemaRegistryUrl: http://localhost:8081/
      livenessProbe: {}
      podAnnotations: {}
      podLabels: {}
      ports: []
      readinessProbe: {}
      secretFilesRefs: []
      secretRefs: {}
      secrets: {}
      statefulSet: false
      tolerations: []
    version: 3.0.3
  from:
    components: {}
    topics:
      my-input-pattern:
        type: pattern
      my-input-topic:
        type: input
      my-labeled-input-pattern:
        label: my-input-topic-labeled-pattern
        type: pattern
      my-labeled-input-topic:
        label: my-input-topic-label
  name: my-streams-app
  namespace: example-namespace
  prefix: resources-streams-bootstrap-
  repo_config:
    repo_auth_flags:
      insecure_skip_tls_verify: false
    repository_name: bakdata-streams-bootstrap
    url: https://bakdata.github.io/streams-bootstrap/
  to:
    models: {}
    topics:
      my-error-topic:
        configs: {}
        type: error
      my-labeled-topic-output:
        configs: {}
        label: my-output-topic-label
      my-output-topic:
        configs: {}
        type: output
      resources-streams-bootstrap-my-streams-app-error:
        configs:
          cleanup.policy: compact,delete
        partitions_count: 1
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
  type: my-streams-app
  values:
    affinity: {}
    commandLine:
      CONVERT_XML: true
    env: {}
    files:
      log4j2.xml:
        content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration>\n  \
          \  <Appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\"\
          >\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger{36}\
          \ - %msg%n\"/>\n        </Console>\n    </Appenders>\n    <Loggers>\n  \
          \      <Root level=\"info\">\n            <AppenderRef ref=\"Console\"/>\n\
          \        </Root>\n    </Loggers>\n</Configuration>\n"
        mountPath: app/resources
    image: my-registry/my-streams-app-image
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    imageTag: 1.0.0
    javaOptions:
      maxRAMPercentage: 85
      others: []
    kafka:
      applicationId: my-streams-app-id
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
      errorTopic: resources-streams-bootstrap-my-streams-app-error
      inputPattern: my-input-pattern
      inputTopics:
      - my-input-topic
      labeledInputPatterns:
        my-input-topic-labeled-pattern: my-labeled-input-pattern
      labeledInputTopics:
        my-input-topic-label:
        - my-labeled-input-topic
      labeledOutputTopics:
        my-output-topic-label: my-labeled-topic-output
      outputTopic: my-output-topic
      schemaRegistryUrl: http://localhost:8081/
    livenessProbe: {}
    podAnnotations: {}
    podLabels: {}
    ports: []
    readinessProbe: {}
    secretFilesRefs: []
    secretRefs: {}
    secrets: {}
    statefulSet: false
    tolerations: []
  version: 3.0.3

