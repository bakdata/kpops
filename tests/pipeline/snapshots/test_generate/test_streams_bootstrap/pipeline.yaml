- type: my-producer-app
  name: my-producer-app
  prefix: resources-streams-bootstrap-
  to:
    topics:
      my-producer-app-output-topic:
        type: output
        configs: {}
      my-labeled-producer-app-topic-output:
        configs: {}
        label: my-producer-app-output-topic-label
    models: {}
  namespace: example-namespace
  values:
    image: my-registry/my-producer-image
    imageTag: 1.0.0
    imagePullPolicy: IfNotPresent
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      labeledOutputTopics:
        my-producer-app-output-topic-label: my-labeled-producer-app-topic-output
      outputTopic: my-producer-app-output-topic
    commandLine:
      STR: fake-arg-value
      BOOL: true
      INT: 1
      FLOAT: 0.1
    files:
      log4j2.xml:
        mountPath: app/resources
        content: |
          <?xml version="1.0" encoding="UTF-8"?>
          <Configuration>
              <Appenders>
                  <Console name="Console" target="SYSTEM_OUT">
                      <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n"/>
                  </Console>
              </Appenders>
              <Loggers>
                  <Root level="info">
                      <AppenderRef ref="Console"/>
                  </Root>
              </Loggers>
          </Configuration>
    schedule: 30 3/8 * * *
  version: 3.6.1
  helm_release_name: resources-streams-bootstrap-my-producer-app
  helm_name_override: resources-streams-bootstrap-my-producer-app
- type: my-streams-app
  name: my-streams-app
  prefix: resources-streams-bootstrap-
  from:
    topics:
      my-input-topic:
        type: input
      my-labeled-input-topic:
        label: my-input-topic-label
      my-input-pattern:
        type: pattern
      my-labeled-input-pattern:
        type: pattern
        label: my-input-topic-labeled-pattern
    components: {}
  to:
    topics:
      my-output-topic:
        type: output
        configs: {}
      my-error-topic:
        type: error
        configs: {}
      my-labeled-topic-output:
        configs: {}
        label: my-output-topic-label
      resources-streams-bootstrap-my-streams-app-error:
        type: error
        value_schema: com.bakdata.kafka.DeadLetter
        partitions_count: 1
        configs:
          cleanup.policy: compact,delete
    models: {}
  namespace: example-namespace
  values:
    image: my-registry/my-streams-app-image
    imageTag: 1.0.0
    imagePullPolicy: IfNotPresent
    kafka:
      bootstrapServers: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
      schemaRegistryUrl: http://localhost:8081/
      labeledOutputTopics:
        my-output-topic-label: my-labeled-topic-output
      outputTopic: my-output-topic
      applicationId: my-streams-app-id
      inputTopics:
        - my-input-topic
      inputPattern: my-input-pattern
      labeledInputTopics:
        my-input-topic-label:
          - my-labeled-input-topic
      labeledInputPatterns:
        my-input-topic-labeled-pattern: my-labeled-input-pattern
      errorTopic: resources-streams-bootstrap-my-streams-app-error
      config:
        large.message.id.generator: com.bakdata.kafka.MurmurHashIdGenerator
    commandLine:
      CONVERT_XML: true
    files:
      log4j2.xml:
        mountPath: app/resources
        content: |
          <?xml version="1.0" encoding="UTF-8"?>
          <Configuration>
              <Appenders>
                  <Console name="Console" target="SYSTEM_OUT">
                      <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n"/>
                  </Console>
              </Appenders>
              <Loggers>
                  <Root level="info">
                      <AppenderRef ref="Console"/>
                  </Root>
              </Loggers>
          </Configuration>
    javaOptions:
      maxRAMPercentage: 85
      others: []
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
                - key: foo
                  operator: Exists
                  values: []
            weight: 2
          - preference:
              matchExpressions:
                - key: bar
                  operator: DoesNotExist
                  values: []
            weight: 1
    statefulSet: false
  version: 3.6.1
  helm_release_name: resources-streams-bootstrap-my-streams-app
  helm_name_override: resources-streams-bootstrap-my-streams-app
