---
apiVersion: v1
data:
  log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration>
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n"/>
            </Console>
        </Appenders>
        <Loggers>
            <Root level="info">
                <AppenderRef ref="Console"/>
            </Root>
        </Loggers>
    </Configuration>
kind: ConfigMap
metadata:
  name: resources-streams-bootstrap-my-producer-app

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app: resources-streams-bootstrap-my-producer-app
    chart: producer-app-3.6.0
    release: resources-streams-bootstrap-my-producer-app
    streams-bootstrap/kind: producer-app
  name: resources-streams-bootstrap-my-producer-app
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 6
      template:
        metadata:
          labels:
            app: resources-streams-bootstrap-my-producer-app
            release: resources-streams-bootstrap-my-producer-app
            streams-bootstrap/kind: producer-app
        spec:
          containers:
            - env:
                - name: ENV_PREFIX
                  value: APP_
                - name: APP_BOOTSTRAP_SERVERS
                  value: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
                - name: APP_SCHEMA_REGISTRY_URL
                  value: http://localhost:8081/
                - name: APP_OUTPUT_TOPIC
                  value: my-producer-app-output-topic
                - name: APP_LABELED_OUTPUT_TOPICS
                  value: my-producer-app-output-topic-label=my-labeled-producer-app-topic-output,
                - name: APP_BOOL
                  value: 'true'
                - name: APP_FLOAT
                  value: '0.1'
                - name: APP_INT
                  value: '1'
                - name: APP_STR
                  value: fake-arg-value
                - name: JAVA_TOOL_OPTIONS
                  value: '-XX:MaxRAMPercentage=75.0 '
              image: my-registry/my-producer-image:1.0.0
              imagePullPolicy: IfNotPresent
              name: resources-streams-bootstrap-my-producer-app
              resources:
                limits:
                  cpu: 500m
                  memory: 2G
                requests:
                  cpu: 200m
                  memory: 300Mi
              volumeMounts:
                - mountPath: app/resources/log4j2.xml
                  name: config
                  subPath: log4j2.xml
          restartPolicy: OnFailure
          volumes:
            - configMap:
                name: resources-streams-bootstrap-my-producer-app
              name: config
  schedule: 30 3/8 * * *
  successfulJobsHistoryLimit: 1
  suspend: false

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: my-cluster
  name: my-producer-app-output-topic
spec:
  config: {}
  partitions: 1
  replicas: 1

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: my-cluster
  name: my-labeled-producer-app-topic-output
spec:
  config: {}
  partitions: 1
  replicas: 1

---
apiVersion: v1
data:
  log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration>
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n"/>
            </Console>
        </Appenders>
        <Loggers>
            <Root level="info">
                <AppenderRef ref="Console"/>
            </Root>
        </Loggers>
    </Configuration>
kind: ConfigMap
metadata:
  name: resources-streams-bootstrap-my-streams-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    consumerGroup: my-streams-app-id
  labels:
    app: resources-streams-bootstrap-my-streams-app
    chart: streams-app-3.6.0
    release: resources-streams-bootstrap-my-streams-app
    streams-bootstrap/kind: streams-app
  name: resources-streams-bootstrap-my-streams-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resources-streams-bootstrap-my-streams-app
      release: resources-streams-bootstrap-my-streams-app
  template:
    metadata:
      annotations:
        checksum/config: 7fa55f62bffb69b723535187aa4e5ee14a91be308d56f5a8ca49c3159bf80aef
      labels:
        app: resources-streams-bootstrap-my-streams-app
        release: resources-streams-bootstrap-my-streams-app
        streams-bootstrap/kind: streams-app
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: foo
                    operator: Exists
              weight: 2
            - preference:
                matchExpressions:
                  - key: bar
                    operator: DoesNotExist
              weight: 1
      containers:
        - env:
            - name: ENV_PREFIX
              value: APP_
            - name: KAFKA_LARGE_MESSAGE_ID_GENERATOR
              value: com.bakdata.kafka.MurmurHashIdGenerator
            - name: APP_VOLATILE_GROUP_INSTANCE_ID
              value: 'true'
            - name: APP_BOOTSTRAP_SERVERS
              value: http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092
            - name: APP_SCHEMA_REGISTRY_URL
              value: http://localhost:8081/
            - name: APP_INPUT_TOPICS
              value: my-input-topic
            - name: APP_INPUT_PATTERN
              value: my-input-pattern
            - name: APP_OUTPUT_TOPIC
              value: my-output-topic
            - name: APP_ERROR_TOPIC
              value: resources-streams-bootstrap-my-streams-app-error
            - name: APP_LABELED_OUTPUT_TOPICS
              value: my-output-topic-label=my-labeled-topic-output,
            - name: APP_LABELED_INPUT_TOPICS
              value: my-input-topic-label=my-labeled-input-topic,
            - name: APP_LABELED_INPUT_PATTERNS
              value: my-input-topic-labeled-pattern=my-labeled-input-pattern,
            - name: APP_APPLICATION_ID
              value: my-streams-app-id
            - name: APP_CONVERT_XML
              value: 'true'
            - name: JAVA_TOOL_OPTIONS
              value: '-Dcom.sun.management.jmxremote.port=5555 -Dcom.sun.management.jmxremote.authenticate=false
                -Dcom.sun.management.jmxremote.ssl=false -XX:MaxRAMPercentage=85.0 '
          image: my-registry/my-streams-app-image:1.0.0
          imagePullPolicy: IfNotPresent
          name: resources-streams-bootstrap-my-streams-app
          resources:
            limits:
              cpu: 500m
              memory: 2G
            requests:
              cpu: 200m
              memory: 300Mi
          volumeMounts:
            - mountPath: app/resources/log4j2.xml
              name: config
              subPath: log4j2.xml
      terminationGracePeriodSeconds: 300
      volumes:
        - configMap:
            name: resources-streams-bootstrap-my-streams-app
          name: config

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: my-cluster
  name: my-output-topic
spec:
  config: {}
  partitions: 1
  replicas: 1

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: my-cluster
  name: my-error-topic
spec:
  config: {}
  partitions: 1
  replicas: 1

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: my-cluster
  name: my-labeled-topic-output
spec:
  config: {}
  partitions: 1
  replicas: 1

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: my-cluster
  name: resources-streams-bootstrap-my-streams-app-error
spec:
  config:
    cleanup.policy: compact,delete
  partitions: 1
  replicas: 1

