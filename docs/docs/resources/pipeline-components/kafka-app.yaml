# Base component for Kafka-based components.
# Producer or streaming apps should inherit from this class.
- type: kafka-app # required
  name: kafka-app # required
  # Pipeline prefix that will prefix every component name. If you wish to not
  # have any prefix you can specify an empty string.
  prefix: ${pipeline_name}-
  # Topic(s) from which the component will read input
  from: # Must not be null
    topics: # read from topic
      ${pipeline_name}-input-topic:
        type: input # required
        # role: topic-role # only used if type is `extra` or `extra-pattern`
    components: # read from specific component
      producer-app:
        type: input # required
  # Topic(s) into which the component will write output
  to:
    topics:
      ${pipeline_name}-output-topic:
        type: output # required
        # role: topic-role # only used if type is `extra`
        key_schema: key-schema # must implement SchemaProvider to use
        value_schema: value-schema
        partitions_count: 1
        replication_factor: 1
        configs: # https://kafka.apache.org/documentation/#topicconfigs
          cleanup.policy: compact
    models: # SchemaProvider is initiated with the values given here
      model: model
  namespace: namespace # required
  # `app` can contain application-specific settings, hence  the user is free to
  # add the key-value pairs they need.
  app: # required
    streams: # required
      brokers: ${brokers} # required
      schemaRegistryUrl: ${schema_registry_url}
    nameOverride: override-with-this-name # kafka-app-specific
    imageTag: "1.0.0" # Example values that are shared between streams-app and producer-app 
  # Topic(s) from which the component will read input
  # from: # Not advised to ever be used in `kafka-app` as it isn't supported by
  # `producer`
  # Topic(s) into which the component will write output
  to:
    topics: # required
      ${pipeline_name}-output-topic:
        type: output # Implied when role is NOT specified
      ${pipeline_name}-extra-topic:
        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined
      ${pipeline_name}-error-topic:
        type: error
        # Currently KPOps supports Avro and JSON schemas.
        keySchema: key-schema # must implement SchemaProvider to use
        valueSchema: value-schema
        partitions_count: 1
        replication_factor: 1
        configs: # https://kafka.apache.org/documentation/#topicconfigs
          cleanup.policy: compact
    models: # SchemaProvider is initiated with the values given here
      model: model
  # Pipeline prefix that will prefix every component name. If you wish to not 
  # have any prefix you can specify an empty string.
  prefix: ${pipeline_name}-
  # Helm repository configuration, the default value is given here
  repoConfig:
    repositoryName: bakdata-streams-bootstrap # required
    url: https://bakdata.github.io/streams-bootstrap/ # required
    repo_auth_flags:
      username: user
      password: pass
      ca_file: /home/user/path/to/ca-file
      insecure_skip_tls_verify: false
  version: "2.12.0" # Helm chart version
