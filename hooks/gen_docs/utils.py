import inspect
import shutil
from pathlib import Path
from tempfile import TemporaryFile

from hooks import ROOT


def copy_file(
    source: Path,
    dest: Path,
    *,
    add_header: bool = True,
    header: str | None = None,
) -> None:
    r"""Copy file from 1 location to another, optionally add a header.

    :param source: Path to file to be copied
    :param dest: Path to new file
    :param add_header: Whether to add header, defaults to True
    :param header: Will be placed at the top of the file, defaults to
        ``f"<!-- This file is autogenerated by {Path(__file__).relative_to(ROOT)}. -->"``
        NOTE: The default header will only contain correct information if the caller of
        this function is the one which should be referenced in the header
    """
    with dest.open("w+") as file_dest, source.open("r") as file_source:
        if not add_header:
            shutil.copyfileobj(file_source, file_dest)
            return
        if header is None:
            header = f"<!-- This file is autogenerated by {Path(inspect.stack()[1].filename).relative_to(ROOT)}. -->"
        with TemporaryFile(mode="w+") as file_header:
            file_header.write(header)
            file_header.write("\n\n")
            file_header.seek(0)
            shutil.copyfileobj(file_header, file_dest)
            shutil.copyfileobj(file_source, file_dest)
