{"config": {"lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "developer/api/", "title": "Python API", "text": ""}, {"location": "developer/api/#kpops.api", "title": "kpops.api", "text": ""}, {"location": "developer/api/#kpops.api.clean", "title": "clean", "text": "<pre><code>clean(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n)\n</code></pre> <p>Clean pipeline steps.</p> PARAMETER DESCRIPTION <code>pipeline_path</code> <p>Path to pipeline definition yaml file.</p> <p> TYPE: <code>Path</code> </p> <code>dotenv</code> <p>Paths to dotenv files.</p> <p> TYPE: <code>list[Path] | None</code> DEFAULT: <code>None</code> </p> <code>config</code> <p>Path to the dir containing config.yaml files.</p> <p> TYPE: <code>Path | None</code> DEFAULT: <code>None</code> </p> <code>steps</code> <p>Set of steps (components) to apply the command on.</p> <p> TYPE: <code>set[str] | None</code> DEFAULT: <code>None</code> </p> <code>filter_type</code> <p>Whether <code>steps</code> should include/exclude the steps.</p> <p> TYPE: <code>FilterType</code> DEFAULT: <code>INCLUDE</code> </p> <code>dry_run</code> <p>Whether to dry run the command or execute it.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>environment</code> <p>The environment to generate and deploy the pipeline to.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p> <code>verbose</code> <p>Enable verbose printing.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>parallel</code> <p>Enable or disable parallel execution of pipeline steps.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> Source code in <code>kpops/api/__init__.py</code> <pre><code>def clean(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n):\n    \"\"\"Clean pipeline steps.\n\n    :param pipeline_path: Path to pipeline definition yaml file.\n    :param dotenv: Paths to dotenv files.\n    :param config: Path to the dir containing config.yaml files.\n    :param steps: Set of steps (components) to apply the command on.\n    :param filter_type: Whether `steps` should include/exclude the steps.\n    :param dry_run: Whether to dry run the command or execute it.\n    :param environment: The environment to generate and deploy the pipeline to.\n    :param verbose: Enable verbose printing.\n    :param parallel: Enable or disable parallel execution of pipeline steps.\n    \"\"\"\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n    )\n\n    async def clean_runner(component: PipelineComponent):\n        log_action(\"Clean\", component)\n        await component.clean(dry_run)\n\n    async def async_clean():\n        if parallel:\n            pipeline_tasks = pipeline.build_execution_graph(clean_runner, reverse=True)\n            await pipeline_tasks\n        else:\n            for component in reversed(pipeline.components):\n                await clean_runner(component)\n\n    asyncio.run(async_clean())\n</code></pre>"}, {"location": "developer/api/#kpops.api.deploy", "title": "deploy", "text": "<pre><code>deploy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n)\n</code></pre> <p>Deploy pipeline steps.</p> PARAMETER DESCRIPTION <code>pipeline_path</code> <p>Path to pipeline definition yaml file.</p> <p> TYPE: <code>Path</code> </p> <code>dotenv</code> <p>Paths to dotenv files.</p> <p> TYPE: <code>list[Path] | None</code> DEFAULT: <code>None</code> </p> <code>config</code> <p>Path to the dir containing config.yaml files.</p> <p> TYPE: <code>Path | None</code> DEFAULT: <code>None</code> </p> <code>steps</code> <p>Set of steps (components) to apply the command on.</p> <p> TYPE: <code>set[str] | None</code> DEFAULT: <code>None</code> </p> <code>filter_type</code> <p>Whether <code>steps</code> should include/exclude the steps.</p> <p> TYPE: <code>FilterType</code> DEFAULT: <code>INCLUDE</code> </p> <code>dry_run</code> <p>Whether to dry run the command or execute it.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>environment</code> <p>The environment to generate and deploy the pipeline to.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p> <code>verbose</code> <p>Enable verbose printing.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>parallel</code> <p>Enable or disable parallel execution of pipeline steps.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> Source code in <code>kpops/api/__init__.py</code> <pre><code>def deploy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n):\n    \"\"\"Deploy pipeline steps.\n\n    :param pipeline_path: Path to pipeline definition yaml file.\n    :param dotenv: Paths to dotenv files.\n    :param config: Path to the dir containing config.yaml files.\n    :param steps: Set of steps (components) to apply the command on.\n    :param filter_type: Whether `steps` should include/exclude the steps.\n    :param dry_run: Whether to dry run the command or execute it.\n    :param environment: The environment to generate and deploy the pipeline to.\n    :param verbose: Enable verbose printing.\n    :param parallel: Enable or disable parallel execution of pipeline steps.\n    \"\"\"\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n    )\n\n    async def deploy_runner(component: PipelineComponent):\n        log_action(\"Deploy\", component)\n        await component.deploy(dry_run)\n\n    async def async_deploy():\n        if parallel:\n            pipeline_tasks = pipeline.build_execution_graph(deploy_runner)\n            await pipeline_tasks\n        else:\n            for component in pipeline.components:\n                await deploy_runner(component)\n\n    asyncio.run(async_deploy())\n</code></pre>"}, {"location": "developer/api/#kpops.api.destroy", "title": "destroy", "text": "<pre><code>destroy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n)\n</code></pre> <p>Destroy pipeline steps.</p> PARAMETER DESCRIPTION <code>pipeline_path</code> <p>Path to pipeline definition yaml file.</p> <p> TYPE: <code>Path</code> </p> <code>dotenv</code> <p>Paths to dotenv files.</p> <p> TYPE: <code>list[Path] | None</code> DEFAULT: <code>None</code> </p> <code>config</code> <p>Path to the dir containing config.yaml files.</p> <p> TYPE: <code>Path | None</code> DEFAULT: <code>None</code> </p> <code>steps</code> <p>Set of steps (components) to apply the command on.</p> <p> TYPE: <code>set[str] | None</code> DEFAULT: <code>None</code> </p> <code>filter_type</code> <p>Whether <code>steps</code> should include/exclude the steps.</p> <p> TYPE: <code>FilterType</code> DEFAULT: <code>INCLUDE</code> </p> <code>dry_run</code> <p>Whether to dry run the command or execute it.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>environment</code> <p>The environment to generate and deploy the pipeline to.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p> <code>verbose</code> <p>Enable verbose printing.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>parallel</code> <p>Enable or disable parallel execution of pipeline steps.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> Source code in <code>kpops/api/__init__.py</code> <pre><code>def destroy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n):\n    \"\"\"Destroy pipeline steps.\n\n    :param pipeline_path: Path to pipeline definition yaml file.\n    :param dotenv: Paths to dotenv files.\n    :param config: Path to the dir containing config.yaml files.\n    :param steps: Set of steps (components) to apply the command on.\n    :param filter_type: Whether `steps` should include/exclude the steps.\n    :param dry_run: Whether to dry run the command or execute it.\n    :param environment: The environment to generate and deploy the pipeline to.\n    :param verbose: Enable verbose printing.\n    :param parallel: Enable or disable parallel execution of pipeline steps.\n    \"\"\"\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n    )\n\n    async def destroy_runner(component: PipelineComponent):\n        log_action(\"Destroy\", component)\n        await component.destroy(dry_run)\n\n    async def async_destroy():\n        if parallel:\n            pipeline_tasks = pipeline.build_execution_graph(\n                destroy_runner, reverse=True\n            )\n            await pipeline_tasks\n        else:\n            for component in reversed(pipeline.components):\n                await destroy_runner(component)\n\n    asyncio.run(async_destroy())\n</code></pre>"}, {"location": "developer/api/#kpops.api.generate", "title": "generate", "text": "<pre><code>generate(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = False,\n    operation_mode: OperationMode = OperationMode.MANAGED,\n) -&gt; Pipeline\n</code></pre> <p>Generate enriched pipeline representation.</p> PARAMETER DESCRIPTION <code>pipeline_path</code> <p>Path to pipeline definition yaml file.</p> <p> TYPE: <code>Path</code> </p> <code>dotenv</code> <p>Paths to dotenv files.</p> <p> TYPE: <code>list[Path] | None</code> DEFAULT: <code>None</code> </p> <code>config</code> <p>Path to the dir containing config.yaml files.</p> <p> TYPE: <code>Path | None</code> DEFAULT: <code>None</code> </p> <code>steps</code> <p>Set of steps (components) to apply the command on.</p> <p> TYPE: <code>set[str] | None</code> DEFAULT: <code>None</code> </p> <code>filter_type</code> <p>Whether <code>steps</code> should include/exclude the steps.</p> <p> TYPE: <code>FilterType</code> DEFAULT: <code>INCLUDE</code> </p> <code>environment</code> <p>The environment to generate and deploy the pipeline to.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p> <code>verbose</code> <p>Enable verbose printing.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>operation_mode</code> <p>How KPOps should operate.</p> <p> TYPE: <code>OperationMode</code> DEFAULT: <code>MANAGED</code> </p> RETURNS DESCRIPTION <code>Pipeline</code> <p>Generated <code>Pipeline</code> object.</p> Source code in <code>kpops/api/__init__.py</code> <pre><code>def generate(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = False,\n    operation_mode: OperationMode = OperationMode.MANAGED,\n) -&gt; Pipeline:\n    \"\"\"Generate enriched pipeline representation.\n\n    :param pipeline_path: Path to pipeline definition yaml file.\n    :param dotenv: Paths to dotenv files.\n    :param config: Path to the dir containing config.yaml files.\n    :param steps: Set of steps (components) to apply the command on.\n    :param filter_type: Whether `steps` should include/exclude the steps.\n    :param environment: The environment to generate and deploy the pipeline to.\n    :param verbose: Enable verbose printing.\n    :param operation_mode: How KPOps should operate.\n    :return: Generated `Pipeline` object.\n    \"\"\"\n    kpops_config = KpopsConfig.create(\n        config, dotenv, environment, verbose, operation_mode\n    )\n    pipeline = _create_pipeline(pipeline_path, kpops_config, environment)\n    log.info(f\"Picked up pipeline '{pipeline_path.parent.name}'\")\n    if steps:\n        component_names = steps\n        log.debug(\n            f\"KPOPS_PIPELINE_STEPS is defined with values: {component_names} and filter type of {filter_type.value}\"\n        )\n\n        predicate = filter_type.create_default_step_names_filter_predicate(\n            component_names\n        )\n        pipeline.filter(predicate)\n        log.info(f\"Filtered pipeline:\\n{pipeline.step_names}\")\n    return pipeline\n</code></pre>"}, {"location": "developer/api/#kpops.api.init", "title": "init", "text": "<pre><code>init(path: Path, config_include_optional: bool = False)\n</code></pre> <p>Initiate a default empty project.</p> PARAMETER DESCRIPTION <code>path</code> <p>Directory in which the project should be initiated.</p> <p> TYPE: <code>Path</code> </p> <code>config_include_optional</code> <p>Whether to include non-required settings in the generated config file.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> Source code in <code>kpops/api/__init__.py</code> <pre><code>def init(\n    path: Path,\n    config_include_optional: bool = False,\n):\n    \"\"\"Initiate a default empty project.\n\n    :param path: Directory in which the project should be initiated.\n    :param config_include_optional: Whether to include non-required settings\n        in the generated config file.\n    \"\"\"\n    if not path.exists():\n        path.mkdir(parents=False)\n    elif next(path.iterdir(), False):\n        log.warning(\"Please provide a path to an empty directory.\")\n        return\n    init_project(path, config_include_optional)\n</code></pre>"}, {"location": "developer/api/#kpops.api.manifest_clean", "title": "manifest_clean", "text": "<pre><code>manifest_clean(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]\n</code></pre> Source code in <code>kpops/api/__init__.py</code> <pre><code>def manifest_clean(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]:\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n        operation_mode=operation_mode,\n    )\n    for component in pipeline.components:\n        resource = component.manifest_clean()\n        yield resource\n</code></pre>"}, {"location": "developer/api/#kpops.api.manifest_deploy", "title": "manifest_deploy", "text": "<pre><code>manifest_deploy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]\n</code></pre> Source code in <code>kpops/api/__init__.py</code> <pre><code>def manifest_deploy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]:\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n        operation_mode=operation_mode,\n    )\n    for component in pipeline.components:\n        resource = component.manifest_deploy()\n        yield resource\n</code></pre>"}, {"location": "developer/api/#kpops.api.manifest_destroy", "title": "manifest_destroy", "text": "<pre><code>manifest_destroy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]\n</code></pre> Source code in <code>kpops/api/__init__.py</code> <pre><code>def manifest_destroy(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]:\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n        operation_mode=operation_mode,\n    )\n    for component in pipeline.components:\n        resource = component.manifest_destroy()\n        yield resource\n</code></pre>"}, {"location": "developer/api/#kpops.api.manifest_reset", "title": "manifest_reset", "text": "<pre><code>manifest_reset(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]\n</code></pre> Source code in <code>kpops/api/__init__.py</code> <pre><code>def manifest_reset(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    verbose: bool = True,\n    operation_mode: OperationMode = OperationMode.MANIFEST,\n) -&gt; Iterator[tuple[KubernetesManifest, ...]]:\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n        operation_mode=operation_mode,\n    )\n    for component in pipeline.components:\n        resource = component.manifest_reset()\n        yield resource\n</code></pre>"}, {"location": "developer/api/#kpops.api.reset", "title": "reset", "text": "<pre><code>reset(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n)\n</code></pre> <p>Reset pipeline steps.</p> PARAMETER DESCRIPTION <code>pipeline_path</code> <p>Path to pipeline definition yaml file.</p> <p> TYPE: <code>Path</code> </p> <code>dotenv</code> <p>Paths to dotenv files.</p> <p> TYPE: <code>list[Path] | None</code> DEFAULT: <code>None</code> </p> <code>config</code> <p>Path to the dir containing config.yaml files.</p> <p> TYPE: <code>Path | None</code> DEFAULT: <code>None</code> </p> <code>steps</code> <p>Set of steps (components) to apply the command on.</p> <p> TYPE: <code>set[str] | None</code> DEFAULT: <code>None</code> </p> <code>filter_type</code> <p>Whether <code>steps</code> should include/exclude the steps.</p> <p> TYPE: <code>FilterType</code> DEFAULT: <code>INCLUDE</code> </p> <code>dry_run</code> <p>Whether to dry run the command or execute it.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>environment</code> <p>The environment to generate and deploy the pipeline to.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p> <code>verbose</code> <p>Enable verbose printing.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>parallel</code> <p>Enable or disable parallel execution of pipeline steps.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> Source code in <code>kpops/api/__init__.py</code> <pre><code>def reset(\n    pipeline_path: Path,\n    dotenv: list[Path] | None = None,\n    config: Path | None = None,\n    steps: set[str] | None = None,\n    filter_type: FilterType = FilterType.INCLUDE,\n    environment: str | None = None,\n    dry_run: bool = True,\n    verbose: bool = True,\n    parallel: bool = False,\n):\n    \"\"\"Reset pipeline steps.\n\n    :param pipeline_path: Path to pipeline definition yaml file.\n    :param dotenv: Paths to dotenv files.\n    :param config: Path to the dir containing config.yaml files.\n    :param steps: Set of steps (components) to apply the command on.\n    :param filter_type: Whether `steps` should include/exclude the steps.\n    :param dry_run: Whether to dry run the command or execute it.\n    :param environment: The environment to generate and deploy the pipeline to.\n    :param verbose: Enable verbose printing.\n    :param parallel: Enable or disable parallel execution of pipeline steps.\n    \"\"\"\n    pipeline = generate(\n        pipeline_path=pipeline_path,\n        dotenv=dotenv,\n        config=config,\n        steps=steps,\n        filter_type=filter_type,\n        environment=environment,\n        verbose=verbose,\n    )\n\n    async def reset_runner(component: PipelineComponent):\n        log_action(\"Reset\", component)\n        await component.reset(dry_run)\n\n    async def async_reset():\n        if parallel:\n            pipeline_tasks = pipeline.build_execution_graph(reset_runner, reverse=True)\n            await pipeline_tasks\n        else:\n            for component in reversed(pipeline.components):\n                await reset_runner(component)\n\n    asyncio.run(async_reset())\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline", "title": "kpops.pipeline.Pipeline", "text": "<p>               Bases: <code>BaseModel</code></p> <p>Pipeline representation.</p> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>class Pipeline(BaseModel):\n    \"\"\"Pipeline representation.\"\"\"\n\n    _component_index: dict[str, PipelineComponent] = {}\n    _graph: nx.DiGraph[str] = nx.DiGraph()\n\n    model_config: ClassVar[ConfigDict] = ConfigDict(arbitrary_types_allowed=True)\n\n    @property\n    def step_names(self) -&gt; list[str]:\n        return [step.name for step in self.components]\n\n    @computed_field(title=\"Components\")\n    @property\n    def components(self) -&gt; list[SerializeAsAny[PipelineComponent]]:\n        return list(self._component_index.values())\n\n    @property\n    def last(self) -&gt; PipelineComponent:\n        return self.components[-1]\n\n    def add(self, component: PipelineComponent) -&gt; None:\n        if self._component_index.get(component.id) is not None:\n            msg = (\n                f\"Pipeline steps must have unique id, '{component.id}' already exists.\"\n            )\n            raise ValidationError(msg)\n        self._component_index[component.id] = component\n        self.__add_to_graph(component)\n\n    def remove(self, component_id: str) -&gt; None:\n        self._component_index.pop(component_id)\n\n    def get(self, component_id: str) -&gt; PipelineComponent | None:\n        return self._component_index.get(component_id)\n\n    def find(self, predicate: ComponentFilterPredicate) -&gt; Iterator[PipelineComponent]:\n        \"\"\"Find pipeline components matching a custom predicate.\n\n        :param predicate: Filter function,\n            returns boolean value whether the component should be kept or removed\n        :returns: Iterator of components matching the predicate\n        \"\"\"\n        for component in self.components:\n            if predicate(component):\n                yield component\n\n    def filter(self, predicate: ComponentFilterPredicate) -&gt; None:\n        \"\"\"Filter pipeline components using a custom predicate.\n\n        :param predicate: Filter function,\n            returns boolean value whether the component should be kept or removed\n        \"\"\"\n        for component in self.components:\n            # filter out components not matching the predicate\n            if not predicate(component):\n                self.remove(component.id)\n\n    def validate(self) -&gt; None:  # pyright: ignore [reportIncompatibleMethodOverride]\n        self.__validate_graph()\n\n    def to_yaml(self) -&gt; str:\n        return yaml.dump(\n            [component.generate() for component in self.components],\n            Dumper=CustomSafeDumper,\n        )\n\n    def build_execution_graph(\n        self,\n        runner: Callable[[PipelineComponent], Coroutine[Any, Any, None]],\n        /,\n        reverse: bool = False,\n    ) -&gt; Awaitable[None]:\n        async def run_parallel_tasks(\n            coroutines: list[Coroutine[Any, Any, None]],\n        ) -&gt; None:\n            tasks: list[asyncio.Task[None]] = []\n            for coro in coroutines:\n                tasks.append(asyncio.create_task(coro))\n            await asyncio.gather(*tasks)\n\n        async def run_graph_tasks(pending_tasks: list[Awaitable[None]]) -&gt; None:\n            for pending_task in pending_tasks:\n                await pending_task\n\n        graph: nx.DiGraph[str] = self._graph.copy()\n\n        # We add an extra node to the graph, connecting all the leaf nodes to it\n        # in that way we make this node the root of the graph, avoiding backtracking\n        root_node = \"root_node_bfs\"\n        graph.add_node(root_node)\n\n        for node in graph:\n            predecessors = list(graph.predecessors(node))\n            if not predecessors:\n                graph.add_edge(root_node, node)\n\n        layers_graph: list[list[str]] = list(nx.bfs_layers(graph, root_node))\n\n        sorted_tasks: list[Awaitable[None]] = []\n        for layer in layers_graph[1:]:\n            if parallel_tasks := self.__get_parallel_tasks_from(layer, runner):\n                sorted_tasks.append(run_parallel_tasks(parallel_tasks))\n\n        if reverse:\n            sorted_tasks.reverse()\n\n        return run_graph_tasks(sorted_tasks)\n\n    def __getitem__(self, component_id: str) -&gt; PipelineComponent:\n        try:\n            return self._component_index[component_id]\n        except KeyError as exc:\n            msg = f\"Component {component_id} not found\"\n            raise ValueError(msg) from exc\n\n    def __bool__(self) -&gt; bool:\n        return bool(self._component_index)\n\n    def __iter__(self) -&gt; Iterator[PipelineComponent]:  # pyright: ignore [reportIncompatibleMethodOverride]\n        yield from self._component_index.values()\n\n    def __len__(self) -&gt; int:\n        return len(self.components)\n\n    def __add_to_graph(self, component: PipelineComponent):\n        self._graph.add_node(component.id)\n\n        for input_topic in component.inputs:\n            self.__add_input(input_topic.id, component.id)\n\n        for output_topic in component.outputs:\n            self.__add_output(output_topic.id, component.id)\n\n    def __add_output(self, topic_id: str, source: str) -&gt; None:\n        self._graph.add_node(topic_id)\n        self._graph.add_edge(source, topic_id)\n\n    def __add_input(self, topic_id: str, target: str) -&gt; None:\n        self._graph.add_node(topic_id)\n        self._graph.add_edge(topic_id, target)\n\n    def __get_parallel_tasks_from(\n        self,\n        layer: list[str],\n        runner: Callable[[PipelineComponent], Coroutine[Any, Any, None]],\n    ) -&gt; list[Coroutine[Any, Any, None]]:\n        def gen_parallel_tasks():\n            for node_in_layer in layer:\n                # check if component, skip topics\n                if (component := self._component_index.get(node_in_layer)) is not None:\n                    yield runner(component)\n\n        return list(gen_parallel_tasks())\n\n    def __validate_graph(self) -&gt; None:\n        if not nx.is_directed_acyclic_graph(self._graph):\n            msg = \"Pipeline is not a valid DAG.\"\n            raise ValueError(msg)\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.components", "title": "components  <code>property</code>", "text": "<pre><code>components: list[SerializeAsAny[PipelineComponent]]\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.last", "title": "last  <code>property</code>", "text": "<pre><code>last: PipelineComponent\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.step_names", "title": "step_names  <code>property</code>", "text": "<pre><code>step_names: list[str]\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.add", "title": "add", "text": "<pre><code>add(component: PipelineComponent) -&gt; None\n</code></pre> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def add(self, component: PipelineComponent) -&gt; None:\n    if self._component_index.get(component.id) is not None:\n        msg = (\n            f\"Pipeline steps must have unique id, '{component.id}' already exists.\"\n        )\n        raise ValidationError(msg)\n    self._component_index[component.id] = component\n    self.__add_to_graph(component)\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.build_execution_graph", "title": "build_execution_graph", "text": "<pre><code>build_execution_graph(\n    runner: Callable[\n        [PipelineComponent], Coroutine[Any, Any, None]\n    ],\n    /,\n    reverse: bool = False,\n) -&gt; Awaitable[None]\n</code></pre> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def build_execution_graph(\n    self,\n    runner: Callable[[PipelineComponent], Coroutine[Any, Any, None]],\n    /,\n    reverse: bool = False,\n) -&gt; Awaitable[None]:\n    async def run_parallel_tasks(\n        coroutines: list[Coroutine[Any, Any, None]],\n    ) -&gt; None:\n        tasks: list[asyncio.Task[None]] = []\n        for coro in coroutines:\n            tasks.append(asyncio.create_task(coro))\n        await asyncio.gather(*tasks)\n\n    async def run_graph_tasks(pending_tasks: list[Awaitable[None]]) -&gt; None:\n        for pending_task in pending_tasks:\n            await pending_task\n\n    graph: nx.DiGraph[str] = self._graph.copy()\n\n    # We add an extra node to the graph, connecting all the leaf nodes to it\n    # in that way we make this node the root of the graph, avoiding backtracking\n    root_node = \"root_node_bfs\"\n    graph.add_node(root_node)\n\n    for node in graph:\n        predecessors = list(graph.predecessors(node))\n        if not predecessors:\n            graph.add_edge(root_node, node)\n\n    layers_graph: list[list[str]] = list(nx.bfs_layers(graph, root_node))\n\n    sorted_tasks: list[Awaitable[None]] = []\n    for layer in layers_graph[1:]:\n        if parallel_tasks := self.__get_parallel_tasks_from(layer, runner):\n            sorted_tasks.append(run_parallel_tasks(parallel_tasks))\n\n    if reverse:\n        sorted_tasks.reverse()\n\n    return run_graph_tasks(sorted_tasks)\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.filter", "title": "filter", "text": "<pre><code>filter(predicate: ComponentFilterPredicate) -&gt; None\n</code></pre> <p>Filter pipeline components using a custom predicate.</p> PARAMETER DESCRIPTION <code>predicate</code> <p>Filter function, returns boolean value whether the component should be kept or removed</p> <p> TYPE: <code>ComponentFilterPredicate</code> </p> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def filter(self, predicate: ComponentFilterPredicate) -&gt; None:\n    \"\"\"Filter pipeline components using a custom predicate.\n\n    :param predicate: Filter function,\n        returns boolean value whether the component should be kept or removed\n    \"\"\"\n    for component in self.components:\n        # filter out components not matching the predicate\n        if not predicate(component):\n            self.remove(component.id)\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.find", "title": "find", "text": "<pre><code>find(\n    predicate: ComponentFilterPredicate,\n) -&gt; Iterator[PipelineComponent]\n</code></pre> <p>Find pipeline components matching a custom predicate.</p> PARAMETER DESCRIPTION <code>predicate</code> <p>Filter function, returns boolean value whether the component should be kept or removed</p> <p> TYPE: <code>ComponentFilterPredicate</code> </p> RETURNS DESCRIPTION <code>Iterator[PipelineComponent]</code> <p>Iterator of components matching the predicate</p> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def find(self, predicate: ComponentFilterPredicate) -&gt; Iterator[PipelineComponent]:\n    \"\"\"Find pipeline components matching a custom predicate.\n\n    :param predicate: Filter function,\n        returns boolean value whether the component should be kept or removed\n    :returns: Iterator of components matching the predicate\n    \"\"\"\n    for component in self.components:\n        if predicate(component):\n            yield component\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.get", "title": "get", "text": "<pre><code>get(component_id: str) -&gt; PipelineComponent | None\n</code></pre> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def get(self, component_id: str) -&gt; PipelineComponent | None:\n    return self._component_index.get(component_id)\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.remove", "title": "remove", "text": "<pre><code>remove(component_id: str) -&gt; None\n</code></pre> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def remove(self, component_id: str) -&gt; None:\n    self._component_index.pop(component_id)\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.to_yaml", "title": "to_yaml", "text": "<pre><code>to_yaml() -&gt; str\n</code></pre> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def to_yaml(self) -&gt; str:\n    return yaml.dump(\n        [component.generate() for component in self.components],\n        Dumper=CustomSafeDumper,\n    )\n</code></pre>"}, {"location": "developer/api/#kpops.pipeline.Pipeline.validate", "title": "validate", "text": "<pre><code>validate() -&gt; None\n</code></pre> Source code in <code>kpops/pipeline/__init__.py</code> <pre><code>def validate(self) -&gt; None:  # pyright: ignore [reportIncompatibleMethodOverride]\n    self.__validate_graph()\n</code></pre>"}, {"location": "developer/auto-generation/", "title": "Auto generation", "text": "<p>Auto generation happens mostly with Git hooks. You can find the <code>lefthook</code> configuration here. These pre-commit hooks call different Python scripts to auto generate code for the documentation.</p>"}, {"location": "developer/auto-generation/#generation-scripts-and-their-respective-files", "title": "Generation scripts and their respective files", "text": ""}, {"location": "developer/auto-generation/#documentation", "title": "Documentation", "text": ""}, {"location": "developer/auto-generation/#variables", "title": "Variables", "text": "<ul> <li><code>cli_env_vars.env</code> -- All CLI environment variables in a <code>dotenv</code> file.</li> <li><code>cli_env_vars.md</code> -- All CLI environment variables in a table.</li> <li><code>config_env_vars.env</code> -- Almost all pipeline config environment variables in a <code>dotenv</code> file. The script checks for each field in <code>KpopsConfig</code> whether it has an <code>env</code> attribute defined. The script is currently unable to visit the classes of fields like <code>topic_name_config</code>, hence any environment variables defined there would remain unknown to it.</li> <li><code>config_env_vars.env</code> -- Almost all pipeline config environment variables in a table.</li> <li><code>variable_substitution.yaml</code> -- A copy of <code>./tests/pipeline/resources/component-type-substitution/pipeline.yaml</code> used as an example of substitution.</li> </ul>"}, {"location": "developer/auto-generation/#cli-commands", "title": "CLI commands", "text": "<p>Generated by <code>typer-cli</code> from the code in <code>main.py</code>. It is called with Python's <code>subprocess</code> module.</p>"}, {"location": "developer/auto-generation/#pipeline-and-defaults-example-definitions", "title": "Pipeline and defaults example definitions", "text": "<p>Generates example <code>pipeline.yaml</code> and <code>defaults.yaml</code> for each individual component, stores them and also concatenates them into 1 big pipeline definition and 1 big pipeline defaults definition.</p> <p>User input</p> <ul> <li><code>headers/*\\.yaml</code> -- The top of each example. Includes a description comment, <code>type</code> and <code>name</code>. The headers for <code>pipeline.yaml</code> reside in the <code>pipeline-components</code> dir and the <code>defaults.yaml</code> headers reside in the <code>pipeline-defaults</code> dir. The names of the files must be equal to the respective component <code>type</code>.</li> <li><code>sections/*\\.yaml</code> -- Each YAML file contains a single section (component attribute) definition. The intention is to keep the minimal set of definitions there from which any component definition can be built. The names of the files must be equal to the respective component <code>type</code> and the attribute name. The sections are used for both <code>defaults.yaml</code> and <code>pipeline.yaml</code> generation and reside in the <code>pipeline-components</code> dir.</li> </ul> <p>Generated</p> <ul> <li><code>pipeline-components/dependencies/*</code>   Cached information about KPOps components</li> <li><code>pipeline_component_dependencies.yaml</code> -- Specifies per component which files in the <code>sections</code> dir should be used for the <code>pipeline.yaml</code> generation.</li> <li><code>defaults_pipeline_component_dependencies.yaml</code> -- Specifies per component which files in the <code>sections</code> dir should be used for the <code>defaults.yaml</code> generation.</li> <li><code>kpops_structure.yaml</code> -- Specifies the inheritance hierarchy of the components and what sections exist in each component.</li> <li><code>pipeline-components/*\\.yaml</code> -- All single-component pipeline definitions and one big (complete) <code>pipeline.yaml</code> that contains all of them.</li> <li><code>pipeline-defaults/*\\.yaml</code> -- All single-component defaults definitions and one big (complete) <code>defaults.yaml</code> that contains all of them.</li> </ul>"}, {"location": "developer/auto-generation/#editor-integration", "title": "Editor integration", "text": ""}, {"location": "developer/auto-generation/#schemas", "title": "Schemas", "text": "<ul> <li>config.json</li> <li>pipeline.json</li> </ul>"}, {"location": "developer/contributing/", "title": "How to contribute", "text": "<p>Welcome! We are glad to have you visit our contributing guide!</p> <p>If you find any bugs or have suggestions for improvements, please open an issue and optionally a pull request (PR). In the case of a PR, we would appreciate it if you preface it with an issue outlining your goal and means of achieving it.</p>"}, {"location": "developer/contributing/#git", "title": "git", "text": "<p>We are using git submodules to import the KPOps examples repository. You need to fetch the repository locally on your machine. To do so use this command:</p> <pre><code>git submodule init\ngit submodule update --recursive\n</code></pre> <p>This will fetch the resources under the <code>examples</code> folder.</p>"}, {"location": "developer/contributing/#style", "title": "Style", "text": "<p>We advise that you stick to our Git hooks for code linting, formatting, and auto-generation of documentation. After you install them using <code>lefthook install</code> they're triggered automatically during <code>git</code> operations, such as commit or checkout. Additionally, you can manually invoke them with <code>lefthook run pre-commit --all-files</code>. Please also install the <code>dprint</code> formatter.</p>"}, {"location": "developer/getting-started/", "title": "Getting started", "text": "<p>Welcome! We are glad to have you visit our developer guide! If you find any bugs or have suggestions for improvements, please open an issue and optionally a pull request (PR). In the case of a PR, we would appreciate it if you preface it with an issue outlining your goal and means of achieving it.</p> <p>Find more about our code-style or insights into KPOps' code base here in our developer guide.</p> <p>Work in progress</p> <p>The developer guide is still under construction. If you have a question left unanswered here, feel free to ask it by opening an issue.</p>"}, {"location": "user/changelog/", "title": "Changelog", "text": "<p>All notable changes to this project will be documented in this file.</p>"}, {"location": "user/changelog/#1011-2025-03-25", "title": "10.1.1 - 2025-03-25", "text": ""}, {"location": "user/changelog/#whats-changed", "title": "What's changed", "text": "<ul> <li>fix(kafka-connector): parse enum correctly by @disrupted in #619</li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/10.1.0...10.1.1</p>"}, {"location": "user/changelog/#1010-2025-03-20", "title": "10.1.0 - 2025-03-20", "text": ""}, {"location": "user/changelog/#whats-changed_1", "title": "What's changed", "text": "<ul> <li> <p>feat(kafka-connect): set connector state by @disrupted in #616</p> </li> <li> <p>Bump version 10.0.4 \u2192 10.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/10.0.4...10.1.0</p>"}, {"location": "user/changelog/#1004-2025-03-13", "title": "10.0.4 - 2025-03-13", "text": ""}, {"location": "user/changelog/#whats-changed_2", "title": "What's changed", "text": "<ul> <li> <p>Support streams-bootstrap v4 by @philipp94831 in #617</p> </li> <li> <p>Bump version 10.0.3 \u2192 10.0.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/10.0.3...10.0.4</p>"}, {"location": "user/changelog/#1003-2025-03-06", "title": "10.0.3 - 2025-03-06", "text": ""}, {"location": "user/changelog/#whats-changed_3", "title": "What's changed", "text": "<ul> <li> <p>refactor(api): improve typing by @disrupted in #612</p> </li> <li> <p>refactor(pydantic): create <code>SkipGenerate</code> type by @disrupted in #611</p> </li> <li> <p>refactor(cli): use annotated for typer option by @disrupted in #613</p> </li> <li> <p>fix(kafka-connector): destroy connector on reset by @disrupted in #615</p> </li> <li> <p>Bump version 10.0.2 \u2192 10.0.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/10.0.2...10.0.3</p>"}, {"location": "user/changelog/#1002-2025-03-04", "title": "10.0.2 - 2025-03-04", "text": ""}, {"location": "user/changelog/#whats-changed_4", "title": "What's changed", "text": "<ul> <li> <p>fix: hide _cleaner &amp; _resetter from generate output by @disrupted in #610</p> </li> <li> <p>Bump version 10.0.1 \u2192 10.0.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/10.0.1...10.0.2</p>"}, {"location": "user/changelog/#1001-2025-03-04", "title": "10.0.1 - 2025-03-04", "text": ""}, {"location": "user/changelog/#whats-changed_5", "title": "What's changed", "text": "<ul> <li> <p>chore: upgrade ruff by @disrupted in #606</p> </li> <li> <p>refactor(helm-app): make handlers private by @disrupted in #602</p> </li> <li> <p>refactor: switch to basedpyright by @disrupted in #604</p> </li> <li> <p>fix(helm-app): hide repo_config &amp; diff_config from generate output by @disrupted in #607</p> </li> <li> <p>fix(cleaner): enrich on init by @disrupted in #608</p> </li> <li> <p>Bump version 10.0.0 \u2192 10.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/10.0.0...10.0.1</p>"}, {"location": "user/changelog/#1000-2025-02-27", "title": "10.0.0 - 2025-02-27", "text": ""}, {"location": "user/changelog/#whats-changed_6", "title": "What's changed", "text": "<ul> <li> <p>refactor(helm-diff)!: define ignore keypath as array by @disrupted in #600</p> </li> <li> <p>refactor(helm-diff)!: configure on HelmApp component level by @disrupted in #601</p> </li> <li> <p>docs: create migration guide for v10 by @disrupted in #603</p> </li> <li> <p>Bump version 9.4.1 \u2192 10.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.4.1...10.0.0</p>"}, {"location": "user/changelog/#941-2025-02-26", "title": "9.4.1 - 2025-02-26", "text": ""}, {"location": "user/changelog/#whats-changed_7", "title": "What's changed", "text": "<ul> <li> <p>refactor(streams-bootstrap): update JMX remote specification by @philipp94831 in #599</p> </li> <li> <p>Bump version 9.4.0 \u2192 9.4.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.4.0...9.4.1</p>"}, {"location": "user/changelog/#940-2025-02-24", "title": "9.4.0 - 2025-02-24", "text": ""}, {"location": "user/changelog/#whats-changed_8", "title": "What's changed", "text": "<ul> <li> <p>refactor(streams-bootstrap): update JMX specification by @philipp94831 in #597</p> </li> <li> <p>Bump version 9.3.0 \u2192 9.4.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.3.0...9.4.0</p>"}, {"location": "user/changelog/#930-2025-02-03", "title": "9.3.0 - 2025-02-03", "text": ""}, {"location": "user/changelog/#whats-changed_9", "title": "What's changed", "text": "<ul> <li> <p>Use Pydantic <code>model_validate</code> to avoid Pyright warnings by @disrupted in #586</p> </li> <li> <p>Fix release commit message by @disrupted in #591</p> </li> <li> <p>Configure PyPI trusted publishing by @yannick-roeder in #592</p> </li> <li> <p>Migrate pre-commit hooks to lefthook by @disrupted in #584</p> </li> <li> <p>feat: support symbolic linked pipelines to avoid repetition by @daconstenla in #580</p> </li> <li> <p>fix: address CI warnings introduced by #580 by @disrupted in #594</p> </li> <li> <p>feat(streams-bootstrap): allow float values in command line by @disrupted in #593</p> </li> <li> <p>ci: run lint job only for target Python version on Linux by @disrupted in #596</p> </li> <li> <p>style: format YAML &amp; JSON by @disrupted in #595</p> </li> <li> <p>feat: support custom namespace configuration for <code>StrimziKafkaTopic</code> by @daconstenla in #581</p> </li> <li> <p>Bump version 9.2.1 \u2192 9.3.0 by @bakdata-bot</p> </li> </ul>"}, {"location": "user/changelog/#new-contributors", "title": "New Contributors", "text": "<ul> <li>@daconstenla made their first contribution in #581</li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.2.1...9.3.0</p>"}, {"location": "user/changelog/#921-2025-01-15", "title": "9.2.1 - 2025-01-15", "text": ""}, {"location": "user/changelog/#whats-changed_10", "title": "What's changed", "text": "<ul> <li> <p>Fix CI release and changelog by @disrupted in #590</p> </li> <li> <p>Bump version 9.2.1-dev \u2192 9.2.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.2.0-dev...9.2.1</p>"}, {"location": "user/changelog/#920-dev-2025-01-14", "title": "9.2.0-dev - 2025-01-14", "text": ""}, {"location": "user/changelog/#whats-changed_11", "title": "What's changed", "text": "<ul> <li> <p>Improve Pyright matcher by @disrupted in #579</p> </li> <li> <p>Migrate from Poetry to uv by @disrupted in #578</p> </li> <li> <p>Fix circular imports when running individual tests by @disrupted in #583</p> </li> <li> <p>Configure Pyright to report import cycles by @disrupted in #585</p> </li> <li> <p>Fix kpops package build by @disrupted in #588</p> </li> <li> <p>Fail if streams-boostrap v3 model is instantiated with v2 attribute by @disrupted in #587</p> </li> <li> <p>Bump version 9.1.0 \u2192 9.2.0-dev by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.1.0...9.2.0-dev</p>"}, {"location": "user/changelog/#910-2025-01-07", "title": "9.1.0 - 2025-01-07", "text": ""}, {"location": "user/changelog/#whats-changed_12", "title": "What's changed", "text": "<ul> <li> <p>Update CODEOWNERS by @raminqaf in #572</p> </li> <li> <p>Update test components to streams-bootstrap v3 by @disrupted in #576</p> </li> <li> <p>Silence deprecation warnings for streams-bootstrap v2 in tests by @disrupted in #577</p> </li> <li> <p>Represent multiline strings using YAML block style by @disrupted in #574</p> </li> <li> <p>Indent sequence items to follow style recommendations by @disrupted in #575</p> </li> <li> <p>Bump version 9.0.1 \u2192 9.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.0.1...9.1.0</p>"}, {"location": "user/changelog/#901-2024-12-20", "title": "9.0.1 - 2024-12-20", "text": ""}, {"location": "user/changelog/#whats-changed_13", "title": "What's changed", "text": "<ul> <li> <p>Add operation-mode documentation to mkdocs index by @raminqaf in #573</p> </li> <li> <p>Bump version 9.0.0 \u2192 9.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/9.0.0...9.0.1</p>"}, {"location": "user/changelog/#900-2024-12-20", "title": "9.0.0 - 2024-12-20", "text": ""}, {"location": "user/changelog/#whats-changed_14", "title": "What's changed", "text": "<ul> <li> <p>Merge main by @raminqaf</p> </li> <li> <p>Add topic manifestation of ProducerApps for reset command by @raminqaf in #566</p> </li> <li> <p>Add documentation for operation-mode in KPOps by @raminqaf in #565</p> </li> <li> <p>Merge branch 'main' into v9 by @raminqaf</p> </li> <li> <p>Merge branch 'v9' of github.com:bakdata/kpops into v9 by @raminqaf</p> </li> <li> <p>Set Python target version to 3.11 by @disrupted</p> </li> <li> <p>Hide <code>operation_mode</code> from KPOps config by @raminqaf in #571</p> </li> <li> <p>Add migration guide v8-v9 by @raminqaf in #562</p> </li> <li> <p>KPOps V9 by @raminqaf in #558</p> </li> <li> <p>Bump version 8.4.0 \u2192 9.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.4.0...9.0.0</p>"}, {"location": "user/changelog/#840-2024-12-18", "title": "8.4.0 - 2024-12-18", "text": ""}, {"location": "user/changelog/#whats-changed_15", "title": "What's changed", "text": "<ul> <li> <p>Create generic <code>SerializeAsOptional</code> type for Pydantic by @disrupted in #564</p> </li> <li> <p>Bump version 8.3.2 \u2192 8.4.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.3.2...8.4.0</p>"}, {"location": "user/changelog/#832-2024-12-17", "title": "8.3.2 - 2024-12-17", "text": ""}, {"location": "user/changelog/#whats-changed_16", "title": "What's changed", "text": "<ul> <li> <p>Fix allow optional resources requests and limits by @disrupted in #570</p> </li> <li> <p>Bump version 8.3.1 \u2192 8.3.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.3.1...8.3.2</p>"}, {"location": "user/changelog/#831-2024-12-17", "title": "8.3.1 - 2024-12-17", "text": ""}, {"location": "user/changelog/#whats-changed_17", "title": "What's changed", "text": "<ul> <li> <p>Fix Kubernetes memory not accepting decimal values by @disrupted in #568</p> </li> <li> <p>Add ephemeral storage to Kubernetes resource requests and limits by @disrupted in #569</p> </li> <li> <p>Bump version 8.3.0 \u2192 8.3.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.3.0...8.3.1</p>"}, {"location": "user/changelog/#830-2024-12-17", "title": "8.3.0 - 2024-12-17", "text": ""}, {"location": "user/changelog/#whats-changed_18", "title": "What's changed", "text": "<ul> <li> <p>Merge branch 'main' into v9 by @raminqaf</p> </li> <li> <p>Drop support for Python 3.10 by @disrupted in #561</p> </li> <li> <p>Manifest Kubernetes resources for <code>reset</code> command by @raminqaf in #563</p> </li> <li> <p>Add Kubernetes affinity and tolerations to streams-bootstrap v2 values by @disrupted in #567</p> </li> <li> <p>Bump version 8.2.0 \u2192 8.3.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.2.0...8.3.0</p>"}, {"location": "user/changelog/#820-2024-12-12", "title": "8.2.0 - 2024-12-12", "text": ""}, {"location": "user/changelog/#whats-changed_19", "title": "What's changed", "text": "<ul> <li> <p>merge by @raminqaf</p> </li> <li> <p>Manifest toSection with Strimzi KafkaTopic by @raminqaf in #545</p> </li> <li> <p>Manifest Kubernetes resources for <code>destroy</code> command by @raminqaf in #552</p> </li> <li> <p>Bump streams-bootstrap to 3.1.0 by @disrupted in #557</p> </li> <li> <p>Merge branch 'main' into v9 by @raminqaf</p> </li> <li> <p>Manifest Kubernetes resources for <code>clean</code> command by @raminqaf in #559</p> </li> <li> <p>Update KPOps example snapshots and fix broken link to defaults.yaml by @raminqaf in #560</p> </li> <li> <p>Merge branch 'main' into v9 by @raminqaf</p> </li> <li> <p>Add Pydantic models for Kubernetes Affinity by @disrupted in #555</p> </li> <li> <p>Bump version 8.1.4 \u2192 8.2.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.1.4...8.2.0</p>"}, {"location": "user/changelog/#814-2024-12-09", "title": "8.1.4 - 2024-12-09", "text": ""}, {"location": "user/changelog/#whats-changed_20", "title": "What's changed", "text": "<ul> <li> <p>Fix <code>kpops --version</code> by @disrupted in #551</p> </li> <li> <p>Trim Helm name override for Producer CronJob to 52 characters by @disrupted in #550</p> </li> <li> <p>Bump version 8.1.3 \u2192 8.1.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.1.3...8.1.4</p>"}, {"location": "user/changelog/#813-2024-12-05", "title": "8.1.3 - 2024-12-05", "text": ""}, {"location": "user/changelog/#whats-changed_21", "title": "What's changed", "text": "<ul> <li> <p>Merge branch 'main' of github.com:bakdata/kpops into v9 by @raminqaf</p> </li> <li> <p>Remove repeated defaults from streams-bootstrap values by @disrupted in #547</p> </li> <li> <p>Bump version 8.1.2 \u2192 8.1.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.1.2...8.1.3</p>"}, {"location": "user/changelog/#812-2024-12-04", "title": "8.1.2 - 2024-12-04", "text": ""}, {"location": "user/changelog/#whats-changed_22", "title": "What's changed", "text": "<ul> <li> <p>Introduce KPOps operation and manifest resources for deployment by @raminqaf in #541</p> </li> <li> <p>Define Pydantic model to representing Kubernetes manifest by @raminqaf in #546</p> </li> <li> <p>Convert all values of Kafka connector and topic config to string by @disrupted in #544</p> </li> <li> <p>Bump version 8.1.1 \u2192 8.1.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.1.1...8.1.2</p>"}, {"location": "user/changelog/#811-2024-12-02", "title": "8.1.1 - 2024-12-02", "text": ""}, {"location": "user/changelog/#whats-changed_23", "title": "What's changed", "text": "<ul> <li> <p>Fix <code>files</code> field value type in Streamsboostrap component by @raminqaf in #542</p> </li> <li> <p>Fix: Use enum values when dumping models by @raminqaf in #543</p> </li> <li> <p>Bump version 8.1.0 \u2192 8.1.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.1.0...8.1.1</p>"}, {"location": "user/changelog/#810-2024-10-25", "title": "8.1.0 - 2024-10-25", "text": ""}, {"location": "user/changelog/#whats-changed_24", "title": "What's changed", "text": "<ul> <li> <p>Upgrade typer to support union types by @raminqaf in #533</p> </li> <li> <p>Extend StreamsBootstrap model by @raminqaf in #534</p> </li> <li> <p>Bump version 8.0.1 \u2192 8.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.0.1...8.1.0</p>"}, {"location": "user/changelog/#801-2024-08-22", "title": "8.0.1 - 2024-08-22", "text": ""}, {"location": "user/changelog/#whats-changed_25", "title": "What's changed", "text": "<ul> <li> <p>Fix changelog in docs by @raminqaf in #532</p> </li> <li> <p>Bump version 8.0.0 \u2192 8.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/8.0.0...8.0.1</p>"}, {"location": "user/changelog/#800-2024-08-21", "title": "8.0.0 - 2024-08-21", "text": ""}, {"location": "user/changelog/#whats-changed_26", "title": "What's changed", "text": "<ul> <li> <p>Make KafkaApp responsible of deploying/cleaning streams bootstrap components (#522) by @raminqaf</p> </li> <li> <p>Add support for streams-bootstrap v3 (#519) by @raminqaf</p> </li> <li> <p>Rename role to label (#525) by @raminqaf</p> </li> <li> <p>Fix Pyright warning about type override without default value (#524) by @disrupted</p> </li> <li> <p>Remove v3 and suffix old streams bootstrap with v2 (#526) by @raminqaf</p> </li> <li> <p>KPOps <code>8.0.0</code> by @raminqaf in #531</p> </li> <li> <p>Bump version 7.1.0 \u2192 8.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/7.1.0...8.0.0</p>"}, {"location": "user/changelog/#710-2024-08-15", "title": "7.1.0 - 2024-08-15", "text": ""}, {"location": "user/changelog/#whats-changed_27", "title": "What's changed", "text": "<ul> <li> <p>Improve incomplete type hints by @disrupted in #515</p> </li> <li> <p>Fallback to user defined model when the validation of cluster model fails by @raminqaf in #521</p> </li> <li> <p>Fix incorrect parameter type annotation by @disrupted in #523</p> </li> <li> <p>Update pytest by @disrupted in #527</p> </li> <li> <p>Replace kubernetes-asyncio with lightkube by @disrupted in #517</p> </li> <li> <p>Bump version 7.0.0 \u2192 7.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/7.0.0...7.1.0</p>"}, {"location": "user/changelog/#700-2024-07-23", "title": "7.0.0 - 2024-07-23", "text": ""}, {"location": "user/changelog/#whats-changed_28", "title": "What's changed", "text": "<ul> <li> <p>Merge remote-tracking branch 'origin/main' into v7 by @disrupted</p> </li> <li> <p>Call destroy from inside of reset or clean by @raminqaf in #501</p> </li> <li> <p>clean/reset streams-bootstrap components with cluster values by @raminqaf in #498</p> </li> <li> <p>Rename app field by @disrupted in #506</p> </li> <li> <p>Fix circular dependency when running individual tests by @raminqaf</p> </li> <li> <p>Add tests for global config &amp; handlers by @disrupted</p> </li> <li> <p>Update examples by @disrupted</p> </li> <li> <p>Bump version 6.1.0 \u2192 7.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/6.1.0...7.0.0</p>"}, {"location": "user/changelog/#610-2024-07-09", "title": "6.1.0 - 2024-07-09", "text": ""}, {"location": "user/changelog/#whats-changed_29", "title": "What's changed", "text": "<ul> <li> <p>Add image tag field to streams-bootstrap app values by @raminqaf in #499</p> </li> <li> <p>Automatic loading of namespaced custom components by @disrupted in #500</p> </li> <li> <p>Improve dataclass instance check by @disrupted in #507</p> </li> <li> <p>Delete ignored keys from diff by @disrupted in #510</p> </li> <li> <p>Bump version 6.0.2 \u2192 6.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/6.0.2...6.1.0</p>"}, {"location": "user/changelog/#602-2024-07-04", "title": "6.0.2 - 2024-07-04", "text": ""}, {"location": "user/changelog/#whats-changed_30", "title": "What's changed", "text": "<ul> <li> <p>Update codeowners by @disrupted in #504</p> </li> <li> <p>Generate developer docs for Python API by @sujuka99 in #503</p> </li> <li> <p>Bump version 6.0.1 \u2192 6.0.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/6.0.1...6.0.2</p>"}, {"location": "user/changelog/#601-2024-06-12", "title": "6.0.1 - 2024-06-12", "text": ""}, {"location": "user/changelog/#whats-changed_31", "title": "What's changed", "text": "<ul> <li> <p>Fix connector resetter offset topic by @disrupted in #497</p> </li> <li> <p>Bump version 6.0.0 \u2192 6.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/6.0.0...6.0.1</p>"}, {"location": "user/changelog/#600-2024-06-06", "title": "6.0.0 - 2024-06-06", "text": ""}, {"location": "user/changelog/#whats-changed_32", "title": "What's changed", "text": "<ul> <li> <p>KPOps <code>6.0.0</code> by @raminqaf in #496</p> </li> <li> <p>Bump version 5.1.1 \u2192 6.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/5.1.1...6.0.0</p>"}, {"location": "user/changelog/#511-2024-05-22", "title": "5.1.1 - 2024-05-22", "text": ""}, {"location": "user/changelog/#whats-changed_33", "title": "What's changed", "text": "<ul> <li> <p>Add YAML separator (---) to stdout by @raminqaf in #491</p> </li> <li> <p>Bump version 5.1.0 \u2192 5.1.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/5.1.0...5.1.1</p>"}, {"location": "user/changelog/#510-2024-05-22", "title": "5.1.0 - 2024-05-22", "text": ""}, {"location": "user/changelog/#whats-changed_34", "title": "What's changed", "text": "<ul> <li> <p>Add computed field for Helm release name and name override by @disrupted in #490</p> </li> <li> <p>Bump version 5.0.1 \u2192 5.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/5.0.1...5.1.0</p>"}, {"location": "user/changelog/#501-2024-05-15", "title": "5.0.1 - 2024-05-15", "text": ""}, {"location": "user/changelog/#whats-changed_35", "title": "What's changed", "text": "<ul> <li> <p>Fix missing await on Kubernetes API by @raminqaf in #488</p> </li> <li> <p>Bump version 5.0.0 \u2192 5.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/5.0.0...5.0.1</p>"}, {"location": "user/changelog/#500-2024-05-02", "title": "5.0.0 - 2024-05-02", "text": ""}, {"location": "user/changelog/#whats-changed_36", "title": "What's changed", "text": "<ul> <li> <p>Update examples for v4 by @disrupted in #486</p> </li> <li> <p>Allow custom timeout for external services by @disrupted in #485</p> </li> <li> <p>Bump version 4.2.1 \u2192 5.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.2.1...5.0.0</p>"}, {"location": "user/changelog/#421-2024-04-25", "title": "4.2.1 - 2024-04-25", "text": ""}, {"location": "user/changelog/#whats-changed_37", "title": "What's changed", "text": "<ul> <li> <p>Add support for cleaning StatefulSets with PVCs by @raminqaf in #482</p> </li> <li> <p>Bump version 4.2.0 \u2192 4.2.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.2.0...4.2.1</p>"}, {"location": "user/changelog/#420-2024-04-25", "title": "4.2.0 - 2024-04-25", "text": ""}, {"location": "user/changelog/#whats-changed_38", "title": "What's changed", "text": "<ul> <li> <p>Update Ruff by @disrupted in #475</p> </li> <li> <p>Improve type annotations for parallel pipeline jobs by @disrupted in #476</p> </li> <li> <p>Set Pyright to warn on unknown types by @disrupted in #480</p> </li> <li> <p>Quiet faker debug logs in tests by @disrupted in #483</p> </li> <li> <p>Add pyright matcher by @sujuka99 in #481</p> </li> <li> <p>Bump version 4.1.2 \u2192 4.2.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.1.2...4.2.0</p>"}, {"location": "user/changelog/#412-2024-03-11", "title": "4.1.2 - 2024-03-11", "text": ""}, {"location": "user/changelog/#whats-changed_39", "title": "What's changed", "text": "<ul> <li> <p>fix(docs): Correct <code>from.components.&lt;component-name&gt;.type</code> to input by @raminqaf in #473</p> </li> <li> <p>Bump version 4.1.1 \u2192 4.1.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.1.1...4.1.2</p>"}, {"location": "user/changelog/#411-2024-03-11", "title": "4.1.1 - 2024-03-11", "text": ""}, {"location": "user/changelog/#whats-changed_40", "title": "What's changed", "text": "<ul> <li> <p>Update httpx by @disrupted in #471</p> </li> <li> <p>Fix import errors by @sujuka99 in #472</p> </li> <li> <p>Bump version 4.1.0 \u2192 4.1.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.1.0...4.1.1</p>"}, {"location": "user/changelog/#410-2024-03-07", "title": "4.1.0 - 2024-03-07", "text": ""}, {"location": "user/changelog/#whats-changed_41", "title": "What's changed", "text": "<ul> <li> <p>Document precedence between env vars and config.yaml by @jkbe in #465</p> </li> <li> <p>Create init command by @sujuka99 in #394</p> </li> <li> <p>Bump version 4.0.2 \u2192 4.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.0.2...4.1.0</p>"}, {"location": "user/changelog/#402-2024-03-04", "title": "4.0.2 - 2024-03-04", "text": ""}, {"location": "user/changelog/#whats-changed_42", "title": "What's changed", "text": "<ul> <li> <p>Add support for Python 3.12 by @disrupted in #467</p> </li> <li> <p>Update Pyright by @disrupted in #468</p> </li> <li> <p>Remove package classifiers that are automatically assigned by Poetry by @disrupted in #469</p> </li> <li> <p>Reference editor plugin for Neovim in docs by @disrupted in #464</p> </li> <li> <p>Validate autoscaling mandatory fields when enabled by @raminqaf in #470</p> </li> <li> <p>Bump version 4.0.1 \u2192 4.0.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.0.1...4.0.2</p>"}, {"location": "user/changelog/#401-2024-02-29", "title": "4.0.1 - 2024-02-29", "text": ""}, {"location": "user/changelog/#whats-changed_43", "title": "What's changed", "text": "<ul> <li> <p>Set supported Python cutoff to 3.11 by @disrupted in #466</p> </li> <li> <p>Bump version 4.0.0 \u2192 4.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/4.0.0...4.0.1</p>"}, {"location": "user/changelog/#400-2024-02-27", "title": "4.0.0 - 2024-02-27", "text": ""}, {"location": "user/changelog/#whats-changed_44", "title": "What's changed", "text": "<ul> <li> <p>Distribute defaults across multiple files by @raminqaf in #438</p> </li> <li> <p>Bump version 3.2.4 \u2192 4.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.2.4...4.0.0</p>"}, {"location": "user/changelog/#324-2024-02-26", "title": "3.2.4 - 2024-02-26", "text": ""}, {"location": "user/changelog/#whats-changed_45", "title": "What's changed", "text": "<ul> <li> <p>Refactor Kafka topics by @disrupted in #447</p> </li> <li> <p>Fix docs CI to include the latest changes to a tagged version in the changelog by @sujuka99 in #459</p> </li> <li> <p>Refactor PipelineGenerator to use component ids by @disrupted in #460</p> </li> <li> <p>Fix tempfile creation by @sujuka99 in #461</p> </li> <li> <p>Fix symbolic link to CONTRIBUTING.md and parallel option in action.yaml by @raminqaf in #462</p> </li> <li> <p>Bump version 3.2.3 \u2192 3.2.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.2.3...3.2.4</p>"}, {"location": "user/changelog/#323-2024-02-19", "title": "3.2.3 - 2024-02-19", "text": ""}, {"location": "user/changelog/#whats-changed_46", "title": "What's changed", "text": "<ul> <li> <p>Trim and hash Helm name override to 63 characters by @disrupted in #456</p> </li> <li> <p>Bump version 3.2.2 \u2192 3.2.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.2.2...3.2.3</p>"}, {"location": "user/changelog/#322-2024-02-12", "title": "3.2.2 - 2024-02-12", "text": ""}, {"location": "user/changelog/#whats-changed_47", "title": "What's changed", "text": "<ul> <li> <p>Fix nested substitution by @sujuka99 in #451</p> </li> <li> <p>Bump version 3.2.1 \u2192 3.2.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.2.1...3.2.2</p>"}, {"location": "user/changelog/#321-2024-02-08", "title": "3.2.1 - 2024-02-08", "text": ""}, {"location": "user/changelog/#whats-changed_48", "title": "What's changed", "text": "<ul> <li> <p>Simplify execution graph logic by @disrupted in #446</p> </li> <li> <p>Fix order of pipeline steps for clean/reset by @disrupted in #450</p> </li> <li> <p>Fix substitution by @sujuka99 in #449</p> </li> <li> <p>Fix cleaner inheritance, parent model should be aliased during instantiation by @disrupted in #452</p> </li> <li> <p>Bump version 3.2.0 \u2192 3.2.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.2.0...3.2.1</p>"}, {"location": "user/changelog/#320-2024-02-01", "title": "3.2.0 - 2024-02-01", "text": ""}, {"location": "user/changelog/#whats-changed_49", "title": "What's changed", "text": "<ul> <li> <p>Improve Sphinx docs highlighting using RST markup by @disrupted in #443</p> </li> <li> <p>Refactor enrichment using Pydantic model validator by @disrupted in #444</p> </li> <li> <p>Refactor pipeline filter and add to public API by @disrupted in #405</p> </li> <li> <p>Bump version 3.1.0 \u2192 3.2.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.1.0...3.2.0</p>"}, {"location": "user/changelog/#310-2024-01-30", "title": "3.1.0 - 2024-01-30", "text": ""}, {"location": "user/changelog/#whats-changed_50", "title": "What's changed", "text": "<ul> <li> <p>Simplify loading of defaults by @disrupted in #435</p> </li> <li> <p>Update poetry publish workflow version to latest by @raminqaf in #430</p> </li> <li> <p>Add support for pipeline steps parallelization by @irux in #312</p> </li> <li> <p>Add custom PascalCase to snake_case alias generator by @disrupted in #436</p> </li> <li> <p>Add parallel flag support to kpops runner by @irux in #439</p> </li> <li> <p>Bump version 3.0.2 \u2192 3.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.0.2...3.1.0</p>"}, {"location": "user/changelog/#302-2024-01-23", "title": "3.0.2 - 2024-01-23", "text": ""}, {"location": "user/changelog/#whats-changed_51", "title": "What's changed", "text": "<ul> <li> <p>Add step for submodule initialization on the docs by @irux in #431</p> </li> <li> <p>Add message if examples git submodule is not initialized by @disrupted in #432</p> </li> <li> <p>Update type annotation for deserialized pipeline by @disrupted in #433</p> </li> <li> <p>Fix Helm diff output by @disrupted in #434</p> </li> <li> <p>Bump version 3.0.1 \u2192 3.0.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.0.1...3.0.2</p>"}, {"location": "user/changelog/#301-2024-01-19", "title": "3.0.1 - 2024-01-19", "text": ""}, {"location": "user/changelog/#whats-changed_52", "title": "What's changed", "text": "<ul> <li> <p>Update pydantic dependency by @sujuka99 in #422</p> </li> <li> <p>Update docs of word-count example for v3 &amp; new folder structure by @disrupted in #423</p> </li> <li> <p>Move ATM fraud to examples repo by @disrupted in #425</p> </li> <li> <p>Fix broken doc link by @raminqaf in #427</p> </li> <li> <p>Add warning log if SR handler is disabled but URL is set by @raminqaf in #428</p> </li> <li> <p>Add git submodule instructions to the contributing.md by @raminqaf in #429</p> </li> <li> <p>Bump version 3.0.0 \u2192 3.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/3.0.0...3.0.1</p>"}, {"location": "user/changelog/#300-2024-01-17", "title": "3.0.0 - 2024-01-17", "text": ""}, {"location": "user/changelog/#whats-changed_53", "title": "What's changed", "text": "<ul> <li> <p>Merge remote-tracking branch 'origin/main' into v3 by @disrupted</p> </li> <li> <p>Fix test by @disrupted</p> </li> <li> <p>Add missing HelmApp docs by @disrupted</p> </li> <li> <p>Replace black with ruff by @sujuka99 in #365</p> </li> <li> <p>Add toml formatter to dprint by @sujuka99 in #386</p> </li> <li> <p>Add malva to dprint by @sujuka99 in #385</p> </li> <li> <p>Merge branch 'main' of github.com:bakdata/kpops into v3 by @raminqaf</p> </li> <li> <p>Migrate to Pydantic v2 by @sujuka99 in #347</p> </li> <li> <p>Allow overriding config files by @sujuka99 in #391</p> </li> <li> <p>Change substitution variables separator to <code>.</code> by @sujuka99 in #388</p> </li> <li> <p>Refactor pipeline generator &amp; representation by @disrupted in #392</p> </li> <li> <p>Define custom components module &amp; pipeline base dir globally by @disrupted in #387</p> </li> <li> <p>Update KPOps runner with the new options by @raminqaf in #395</p> </li> <li> <p>Add steps for KubernetesApp-&gt;HelmApp to migration guide by @disrupted</p> </li> <li> <p>Fix KPOps action to get package from testPyPI by @raminqaf in #396</p> </li> <li> <p>Use hash and trim long Helm release names instead of only trimming by @raminqaf in #390</p> </li> <li> <p>Refactor Helm <code>nameOverride</code> by @disrupted in #397</p> </li> <li> <p>Mark component type as computed Pydantic field by @disrupted in #399</p> </li> <li> <p>Fix missing component type in pipeline schema by @disrupted in #401</p> </li> <li> <p>Refactor generate template for Python API usage by @disrupted in #380</p> </li> <li> <p>Generate defaults schema by @disrupted in #402</p> </li> <li> <p>Update docs for substitution variable usage in v3 by @sujuka99 in #409</p> </li> <li> <p>Namespace substitution vars by @sujuka99 in #408</p> </li> <li> <p>Support multiple inheritance for doc generation by @sujuka99 in #406</p> </li> <li> <p>Refactor streams-bootstrap cleanup jobs as individual HelmApp by @disrupted in #398</p> </li> <li> <p>Update docs for v3 by @sujuka99 in #416</p> </li> <li> <p>Refactor Kafka Connector resetter as individual HelmApp by @disrupted in #400</p> </li> <li> <p>Update tests resources by @sujuka99 in #417</p> </li> <li> <p>Fix enrichment of nested Pydantic BaseModel by @disrupted in #415</p> </li> <li> <p>Summarize all breaking changes in diffs at the top of the migration guide by @sujuka99 in #419</p> </li> <li> <p>Fix wrong Helm release name character limit by @disrupted in #418</p> </li> <li> <p>KPOps 3.0 by @disrupted in #420</p> </li> <li> <p>Update release workflow template to support custom changelog file path by @disrupted in #421</p> </li> <li> <p>Bump version 2.0.11 \u2192 3.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.11...3.0.0</p>"}, {"location": "user/changelog/#2011-2023-10-24", "title": "2.0.11 - 2023-10-24", "text": ""}, {"location": "user/changelog/#whats-changed_54", "title": "What's changed", "text": "<ul> <li> <p>Merge remote-tracking branch 'origin/main' into v3 by @disrupted</p> </li> <li> <p>Create HelmApp component by @disrupted in #370</p> </li> <li> <p>Fix early exit upon Helm exit code 1 (#376) by @sujuka99</p> </li> <li> <p>Migrate deprecated mkdocs-material-extensions (#378) by @disrupted</p> </li> <li> <p>Fix docs setup page list indentation (#377) by @sujuka99</p> </li> <li> <p>Exclude resources from docs search (#371) by @disrupted</p> </li> <li> <p>Bump version 2.0.10 \u2192 2.0.11 by @bakdata-bot</p> </li> <li> <p>Fix early exit upon Helm exit code 1 by @sujuka99 in #376</p> </li> <li> <p>Migrate deprecated mkdocs-material-extensions by @disrupted in #378</p> </li> <li> <p>Fix docs setup page list indentation by @sujuka99 in #377</p> </li> <li> <p>Exclude resources from docs search by @disrupted in #371</p> </li> <li> <p>Bump version 2.0.10 \u2192 2.0.11 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.10...2.0.11</p>"}, {"location": "user/changelog/#2010-2023-10-12", "title": "2.0.10 - 2023-10-12", "text": ""}, {"location": "user/changelog/#whats-changed_55", "title": "What's changed", "text": "<ul> <li> <p>Fix environment variables documentation generation by @sujuka99 in #362</p> </li> <li> <p>Merge branch 'main' of github.com:bakdata/kpops into v3 by @raminqaf</p> </li> <li> <p>Make Kafka REST Proxy &amp; Kafka Connect hosts default and improve Schema Registry config by @raminqaf in #354</p> </li> <li> <p>Introduce ruff by @sujuka99 in #363</p> </li> <li> <p>Print details on connector name mismatch error by @disrupted in #369</p> </li> <li> <p>Enable transparent OS environment lookups from internal environment by @disrupted in #368</p> </li> <li> <p>Bump version 2.0.9 \u2192 2.0.10 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.9...2.0.10</p>"}, {"location": "user/changelog/#209-2023-09-19", "title": "2.0.9 - 2023-09-19", "text": ""}, {"location": "user/changelog/#whats-changed_56", "title": "What's changed", "text": "<ul> <li> <p>Move GitHub action to repository root by @disrupted in #356</p> </li> <li> <p>Fix link to kpops-examples by @sujuka99 in #357</p> </li> <li> <p>Fix Kafka connect config name for deletion by @raminqaf in #361</p> </li> <li> <p>Bump version 2.0.8 \u2192 2.0.9 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.8...2.0.9</p>"}, {"location": "user/changelog/#208-2023-09-06", "title": "2.0.8 - 2023-09-06", "text": ""}, {"location": "user/changelog/#whats-changed_57", "title": "What's changed", "text": "<ul> <li> <p>Refactor component prefix &amp; name by @disrupted in #326</p> </li> <li> <p>Remove unnecessary condition during inflate by @disrupted in #328</p> </li> <li> <p>Fix config.yaml overriding environment variables by @sujuka99 in #353</p> </li> <li> <p>Bump version 2.0.7 \u2192 2.0.8 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.7...2.0.8</p>"}, {"location": "user/changelog/#207-2023-08-31", "title": "2.0.7 - 2023-08-31", "text": ""}, {"location": "user/changelog/#whats-changed_58", "title": "What's changed", "text": "<ul> <li> <p>Print only rendered templates when <code>--template</code> flag is set by @raminqaf in #350</p> </li> <li> <p>Add migration guide by @raminqaf in #352</p> </li> <li> <p>Bump version 2.0.6 \u2192 2.0.7 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.6...2.0.7</p>"}, {"location": "user/changelog/#206-2023-08-30", "title": "2.0.6 - 2023-08-30", "text": ""}, {"location": "user/changelog/#whats-changed_59", "title": "What's changed", "text": "<ul> <li> <p>Simplify deployment with local Helm charts by @raminqaf in #349</p> </li> <li> <p>Bump version 2.0.5 \u2192 2.0.6 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.5...2.0.6</p>"}, {"location": "user/changelog/#205-2023-08-30", "title": "2.0.5 - 2023-08-30", "text": ""}, {"location": "user/changelog/#whats-changed_60", "title": "What's changed", "text": "<ul> <li> <p>Fix versioning of docs when releasing by @raminqaf in #346</p> </li> <li> <p>Bump version 2.0.4 \u2192 2.0.5 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.4...2.0.5</p>"}, {"location": "user/changelog/#204-2023-08-29", "title": "2.0.4 - 2023-08-29", "text": ""}, {"location": "user/changelog/#whats-changed_61", "title": "What's changed", "text": "<ul> <li> <p>Exclude abstract components from pipeline schema by @disrupted in #332</p> </li> <li> <p>Add <code>dprint</code> as the markdown formatter by @raminqaf in #337</p> </li> <li> <p>Publish pre-release docs for PRs &amp; main branch by @raminqaf in #339</p> </li> <li> <p>Fix GitHub ref variable for pushing docs to main branch by @raminqaf in #343</p> </li> <li> <p>Align docs colours by @raminqaf in #345</p> </li> <li> <p>Bump version 2.0.3 \u2192 2.0.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.3...2.0.4</p>"}, {"location": "user/changelog/#203-2023-08-24", "title": "2.0.3 - 2023-08-24", "text": ""}, {"location": "user/changelog/#whats-changed_62", "title": "What's changed", "text": "<ul> <li> <p>Lint GitHub action by @disrupted in #342</p> </li> <li> <p>Fix GitHub action error in non-Python projects by @disrupted in #340</p> </li> <li> <p>Bump version 2.0.2 \u2192 2.0.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.2...2.0.3</p>"}, {"location": "user/changelog/#202-2023-08-23", "title": "2.0.2 - 2023-08-23", "text": ""}, {"location": "user/changelog/#whats-changed_63", "title": "What's changed", "text": "<ul> <li> <p>Add version dropdown to the documentation by @raminqaf in #336</p> </li> <li> <p>Break the documentation down into smaller subsection by @raminqaf in #329</p> </li> <li> <p>Bump version 2.0.1 \u2192 2.0.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.1...2.0.2</p>"}, {"location": "user/changelog/#201-2023-08-22", "title": "2.0.1 - 2023-08-22", "text": ""}, {"location": "user/changelog/#whats-changed_64", "title": "What's changed", "text": "<ul> <li> <p>Fix optional flags in GitHub action by @disrupted in #334</p> </li> <li> <p>Bump version 2.0.0 \u2192 2.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/2.0.0...2.0.1</p>"}, {"location": "user/changelog/#200-2023-08-17", "title": "2.0.0 - 2023-08-17", "text": ""}, {"location": "user/changelog/#whats-changed_65", "title": "What's changed", "text": "<ul> <li> <p>Merge remote-tracking branch 'origin/main' into v2 by @disrupted</p> </li> <li> <p>v2 by @disrupted in #321</p> </li> <li> <p>Bump version 1.7.2 \u2192 2.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.7.2...2.0.0</p>"}, {"location": "user/changelog/#172-2023-08-16", "title": "1.7.2 - 2023-08-16", "text": ""}, {"location": "user/changelog/#whats-changed_66", "title": "What's changed", "text": "<ul> <li> <p>Merge remote-tracking branch 'origin/main' into v2 by @disrupted</p> </li> <li> <p>Refactor input/output types by @sujuka99 in #232</p> </li> <li> <p>Fix editor integration example in docs by @sujuka99 in #273</p> </li> <li> <p>Add KPOps Runner GitHub Action to the documentation by @raminqaf in #325</p> </li> <li> <p>Refactor Kafka Connect handler by @disrupted in #322</p> </li> <li> <p>Remove <code>:type</code> and <code>:rtype</code> from docstrings by @raminqaf in #324</p> </li> <li> <p>Merge remote-tracking branch 'origin/main' into v2 by @disrupted</p> </li> <li> <p>Bump version 1.7.1 \u2192 1.7.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.7.1...1.7.2</p>"}, {"location": "user/changelog/#171-2023-08-15", "title": "1.7.1 - 2023-08-15", "text": ""}, {"location": "user/changelog/#whats-changed_67", "title": "What's changed", "text": "<ul> <li> <p>Modularize and autogenerate examples for the documentation by @sujuka99 in #267</p> </li> <li> <p>Update the variable documentation by @sujuka99 in #266</p> </li> <li> <p>Merge remote-tracking branch 'origin/main' into v2 by @disrupted</p> </li> <li> <p>Update docs generation by @disrupted</p> </li> <li> <p>Bump version 1.7.0 \u2192 1.7.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.7.0...1.7.1</p>"}, {"location": "user/changelog/#170-2023-08-15", "title": "1.7.0 - 2023-08-15", "text": ""}, {"location": "user/changelog/#whats-changed_68", "title": "What's changed", "text": "<ul> <li> <p>Add flag to exclude pipeline steps by @raminqaf in #300</p> </li> <li> <p>Bump version 1.6.0 \u2192 1.7.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.6.0...1.7.0</p>"}, {"location": "user/changelog/#160-2023-08-10", "title": "1.6.0 - 2023-08-10", "text": ""}, {"location": "user/changelog/#whats-changed_69", "title": "What's changed", "text": "<ul> <li> <p>Refactor handling of Helm flags by @disrupted in #319</p> </li> <li> <p>Bump version 1.5.0 \u2192 1.6.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.5.0...1.6.0</p>"}, {"location": "user/changelog/#150-2023-08-10", "title": "1.5.0 - 2023-08-10", "text": ""}, {"location": "user/changelog/#whats-changed_70", "title": "What's changed", "text": "<ul> <li> <p>Remove camel case conversion of internal models by @disrupted in #308</p> </li> <li> <p>Automatically support schema generation for custom components by @disrupted in #307</p> </li> <li> <p>Derive component type automatically from class name by @disrupted in #309</p> </li> <li> <p>Refactor Helm wrapper and add <code>--set-file</code> flag by @disrupted in #311</p> </li> <li> <p>Set default for ToSection topics by @disrupted in #313</p> </li> <li> <p>Annotate types for ToSection models mapping by @disrupted in #315</p> </li> <li> <p>Check Poetry lock file consistency by @disrupted in #316</p> </li> <li> <p>Bump version 1.4.0 \u2192 1.5.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.4.0...1.5.0</p>"}, {"location": "user/changelog/#140-2023-08-02", "title": "1.4.0 - 2023-08-02", "text": ""}, {"location": "user/changelog/#whats-changed_71", "title": "What's changed", "text": "<ul> <li> <p>Update Black by @disrupted in #294</p> </li> <li> <p>Fix vulnerability in mkdocs-material by @disrupted in #295</p> </li> <li> <p>Move breaking changes section upper in the change log config by @raminqaf in #287</p> </li> <li> <p>Order PipelineComponent fields by @disrupted in #290</p> </li> <li> <p>Migrate requests to httpx by @irux in #302</p> </li> <li> <p>Validate unique step names by @disrupted in #292</p> </li> <li> <p>Refactor CLI using dtyper by @disrupted in #306</p> </li> <li> <p>Bump version 1.3.2 \u2192 1.4.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.3.2...1.4.0</p>"}, {"location": "user/changelog/#132-2023-07-13", "title": "1.3.2 - 2023-07-13", "text": ""}, {"location": "user/changelog/#whats-changed_72", "title": "What's changed", "text": "<ul> <li> <p>Exclude Helm tests from dry-run diff by @raminqaf in #293</p> </li> <li> <p>Bump version 1.3.1 \u2192 1.3.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.3.1...1.3.2</p>"}, {"location": "user/changelog/#131-2023-07-11", "title": "1.3.1 - 2023-07-11", "text": ""}, {"location": "user/changelog/#whats-changed_73", "title": "What's changed", "text": "<ul> <li> <p>Update codeowners by @disrupted in #281</p> </li> <li> <p>Reactivate Windows CI by @irux in #255</p> </li> <li> <p>Downgrade Poetry version on the Windows CI pipeline by @irux in #286</p> </li> <li> <p>Remove workaround for pipeline steps by @disrupted in #276</p> </li> <li> <p>Set ANSI theme for output of <code>kpops generate</code> by @disrupted in #289</p> </li> <li> <p>Bump version 1.3.0 \u2192 1.3.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.3.0...1.3.1</p>"}, {"location": "user/changelog/#130-2023-07-07", "title": "1.3.0 - 2023-07-07", "text": ""}, {"location": "user/changelog/#whats-changed_74", "title": "What's changed", "text": "<ul> <li> <p>Update KPOps runner readme for dev versions by @raminqaf in #279</p> </li> <li> <p>Add breaking changes section to change log config by @raminqaf in #280</p> </li> <li> <p>Plural broker field in pipeline config by @raminqaf in #278</p> </li> <li> <p>Bump version 1.2.4 \u2192 1.3.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.2.4...1.3.0</p>"}, {"location": "user/changelog/#124-2023-06-27", "title": "1.2.4 - 2023-06-27", "text": ""}, {"location": "user/changelog/#whats-changed_75", "title": "What's changed", "text": "<ul> <li> <p>Update changelog action to contain miscellaneous PRs by @raminqaf in #269</p> </li> <li> <p>Bump version 1.2.3 \u2192 1.2.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.2.3...1.2.4</p>"}, {"location": "user/changelog/#123-2023-06-22", "title": "1.2.3 - 2023-06-22", "text": ""}, {"location": "user/changelog/#whats-changed_76", "title": "What's changed", "text": "<ul> <li> <p>Refactor custom component validation &amp; hide field from kpops output by @disrupted in #265</p> </li> <li> <p>Bump version 1.2.2 \u2192 1.2.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.2.2...1.2.3</p>"}, {"location": "user/changelog/#122-2023-06-21", "title": "1.2.2 - 2023-06-21", "text": ""}, {"location": "user/changelog/#whats-changed_77", "title": "What's changed", "text": "<ul> <li> <p>Create workflow to lint CI by @disrupted in #260</p> </li> <li> <p>Fix update docs when releasing by @irux in #261</p> </li> <li> <p>Rename change log message for uncategorized issues by @raminqaf in #262</p> </li> <li> <p>Bump version 1.2.1 \u2192 1.2.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.2.1...1.2.2</p>"}, {"location": "user/changelog/#121-2023-06-21", "title": "1.2.1 - 2023-06-21", "text": ""}, {"location": "user/changelog/#whats-changed_78", "title": "What's changed", "text": "<ul> <li> <p>Fix update docs in release workflow by @irux in #258</p> </li> <li> <p>Bump version 1.2.0 \u2192 1.2.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.2.0...1.2.1</p>"}, {"location": "user/changelog/#120-2023-06-21", "title": "1.2.0 - 2023-06-21", "text": ""}, {"location": "user/changelog/#whats-changed_79", "title": "What's changed", "text": "<ul> <li> <p>Add background to docs home page by @disrupted in #236</p> </li> <li> <p>Remove enable option from helm diff by @raminqaf in #235</p> </li> <li> <p>add --namespace option to Helm template command by @raminqaf in #237</p> </li> <li> <p>Add missing type annotation for Pydantic attributes by @disrupted in #238</p> </li> <li> <p>Add <code>helm repo update &lt;repo-name&gt;</code> for Helm &gt;3.7 by @raminqaf in #239</p> </li> <li> <p>Fix helm version check by @sujuka99 in #242</p> </li> <li> <p>Refactor variable substitution by @sujuka99 in #198</p> </li> <li> <p>Fix Helm Version Check by @sujuka99 in #244</p> </li> <li> <p>Update Poetry version in CI by @sujuka99 in #247</p> </li> <li> <p>Add pip cache in KPOps runner action by @raminqaf in #249</p> </li> <li> <p>Check types using Pyright by @disrupted in #251</p> </li> <li> <p>Remove MyPy by @disrupted in #252</p> </li> <li> <p>Disable broken Windows CI temporarily by @sujuka99 in #253</p> </li> <li> <p>Update release and publish workflows by @irux in #254</p> </li> <li> <p>Fix import from external module by @disrupted in #256</p> </li> <li> <p>Fix release &amp; publish workflows by @irux in #257</p> </li> <li> <p>Bump version 1.1.5 \u2192 1.2.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.1.5...1.2.0</p>"}, {"location": "user/changelog/#115-2023-06-07", "title": "1.1.5 - 2023-06-07", "text": ""}, {"location": "user/changelog/#whats-changed_80", "title": "What's changed", "text": "<ul> <li> <p>Fix links to ATM-fraud defaults by @sujuka99 in #219</p> </li> <li> <p>Exclude pytest snapshots from pre-commit hook by @sujuka99 in #226</p> </li> <li> <p>Add Windows support by @irux in #217</p> </li> <li> <p>Fix missing extra input topics by @disrupted in #230</p> </li> <li> <p>Bump version 1.1.4 \u2192 1.1.5 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.1.4...1.1.5</p>"}, {"location": "user/changelog/#114-2023-05-22", "title": "1.1.4 - 2023-05-22", "text": ""}, {"location": "user/changelog/#whats-changed_81", "title": "What's changed", "text": "<ul> <li> <p>Document environment-specific pipeline definitions by @sujuka99 in #210</p> </li> <li> <p>Set up Helm inside composite action &amp; install latest KPOps by default by @disrupted in #211</p> </li> <li> <p>Update example pipeline by @sujuka99 in #216</p> </li> <li> <p>Bump version 1.1.3 \u2192 1.1.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.1.3...1.1.4</p>"}, {"location": "user/changelog/#113-2023-05-04", "title": "1.1.3 - 2023-05-04", "text": ""}, {"location": "user/changelog/#whats-changed_82", "title": "What's changed", "text": "<ul> <li> <p>Rewrite bash pre-commit hooks in Python by @sujuka99 in #207</p> </li> <li> <p>Collapse pip install output for GitHub action by @disrupted in #209</p> </li> <li> <p>Fix misleading error of 'File or directory not found' by @irux in #208</p> </li> <li> <p>Bump version 1.1.2 \u2192 1.1.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.1.2...1.1.3</p>"}, {"location": "user/changelog/#112-2023-04-27", "title": "1.1.2 - 2023-04-27", "text": ""}, {"location": "user/changelog/#whats-changed_83", "title": "What's changed", "text": "<ul> <li> <p>Add titles and descriptions to Pydantic model fields by @sujuka99 in #191</p> </li> <li> <p>Respect object docstring titles by @sujuka99 in #196</p> </li> <li> <p>Allow manually running the CI by @sujuka99 in #204</p> </li> <li> <p>Generate schema in CI by @sujuka99 in #197</p> </li> <li> <p>Add <code>kpops --version</code> command by @disrupted in #206</p> </li> <li> <p>Bump version 1.1.1 \u2192 1.1.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.1.1...1.1.2</p>"}, {"location": "user/changelog/#111-2023-04-17", "title": "1.1.1 - 2023-04-17", "text": ""}, {"location": "user/changelog/#whats-changed_84", "title": "What's changed", "text": "<ul> <li> <p>Expose pipeline component by @irux in #192</p> </li> <li> <p>Bump version 1.1.0 \u2192 1.1.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.1.0...1.1.1</p>"}, {"location": "user/changelog/#110-2023-04-11", "title": "1.1.0 - 2023-04-11", "text": ""}, {"location": "user/changelog/#whats-changed_85", "title": "What's changed", "text": "<ul> <li> <p>Error when running generate with --steps by @sujuka99 in #169</p> </li> <li> <p>Make schema generation a builtin CLI command by @sujuka99 in #166</p> </li> <li> <p>Add CLI Usage doc generation to CI by @sujuka99 in #174</p> </li> <li> <p>Add new badges to readme and improve KubernetesApp docs by @raminqaf in #186</p> </li> <li> <p>Read from component by @disrupted in #193</p> </li> <li> <p>Bump version 1.0.1 \u2192 1.1.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.0.1...1.1.0</p>"}, {"location": "user/changelog/#101-2023-03-23", "title": "1.0.1 - 2023-03-23", "text": ""}, {"location": "user/changelog/#whats-changed_86", "title": "What's changed", "text": "<ul> <li> <p>fix(README): documentation leads to user-guide by @sujuka99 in #163</p> </li> <li> <p>Fix serialization of <code>pathlib.Path</code> type on model export by @disrupted in #168</p> </li> <li> <p>Bump version 1.0.0 \u2192 1.0.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/1.0.0...1.0.1</p>"}, {"location": "user/changelog/#100-2023-03-20", "title": "1.0.0 - 2023-03-20", "text": ""}, {"location": "user/changelog/#whats-changed_87", "title": "What's changed", "text": "<ul> <li> <p>Update \"What is KPOps\" section to be more catchy by @sujuka99 in #148</p> </li> <li> <p>Fix broken links in README by @raminqaf in #160</p> </li> <li> <p>Update CLI usage Reference by @sujuka99 in #152</p> </li> <li> <p>Fix config.yaml <code>defaults_path</code> being overridden by CLI by @sujuka99 in #151</p> </li> <li> <p>Bump version 0.12.0 \u2192 1.0.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.12.0...1.0.0</p>"}, {"location": "user/changelog/#0120-2023-03-15", "title": "0.12.0 - 2023-03-15", "text": ""}, {"location": "user/changelog/#whats-changed_88", "title": "What's changed", "text": "<ul> <li> <p>Create documentation for defaults.yaml by @sujuka99 in #146</p> </li> <li> <p>Rename <code>kafka-connect</code> to <code>kafka-connector</code> by @sujuka99 in #150</p> </li> <li> <p>Set schema for Kafka Connect config by @disrupted in #132</p> </li> <li> <p>Fix missing enum keys in Kafka REST proxy response model by @irux in #135</p> </li> <li> <p>Bump version 0.11.2 \u2192 0.12.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.11.2...0.12.0</p>"}, {"location": "user/changelog/#0112-2023-03-07", "title": "0.11.2 - 2023-03-07", "text": ""}, {"location": "user/changelog/#whats-changed_89", "title": "What's changed", "text": "<ul> <li> <p>Create documentation of KPOps components by @sujuka99 in #112</p> </li> <li> <p>Helm diff should not render NOTES.txt by @sujuka99 in #130</p> </li> <li> <p>Improve inflate example &amp; enum comparison in test by @disrupted in #104</p> </li> <li> <p>Remove duplicate documentation about CLI environment variables by @disrupted in #140</p> </li> <li> <p>Provide documentation for editor integration by @sujuka99 in #137</p> </li> <li> <p>Create documentation of <code>config.yaml</code> by @sujuka99 in #138</p> </li> <li> <p>Refactor loading of component defaults to independent function by @disrupted in #147</p> </li> <li> <p>Bump version 0.11.1 \u2192 0.11.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.11.1...0.11.2</p>"}, {"location": "user/changelog/#0111-2023-02-23", "title": "0.11.1 - 2023-02-23", "text": ""}, {"location": "user/changelog/#whats-changed_90", "title": "What's changed", "text": "<ul> <li> <p>Skip FromSection for producers by @disrupted in #125</p> </li> <li> <p>Fix pipeline environment override by @disrupted in #127</p> </li> <li> <p>Bump version 0.11.0 \u2192 0.11.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.11.0...0.11.1</p>"}, {"location": "user/changelog/#0110-2023-02-22", "title": "0.11.0 - 2023-02-22", "text": ""}, {"location": "user/changelog/#whats-changed_91", "title": "What's changed", "text": "<ul> <li>Bump version 0.10.4 \u2192 0.11.0 by @bakdata-bot</li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.10.4...0.11.0</p>"}, {"location": "user/changelog/#0104-2023-02-22", "title": "0.10.4 - 2023-02-22", "text": ""}, {"location": "user/changelog/#whats-changed_92", "title": "What's changed", "text": "<ul> <li> <p>Fix enrichment of inflated components by @disrupted in #118</p> </li> <li> <p>Assign default reviewers through codeowners by @disrupted in #124</p> </li> <li> <p>Update streams-bootstrap autoscaling config by @disrupted in #122</p> </li> <li> <p>Bump version 0.10.3 \u2192 0.10.4 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.10.3...0.10.4</p>"}, {"location": "user/changelog/#0103-2023-02-16", "title": "0.10.3 - 2023-02-16", "text": ""}, {"location": "user/changelog/#whats-changed_93", "title": "What's changed", "text": "<ul> <li> <p>Update screenshot of word count pipeline by @disrupted in #116</p> </li> <li> <p>Fix topic name substitution of <code>${component_name}</code> in ToSection by @disrupted in #117</p> </li> <li> <p>Bump version 0.10.2 \u2192 0.10.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.10.2...0.10.3</p>"}, {"location": "user/changelog/#0102-2023-02-15", "title": "0.10.2 - 2023-02-15", "text": ""}, {"location": "user/changelog/#whats-changed_94", "title": "What's changed", "text": "<ul> <li> <p>Create deployment documentation for Word Count pipeline by @sujuka99 in #107</p> </li> <li> <p>Delete leftover pipeline prefix config by @disrupted in #111</p> </li> <li> <p>Remove <code>poetry run</code> from Quickstart doc by @sujuka99 in #114</p> </li> <li> <p>Fix incomplete inflate component by @disrupted in #105</p> </li> <li> <p>Bump version 0.10.1 \u2192 0.10.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.10.1...0.10.2</p>"}, {"location": "user/changelog/#0101-2023-02-13", "title": "0.10.1 - 2023-02-13", "text": ""}, {"location": "user/changelog/#whats-changed_95", "title": "What's changed", "text": "<ul> <li> <p>Add name to connector dry-run diff by @philipp94831 in #108</p> </li> <li> <p>Bump version 0.10.0 \u2192 0.10.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.10.0...0.10.1</p>"}, {"location": "user/changelog/#0100-2023-02-13", "title": "0.10.0 - 2023-02-13", "text": ""}, {"location": "user/changelog/#whats-changed_96", "title": "What's changed", "text": "<ul> <li> <p>Fix diff not shown for new Helm releases by @disrupted in #92</p> </li> <li> <p>Fix ATM fraud example by @disrupted in #95</p> </li> <li> <p>Fix kpops version in pyproject.toml by @raminqaf in #99</p> </li> <li> <p>Clean up dry-run logging by @philipp94831 in #100</p> </li> <li> <p>Refactor integration test by @disrupted in #96</p> </li> <li> <p>Refactor change calculation by @disrupted in #88</p> </li> <li> <p>Support printing final Kubernetes resources with kpops generate by @sujuka99 in #69</p> </li> <li> <p>Set Kafka Connect config name from component by @irux in #98</p> </li> <li> <p>Add prefix as an option to customize by @irux in #97</p> </li> <li> <p>Bump version 0.9.0 \u2192 0.10.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.9.0...0.10.0</p>"}, {"location": "user/changelog/#090-2023-02-03", "title": "0.9.0 - 2023-02-03", "text": ""}, {"location": "user/changelog/#whats-changed_97", "title": "What's changed", "text": "<ul> <li> <p>Remove mike set-default command by @raminqaf in #86</p> </li> <li> <p>Add --create-namespace option to helm by @raminqaf in #91</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.8.3...0.9.0</p>"}, {"location": "user/changelog/#083-2023-02-01", "title": "0.8.3 - 2023-02-01", "text": ""}, {"location": "user/changelog/#whats-changed_98", "title": "What's changed", "text": "<ul> <li> <p>Correct push flag of mike by @raminqaf in #84</p> </li> <li> <p>Bump version 0.8.2 \u2192 0.8.3 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.8.2...0.8.3</p>"}, {"location": "user/changelog/#082-2023-02-01", "title": "0.8.2 - 2023-02-01", "text": ""}, {"location": "user/changelog/#whats-changed_99", "title": "What's changed", "text": "<ul> <li> <p>Add <code>--push</code> flag to mike by @raminqaf in #83</p> </li> <li> <p>Bump version 0.8.1 \u2192 0.8.2 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.8.1...0.8.2</p>"}, {"location": "user/changelog/#081-2023-02-01", "title": "0.8.1 - 2023-02-01", "text": ""}, {"location": "user/changelog/#whats-changed_100", "title": "What's changed", "text": "<ul> <li> <p>Tidy user guide by @disrupted in #81</p> </li> <li> <p>Fix typo and metrics replication factor in Kafka values by @yannick-roeder in #82</p> </li> <li> <p>Bump version 0.8.0 \u2192 0.8.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.8.0...0.8.1</p>"}, {"location": "user/changelog/#080-2023-01-30", "title": "0.8.0 - 2023-01-30", "text": ""}, {"location": "user/changelog/#whats-changed_101", "title": "What's changed", "text": "<ul> <li> <p>Generate schema for pipeline.yaml and config.yaml by @disrupted in #70</p> </li> <li> <p>Bump version 0.7.0 \u2192 0.8.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.7.0...0.8.0</p>"}, {"location": "user/changelog/#070-2023-01-19", "title": "0.7.0 - 2023-01-19", "text": ""}, {"location": "user/changelog/#whats-changed_102", "title": "What's changed", "text": "<ul> <li> <p>Update setup.cfg by @sujuka99 in #65</p> </li> <li> <p>Refactor component configs by @raminqaf in #63</p> </li> <li> <p>Bump version 0.6.1 \u2192 0.7.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.6.1...0.7.0</p>"}, {"location": "user/changelog/#061-2023-01-12", "title": "0.6.1 - 2023-01-12", "text": ""}, {"location": "user/changelog/#whats-changed_103", "title": "What's changed", "text": "<ul> <li> <p>Refactor Kubernetes app properties by @disrupted in #60</p> </li> <li> <p>Fix Helm release name trimming of cleanup jobs by @disrupted in #61</p> </li> <li> <p>Bump version 0.6.0 \u2192 0.6.1 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.6.0...0.6.1</p>"}, {"location": "user/changelog/#060-2023-01-09", "title": "0.6.0 - 2023-01-09", "text": ""}, {"location": "user/changelog/#whats-changed_104", "title": "What's changed", "text": "<ul> <li> <p>Separate clean, reset, and destroy logic by @raminqaf in #57</p> </li> <li> <p>Fix trigger CI job once on release workflow by @raminqaf in #58</p> </li> <li> <p>Fix double push of docs to GitHub pages by @raminqaf in #59</p> </li> <li> <p>Bump version 0.5.0 \u2192 0.6.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.5.0...0.6.0</p>"}, {"location": "user/changelog/#050-2023-01-05", "title": "0.5.0 - 2023-01-05", "text": ""}, {"location": "user/changelog/#whats-changed_105", "title": "What's changed", "text": "<ul> <li> <p>Fix release version for TestPyPI by @philipp94831 in #48</p> </li> <li> <p>Change topic_name variable to output_topic_name by @MichaelKora in #50</p> </li> <li> <p>Improve exception output for integration tests by @disrupted in #51</p> </li> <li> <p>Refactor usage of Pydantic aliases by @disrupted in #52</p> </li> <li> <p>Add MyPy plugin for Pydantic by @disrupted in #56</p> </li> <li> <p>Use component name instead of type to set default output topic name by @MichaelKora in #53</p> </li> <li> <p>Refactor Helm Wrapper by @raminqaf in #47</p> </li> <li> <p>Bump version 0.4.1 \u2192 0.5.0 by @bakdata-bot</p> </li> </ul>"}, {"location": "user/changelog/#new-contributors_1", "title": "New Contributors", "text": "<ul> <li>@MichaelKora made their first contribution in #53</li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.4.1...0.5.0</p>"}, {"location": "user/changelog/#041-2022-12-22", "title": "0.4.1 - 2022-12-22", "text": ""}, {"location": "user/changelog/#whats-changed_106", "title": "What's changed", "text": "<ul> <li> <p>Fix link for getting started in readme by @torbsto in #34</p> </li> <li> <p>Use new Helm repositories for streams-bootstrap and Kafka Connect resetter by @philipp94831 in #36</p> </li> <li> <p>Fix spelling of PyPI by @disrupted in #33</p> </li> <li> <p>Fix typo in docs by @disrupted in #38</p> </li> <li> <p>Fix broken links in the documentation by @raminqaf in #39</p> </li> <li> <p>Fix generate connecting to Kafka REST proxy by @disrupted in #41</p> </li> <li> <p>Bump version 0.4.0 \u2192 0.4.1 by @bakdata-bot</p> </li> </ul>"}, {"location": "user/changelog/#new-contributors_2", "title": "New Contributors", "text": "<ul> <li>@torbsto made their first contribution in #34</li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.4.0...0.4.1</p>"}, {"location": "user/changelog/#040-2022-12-21", "title": "0.4.0 - 2022-12-21", "text": ""}, {"location": "user/changelog/#whats-changed_107", "title": "What's changed", "text": "<ul> <li> <p>Add installation instructions to README by @raminqaf in #30</p> </li> <li> <p>Fix usage of template workflow for Poetry release by @disrupted in #25</p> </li> <li> <p>Set default value of retain clean jobs flag to false by @raminqaf in #31</p> </li> <li> <p>Refactor component handlers by @disrupted in #3</p> </li> <li> <p>Bump version 0.3.0 \u2192 0.3.1 by @bakdata-bot</p> </li> <li> <p>Bump version 0.3.1 \u2192 0.4.0 by @bakdata-bot</p> </li> </ul> <p>Full Changelog: https://github.com/bakdata/kpops/compare/0.3.0...0.4.0</p>"}, {"location": "user/changelog/#030-2022-12-21", "title": "0.3.0 - 2022-12-21", "text": ""}, {"location": "user/changelog/#whats-changed_108", "title": "What's changed", "text": "<ul> <li> <p>Initial commit by @philipp94831</p> </li> <li> <p>Add source code of KPOps by @raminqaf in #1</p> </li> <li> <p>Add GitHub action by @philipp94831 in #2</p> </li> <li> <p>Update project version by @raminqaf in #4</p> </li> <li> <p>Update project version by @raminqaf in #5</p> </li> <li> <p>Remove workflow and add release actions by @raminqaf in #8</p> </li> <li> <p>Fix env variable in GitHub actions by @raminqaf in #9</p> </li> <li> <p>Bump version 0.2.2 \u2192 0.2.3 by @bakdata-bot</p> </li> <li> <p>Remove credential flag from checkout in update docs by @raminqaf in #10</p> </li> <li> <p>Bump version 0.2.3 \u2192 0.2.4 by @bakdata-bot</p> </li> <li> <p>Update version in actions readme by @jkbe in #11</p> </li> <li> <p>Bump version 0.2.4 \u2192 0.2.5 by @bakdata-bot</p> </li> <li> <p>Remove push tag step by @raminqaf in #13</p> </li> <li> <p>Bump version 0.2.5 \u2192 0.2.6 by @bakdata-bot</p> </li> <li> <p>Bump version 0.2.6 \u2192 0.3.0 by @bakdata-bot</p> </li> </ul>"}, {"location": "user/what-is-kpops/", "title": "What is KPOps?", "text": "<p>With a couple of easy commands in the shell, and a <code>pipeline.yaml</code> of under 30 lines, KPOps can not only <code>deploy</code> a Kafka pipeline<sup>1</sup> to a Kubernetes cluster, but also <code>reset</code>, <code>clean</code> or <code>destroy</code> it!</p>"}, {"location": "user/what-is-kpops/#key-features", "title": "Key features", "text": "<ul> <li>Deploy Kafka apps to Kubernetes: KPOps allows to deploy consecutive Kafka Streams applications and producers using an easy-to-read and -write pipeline definition.</li> <li>Manage Kafka Connectors: KPOps connects with your Kafka Connect cluster and deploys, validates, and deletes your connectors.</li> <li>Configure multiple pipelines and steps: KPOps has various abstractions that simplify configuring multiple pipelines and steps within pipelines by sharing common configuration between different components, such as producers or streaming applications.</li> <li>Handle your topics and schemas: KPOps not only creates and deletes your topics but also registers and deletes your schemas.</li> <li>Clean termination of Kafka components: KPOps removes your pipeline components (i.e., Kafka Streams applications) from the Kubernetes cluster and cleans up the component-related states (i.e., removing/resetting offset of Kafka consumer groups).</li> <li>Preview your pipeline changes: With the KPOps dry-run, you can ensure your pipeline definition is set up correctly. This helps to minimize downtime and prevent potential errors or issues that could impact your production environment.</li> </ul>"}, {"location": "user/what-is-kpops/#example", "title": "Example", "text": "An overview of Word-count pipeline shown in Streams Explorer Word-count pipeline.yaml<pre><code>- type: producer-app\n  name: data-producer\n  values:\n    image: bakdata/kpops-demo-sentence-producer\n    imageTag: \"2.0.0\"\n\n- type: streams-app\n  name: word-count-app\n  values:\n    image: bakdata/kpops-demo-word-count-app\n    imageTag: \"2.0.0\"\n    replicaCount: 1\n  to:\n    topics:\n      ${output_topic_name}:\n        type: output\n        configs:\n          cleanup.policy: compact\n\n- type: kafka-sink-connector\n  name: redis-sink-connector\n  config:\n    connector.class: com.github.jcustenborder.kafka.connect.redis.RedisSinkConnector\n    redis.hosts: redis-headless:6379\n    redis.database: 0\n    tasks.max: 1\n    key.converter: org.apache.kafka.connect.storage.StringConverter\n    value.converter: org.apache.kafka.connect.storage.StringConverter\n</code></pre> <ol> <li> <p>A Kafka pipeline can consist of consecutive streaming applications, producers, and connectors.\u00a0\u21a9</p> </li> </ol>"}, {"location": "user/core-concepts/config/", "title": "Configuration", "text": "<p>KPOps reads its global configuration that is unrelated to a pipeline's components from <code>config.yaml</code>.</p> <p>Consider enabling KPOps' editor integration feature to enjoy the benefits of autocompletion and validation when configuring your pipeline.</p> <p>To learn about any of the available settings, take a look at the example below.</p> <code>config.yaml</code> <pre><code># CONFIGURATION\n#\n# Base directory to the pipelines (default is current working directory)\npipeline_base_dir: .\n# The Kafka brokers address.\n# REQUIRED\nkafka_brokers: \"http://broker1:9092,http://broker2:9092\"\n# Configure the topic name variables you can use in the pipeline definition.\ntopic_name_config:\n  # Configures the value for the variable ${output_topic_name}\n  default_output_topic_name: ${pipeline.name}-${component.name}\n  # Configures the value for the variable ${error_topic_name}\n  default_error_topic_name: ${pipeline.name}-${component.name}-error\n# Configuration for Schema Registry.\nschema_registry:\n  # Whether the Schema Registry handler should be initialized.\n  enabled: false\n  # Address of the Schema Registry.\n  url: \"http://localhost:8081\"\n# Configuration for the Kafka REST Proxy.\nkafka_rest:\n  # Address of the Kafka REST Proxy.\n  url: \"http://localhost:8082\"\n# Configuration for Kafka Connect.\nkafka_connect:\n  # Address of Kafka Connect.\n  url: \"http://localhost:8083\"\n# Flag for `helm upgrade --install`.\n# Create the release namespace if not present.\ncreate_namespace: false\n# Global flags for Helm.\nhelm_config:\n  # Name of kubeconfig context (`--kube-context`)\n  context: name\n  # Run Helm in Debug mode.\n  debug: false\n  # Kubernetes API version used for Capabilities.APIVersions\n  api_version: null\n# Whether to retain clean up jobs in the cluster or uninstall the, after\n# completion.\nretain_clean_jobs: false\n</code></pre> <p>Environment-specific pipeline definitions</p> <p>Similarly to defaults, it is possible to have an unlimited amount of additional environment-specific pipeline definitions. The naming convention is the same: add a suffix of the form <code>_{environment}</code> to the filename.</p>"}, {"location": "user/core-concepts/defaults/", "title": "Defaults", "text": "<p>KPOps has a very efficient way of dealing with repeating settings which manifests as <code>defaults.yaml</code>. This file provides the user with the power to set defaults for any and all components, thus omitting the need to repeat the same settings in <code>pipeline.yaml</code>.</p> <p>See real-world examples for <code>defaults</code>.</p>"}, {"location": "user/core-concepts/defaults/#features", "title": "Features", "text": ""}, {"location": "user/core-concepts/defaults/#inheritance", "title": "Inheritance", "text": "<p>An important mechanic of KPOps is that <code>defaults</code> set for a component apply to all components that inherit from it.</p> <p>It is possible, although not recommended, to add settings that are specific to a component's subclass. An example would be configuring <code>offset_topic</code> under <code>kafka-connector</code> instead of <code>kafka-source-connector</code>.</p>"}, {"location": "user/core-concepts/defaults/#configuration", "title": "Configuration", "text": "<p>KPOps allows using multiple default values. The <code>defaults.yaml</code> (or <code>defaults_&lt;env&gt;.yaml</code>) files can be distributed across multiple files. These will be picked up by KPOps and get merged into a single <code>pipeline.yaml</code> file. KPOps starts from reading the default files from where the pipeline path is defined and picks up every defaults file on its way to where the <code>pipeline_base_dir</code> is defined.</p> <p>The deepest <code>defaults.yaml</code> file in the folder hierarchy (i.e., the closest one to the <code>pipeline.yaml</code>) overwrites the higher-level defaults' values.</p> <p>It is important to note that <code>defaults_{environment}.yaml</code> overrides only the settings that are explicitly set to be different from the ones in the base <code>defaults</code> file.</p> defaults merge priority <p>Imagine the following folder structure, where the <code>pipeline_base_dir</code> is configured to <code>pipelines</code>:</p> <pre><code>\u2514\u2500 pipelines\n   \u2514\u2500\u2500 distributed-defaults\n       \u251c\u2500\u2500 defaults.yaml\n       \u251c\u2500\u2500 defaults_dev.yaml\n       \u2514\u2500\u2500 pipeline-deep\n           \u251c\u2500\u2500 defaults.yaml\n           \u2514\u2500\u2500 pipeline.yaml\n</code></pre> <p>KPOps picks up the defaults in the following order (high to low priority):</p> <ul> <li><code>./pipelines/distributed-defaults/pipeline-deep/defaults.yaml</code></li> <li><code>./pipelines/distributed-defaults/defaults_dev.yaml</code></li> <li><code>./pipelines/distributed-defaults/defaults.yaml</code></li> </ul>"}, {"location": "user/core-concepts/defaults/#components", "title": "Components", "text": "<p>The <code>defaults</code> codeblocks in this section contain the full set of settings that are specific to the component. If a setting already exists in a parent config, it will not be included in the child's.</p>"}, {"location": "user/core-concepts/defaults/#kubernetesapp", "title": "KubernetesApp", "text": "<code>defaults.yaml</code> <pre><code># Base Kubernetes App\n#\n# Parent of: HelmApp\n# Child of: PipelineComponent\nkubernetes-app:\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  from: # Must not be null\n    topics: # read from topic\n      ${pipeline.name}-input-topic:\n        type: input # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra\n      ${pipeline.name}-input-pattern-topic:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      ${pipeline.name}-extra-pattern-topic:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n    components: # read from specific component\n      account-producer:\n        type: input # Implied when role is NOT specified\n      other-producer:\n        role: some-role # Implies `type` to be extra\n      component-as-input-pattern:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      component-as-extra-pattern:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  namespace: namespace # required\n  values: # required\n    image: exampleImage # Example\n    debug: false # Example\n    commandLine: {} # Example\n</code></pre>"}, {"location": "user/core-concepts/defaults/#streamsapp", "title": "StreamsApp", "text": "<code>defaults.yaml</code> <pre><code># StreamsApp component that configures a streams bootstrap app.\n#\n# Child of: KafkaApp\n# More documentation on StreamsApp: https://github.com/bakdata/streams-bootstrap\nstreams-app:\n  # No arbitrary keys are allowed under `app`here\n  # Allowed configs:\n  # https://github.com/bakdata/streams-bootstrap/tree/master/charts/streams-app\n  values: # required\n    # Streams Bootstrap streams section\n    streams: # required, streams-app-specific\n      brokers: ${config.kafka_brokers} # required\n      schemaRegistryUrl: ${config.schema_registry.url}\n      inputTopics:\n        - topic1\n        - topic2\n      outputTopic: output-topic\n      inputPattern: input-pattern\n      extraInputTopics:\n        input_role1:\n          - input_topic1\n          - input_topic2\n        input_role2:\n          - input_topic3\n          - input_topic4\n      extraInputPatterns:\n        pattern_role1: input_pattern1\n      extraOutputTopics:\n        output_role1: output_topic1\n        output_role2: output_topic2\n      errorTopic: error-topic\n      config:\n        my.streams.config: my.value\n    nameOverride: override-with-this-name # streams-app-specific\n    autoscaling: # streams-app-specific\n      consumerGroup: consumer-group # required\n      lagThreshold: 0 # Average target value to trigger scaling actions.\n      enabled: false # Whether to enable auto-scaling using KEDA.\n      # This is the interval to check each trigger on.\n      # https://keda.sh/docs/2.9/concepts/scaling-deployments/#pollinginterval\n      pollingInterval: 30\n      # The period to wait after the last trigger reported active before scaling\n      #  the resource back to 0. https://keda.sh/docs/2.9/concepts/scaling-deployments/#cooldownperiod\n      cooldownPeriod: 300\n      # The offset reset policy for the consumer if the the consumer group is\n      # not yet subscribed to a partition.\n      offsetResetPolicy: earliest\n      # This setting is passed to the HPA definition that KEDA will create for a\n      # given resource and holds the maximum number of replicas of the target resouce.\n      # https://keda.sh/docs/2.9/concepts/scaling-deployments/#maxreplicacount\n      maxReplicas: 1\n      # Minimum number of replicas KEDA will scale the resource down to.\n      # https://keda.sh/docs/2.7/concepts/scaling-deployments/#minreplicacount\n      minReplicas: 0\n      # If this property is set, KEDA will scale the resource down to this\n      # number of replicas.\n      # https://keda.sh/docs/2.9/concepts/scaling-deployments/#idlereplicacount\n      idleReplicas: 0\n      topics: # List of auto-generated Kafka Streams topics used by the streams app.\n        - topic1\n        - topic2\n</code></pre>"}, {"location": "user/core-concepts/defaults/#producerapp", "title": "ProducerApp", "text": "<code>defaults.yaml</code> <pre><code>\n</code></pre>"}, {"location": "user/core-concepts/defaults/#kafkaconnector", "title": "KafkaConnector", "text": "<code>defaults.yaml</code> <pre><code># Kafka connector\n#\n# Parent of: KafkaSinkConnector, KafkaSourceConnector\n# Child of: PipelineComponent\nkafka-connector:\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  from: # Must not be null\n    topics: # read from topic\n      ${pipeline.name}-input-topic:\n        type: input # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra\n      ${pipeline.name}-input-pattern-topic:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      ${pipeline.name}-extra-pattern-topic:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n    components: # read from specific component\n      account-producer:\n        type: input # Implied when role is NOT specified\n      other-producer:\n        role: some-role # Implies `type` to be extra\n      component-as-input-pattern:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      component-as-extra-pattern:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  # Full documentation on connectors: https://kafka.apache.org/documentation/#connectconfigs\n  config: # required\n    tasks.max: 1\n  # Overriding Kafka Connect Resetter Helm values. E.g. to override the\n  # Image Tag etc.\n  resetter_values:\n    imageTag: \"1.2.3\"\n</code></pre>"}, {"location": "user/core-concepts/defaults/#kafkasourceconnector", "title": "KafkaSourceConnector", "text": "<code>defaults.yaml</code> <pre><code># Kafka source connector\n#\n# Child of: KafkaConnector\nkafka-source-connector:\n  # The source connector has no `from` section\n  # from:\n  # offset.storage.topic\n  # https://kafka.apache.org/documentation/#connect_running\n  offset_topic: offset_topic\n</code></pre>"}, {"location": "user/core-concepts/defaults/#kafkasinkconnector", "title": "KafkaSinkConnector", "text": "<code>defaults.yaml</code> <pre><code># Kafka sink connector\n#\n# Child of: KafkaConnector\nkafka-sink-connector:\n  # No settings differ from `kafka-connector`\n</code></pre>"}, {"location": "user/core-concepts/operation-mode/", "title": "Operation Modes in KPOps", "text": "<p>KPOps supports three operation modes\u2014<code>managed</code>, <code>manifest</code>, and <code>argo</code>. These modes determine how resources are managed and allow users to tailor their deployment strategy.</p> <ul> <li>Managed Mode (default): KPOps uses Helm, and communicates with services like Kafka Rest Proxy, and Kafka Connect under the hood to manage the installation/(graceful) deletion of applications, creation/deletion of Kafka topics, creation/deletion of Connectors defined in your <code>pipeline.yaml</code>.</li> <li>Manifest Mode: Focuses on generating Kubernetes manifests.</li> <li>Argo Mode: Extends the functionality to include ArgoCD-specific hooks for certain operations, facilitating GitOps workflows with automated cleanup and reset tasks.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#configuring-operation-modes", "title": "Configuring Operation Modes", "text": "<p>You can configure the operation mode using one of the following methods:</p> <ol> <li> <p>Command-Line Option: Pass the <code>--operation-mode &lt;OPERATION&gt;</code> flag when running a CLI command. Refer to the CLI commands documentation for more details.</p> </li> <li> <p>Environment Variable: Set the operation mode by defining the <code>KPOPS_OPERATION_MODE</code> environment variable.</p> </li> </ol>"}, {"location": "user/core-concepts/operation-mode/#generated-resources-by-mode-and-operation", "title": "Generated Resources by Mode and Operation", "text": ""}, {"location": "user/core-concepts/operation-mode/#deploy", "title": "<code>deploy</code>", "text": ""}, {"location": "user/core-concepts/operation-mode/#manifest-mode", "title": "Manifest Mode", "text": "<ul> <li>streams-bootstrap Applications:</li> <li>Depending on your pipeline configuration, Kubernetes <code>Job</code>, <code>Deployment</code>, <code>ConfigMap</code>, and <code>Service</code> resources.</li> <li>Please refer to streams-bootstrap Helm Charts.</li> <li>Topics:</li> <li>Strimzi <code>KafkaTopic</code> CRDs.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#argo-mode", "title": "Argo Mode", "text": "<ul> <li>streams-bootstrap Applications:</li> <li>Depending on your pipeline configuration, Kubernetes <code>Job</code>, <code>Deployment</code>, <code>ConfigMap</code>, and <code>Service</code> resources.</li> <li>Additional Argo <code>sync-wave</code> annotation to ensure Kafka topics are created first (default <code>sync-wave=0</code>) before deploying apps (lower priority <code>sync-wave&gt;0</code>). All components of each sync wave are deployed in parallel by Argo.</li> <li>Please refer to streams-bootstrap Helm Charts.</li> <li>Topics:</li> <li>Strimzi <code>KafkaTopic</code> CRDs.</li> <li>Cleanup Jobs:</li> <li>Kubernetes <code>Job</code> resources configured with ArgoCD <code>PostDelete</code> hooks, ensuring cleanup tasks are executed after ArgoCD application deletion.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#reset", "title": "<code>reset</code>", "text": ""}, {"location": "user/core-concepts/operation-mode/#manifest-mode_1", "title": "Manifest Mode", "text": "<ul> <li>Topics:</li> <li>Strimzi <code>KafkaTopic</code> CRDs.</li> <li>Reset Jobs:</li> <li>Kubernetes <code>Job</code> resources for resetting Kafka Streams application states.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#argo-mode_1", "title": "Argo Mode", "text": "<ul> <li>Topics:</li> <li>Strimzi <code>KafkaTopic</code> CRDs.</li> <li>Reset Jobs:</li> <li>Kubernetes <code>Job</code> resources without ArgoCD <code>PostDelete</code> hooks, providing a simpler reset process.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#clean", "title": "<code>clean</code>", "text": ""}, {"location": "user/core-concepts/operation-mode/#manifest-mode_2", "title": "Manifest Mode", "text": "<ul> <li>Clean Jobs:</li> <li>Kubernetes <code>Job</code> resources for cleaning up temporary resources or artifacts using application container images.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#argo-mode_2", "title": "Argo Mode", "text": "<ul> <li>Not Applicable:</li> <li>The <code>clean</code> command is not supported in Argo mode. The clean is instead achieved through cleanup job hooks during the <code>deploy</code> command.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#destroy", "title": "<code>destroy</code>", "text": ""}, {"location": "user/core-concepts/operation-mode/#manifest-mode_3", "title": "Manifest Mode", "text": "<ul> <li>Topics:</li> <li>Strimzi <code>KafkaTopic</code> CRDs.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#argo-mode_3", "title": "Argo Mode", "text": "<ul> <li>Topics:</li> <li>Strimzi <code>KafkaTopic</code> CRDs.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#use-cases-for-each-mode", "title": "Use Cases for Each Mode", "text": ""}, {"location": "user/core-concepts/operation-mode/#manifest-mode_4", "title": "Manifest Mode", "text": "<ul> <li>Flexibility: Use the generated manifests in manual workflows or integrate with any Kubernetes deployment tool.</li> <li>Version Control: Commit generated manifests to a Git repository for tracking changes and rollback.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#argo-mode_4", "title": "Argo Mode", "text": "<ul> <li>GitOps Integration: Simplifies workflows when using ArgoCD for automated deployments and lifecycle management.</li> <li>PostDelete Hooks: Automatically cleans up resources after deletion of ArgoCD applications.</li> </ul>"}, {"location": "user/core-concepts/operation-mode/#summary-of-resource-generation-by-operation-and-mode", "title": "Summary of Resource Generation by Operation and Mode", "text": "Resource Type <code>deploy</code> <code>reset</code> <code>clean</code> <code>destroy</code> Producer Apps Manifest: Generated N/A N/A N/A Argo: Generated Streams Apps Manifest: Generated N/A N/A N/A Argo: Generated Topics Manifest: Generated Manifest: Generated N/A Manifest: Generated Argo: Generated Argo: Generated Argo: Generated Cleanup Jobs Manifest: N/A N/A Manifest: Generated N/A Argo: With <code>PostDelete</code> hooks N/A N/A N/A Reset Jobs Manifest: N/A Manifest: Generated N/A N/A Argo: Without <code>PostDelete</code> hooks"}, {"location": "user/core-concepts/components/helm-app/", "title": "HelmApp", "text": ""}, {"location": "user/core-concepts/components/helm-app/#usage", "title": "Usage", "text": "<p>Can be used to deploy any app in Kubernetes using Helm, for example, a REST service that serves Kafka data.</p>"}, {"location": "user/core-concepts/components/helm-app/#configuration", "title": "Configuration", "text": "<code>pipeline.yaml</code> <pre><code># Kubernetes app managed through Helm with an associated Helm chart\n- type: helm-app\n  name: helm-app # required\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  from: # Must not be null\n    topics: # read from topic\n      ${pipeline.name}-input-topic:\n        type: input # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra\n      ${pipeline.name}-input-pattern-topic:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      ${pipeline.name}-extra-pattern-topic:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n    components: # read from specific component\n      account-producer:\n        type: input # Implied when role is NOT specified\n      other-producer:\n        role: some-role # Implies `type` to be extra\n      component-as-input-pattern:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      component-as-extra-pattern:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  namespace: namespace # required\n  values: # required\n    image: exampleImage # Example\n    debug: false # Example\n    commandLine: {} # Example\n  # Helm repository configuration (optional)\n  # If not set the helm repo add will not be called. Useful when using local Helm charts\n  repo_config:\n    repository_name: bakdata-streams-bootstrap # required\n    url: https://bakdata.github.io/streams-bootstrap/ # required\n    repo_auth_flags:\n      username: user\n      password: pass\n      ca_file: /home/user/path/to/ca-file\n      insecure_skip_tls_verify: false\n  version: \"1.0.0\" # Helm chart version\n</code></pre>"}, {"location": "user/core-concepts/components/helm-app/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/helm-app/#deploy", "title": "deploy", "text": "<p>Deploy using Helm.</p>"}, {"location": "user/core-concepts/components/helm-app/#destroy", "title": "destroy", "text": "<p>Uninstall Helm release.</p>"}, {"location": "user/core-concepts/components/helm-app/#reset", "title": "reset", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/helm-app/#clean", "title": "clean", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/kafka-connector/", "title": "KafkaConnector", "text": "<p><code>KafkaConnector</code> is a component that deploys Kafka Connectors. Since a connector cannot be different from sink or source it is not recommended to use <code>KafkaConnector</code> for deployment in <code>pipeline.yaml</code>. Instead, <code>KafkaConnector</code> should be used in <code>defaults.yaml</code> to set defaults for all connectors in the pipeline as they can share some common settings.</p>"}, {"location": "user/core-concepts/components/kafka-sink-connector/", "title": "KafkaSinkConnector", "text": "<p>Subclass of KafkaConnector.</p>"}, {"location": "user/core-concepts/components/kafka-sink-connector/#usage", "title": "Usage", "text": "<p>Lets other systems pull data from Apache Kafka.</p>"}, {"location": "user/core-concepts/components/kafka-sink-connector/#configuration", "title": "Configuration", "text": "<code>pipeline.yaml</code> <pre><code># Kafka sink connector\n- type: kafka-sink-connector\n  name: kafka-sink-connector # required\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  from: # Must not be null\n    topics: # read from topic\n      ${pipeline.name}-input-topic:\n        type: input # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra\n      ${pipeline.name}-input-pattern-topic:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      ${pipeline.name}-extra-pattern-topic:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n    components: # read from specific component\n      account-producer:\n        type: input # Implied when role is NOT specified\n      other-producer:\n        role: some-role # Implies `type` to be extra\n      component-as-input-pattern:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      component-as-extra-pattern:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  # Full documentation on connectors: https://kafka.apache.org/documentation/#connectconfigs\n  config: # required\n    tasks.max: 1\n  # Overriding Kafka Connect Resetter Helm values. E.g. to override the\n  # Image Tag etc.\n  resetter_values:\n    imageTag: \"1.2.3\"\n</code></pre>"}, {"location": "user/core-concepts/components/kafka-sink-connector/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/kafka-sink-connector/#deploy", "title": "deploy", "text": "<ul> <li>Add the sink connector to the Kafka Connect cluster</li> <li>Create the output topics if provided (optional)</li> <li>Register schemas in the Schema Registry if provided (optional)</li> </ul>"}, {"location": "user/core-concepts/components/kafka-sink-connector/#destroy", "title": "destroy", "text": "<p>The associated sink connector is removed from the Kafka Connect cluster.</p>"}, {"location": "user/core-concepts/components/kafka-sink-connector/#reset", "title": "reset", "text": "<p>Reset the consumer group offsets using bakdata's sink resetter.</p>"}, {"location": "user/core-concepts/components/kafka-sink-connector/#clean", "title": "clean", "text": "<ul> <li>Delete associated consumer group</li> <li>Delete configured error topics</li> </ul>"}, {"location": "user/core-concepts/components/kafka-source-connector/", "title": "KafkaSourceConnector", "text": "<p>Subclass of KafkaConnector.</p>"}, {"location": "user/core-concepts/components/kafka-source-connector/#usage", "title": "Usage", "text": "<p>Manages source connectors in your Kafka Connect cluster.</p>"}, {"location": "user/core-concepts/components/kafka-source-connector/#configuration", "title": "Configuration", "text": "<code>pipeline.yaml</code> <pre><code># Kafka source connector\n- type: kafka-source-connector # required\n  name: kafka-source-connector # required\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  # The source connector has no `from` section\n  # from:\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  # Full documentation on connectors: https://kafka.apache.org/documentation/#connectconfigs\n  config: # required\n    tasks.max: 1\n  # Overriding Kafka Connect Resetter Helm values. E.g. to override the\n  # Image Tag etc.\n  resetter_values:\n    imageTag: \"1.2.3\"\n  # offset.storage.topic\n  # https://kafka.apache.org/documentation/#connect_running\n  offset_topic: offset_topic\n</code></pre>"}, {"location": "user/core-concepts/components/kafka-source-connector/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/kafka-source-connector/#deploy", "title": "deploy", "text": "<ul> <li>Add the source connector to the Kafka Connect cluster</li> <li>Create the output topics if provided (optional)</li> <li>Register schemas in the Schema registry if provided (optional)</li> </ul>"}, {"location": "user/core-concepts/components/kafka-source-connector/#destroy", "title": "destroy", "text": "<p>Remove the source connector from the Kafka Connect cluster.</p>"}, {"location": "user/core-concepts/components/kafka-source-connector/#reset", "title": "reset", "text": "<p>Delete state associated with the connector using bakdata's source resetter.</p>"}, {"location": "user/core-concepts/components/kafka-source-connector/#clean", "title": "clean", "text": "<ul> <li>Delete all associated output topics</li> <li>Delete all associated schemas in the Schema Registry</li> <li>Delete state associated with the connector</li> </ul>"}, {"location": "user/core-concepts/components/kubernetes-app/", "title": "KubernetesApp", "text": ""}, {"location": "user/core-concepts/components/kubernetes-app/#usage", "title": "Usage", "text": "<p>Can be used to create components for any Kubernetes app.</p>"}, {"location": "user/core-concepts/components/kubernetes-app/#configuration", "title": "Configuration", "text": "<code>pipeline.yaml</code> <pre><code># Base Kubernetes App\n- type: kubernetes-app\n  name: kubernetes-app # required\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  from: # Must not be null\n    topics: # read from topic\n      ${pipeline.name}-input-topic:\n        type: input # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra\n      ${pipeline.name}-input-pattern-topic:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      ${pipeline.name}-extra-pattern-topic:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n    components: # read from specific component\n      account-producer:\n        type: input # Implied when role is NOT specified\n      other-producer:\n        role: some-role # Implies `type` to be extra\n      component-as-input-pattern:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      component-as-extra-pattern:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  namespace: namespace # required\n  values: # required\n    image: exampleImage # Example\n    debug: false # Example\n    commandLine: {} # Example\n</code></pre>"}, {"location": "user/core-concepts/components/kubernetes-app/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/kubernetes-app/#deploy", "title": "deploy", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/kubernetes-app/#destroy", "title": "destroy", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/kubernetes-app/#reset", "title": "reset", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/kubernetes-app/#clean", "title": "clean", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/overview/", "title": "Overview", "text": "<p>This section explains the different components of KPOps, their usage and configuration in the pipeline definition <code>pipeline.yaml</code>.</p> <pre><code>flowchart BT\n    KubernetesApp --&gt; PipelineComponent\n    HelmApp --&gt; KubernetesApp\n    StreamsBootstrap --&gt; HelmApp\n    StreamsApp --&gt; StreamsBootstrap\n    ProducerApp --&gt; StreamsBootstrap\n    KafkaConnector --&gt; PipelineComponent\n    KafkaSourceConnector --&gt; KafkaConnector\n    KafkaSinkConnector --&gt; KafkaConnector\n\n    click KubernetesApp \"./../kubernetes-app\"\n    click HelmApp \"./../helm-app\"\n    click StreamsBootstrap \"./../streams-bootstrap\"\n    click StreamsApp \"./../streams-app\"\n    click ProducerApp \"./../producer-app\"\n    click KafkaConnector \"./../kafka-connector\"\n    click KafkaSourceConnector \"./../kafka-source-connector\"\n    click KafkaSinkConnector \"./../kafka-sink-connector\"</code></pre> <p>KPOps component hierarchy</p>"}, {"location": "user/core-concepts/components/producer-app/", "title": "ProducerApp", "text": "<p>Subclass of StreamsBootstrap.</p>"}, {"location": "user/core-concepts/components/producer-app/#usage", "title": "Usage", "text": "<p>Configures a streams-bootstrap Kafka producer app</p>"}, {"location": "user/core-concepts/components/producer-app/#configuration", "title": "Configuration", "text": "<code>pipeline.yaml</code> <pre><code># Holds configuration to use as values for the streams bootstrap producer-app Helm\n# chart.\n# More documentation on ProducerApp:\n# https://github.com/bakdata/streams-bootstrap\n- type: producer-app\n  name: producer-app # required\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  # from: # While the producer-app does inherit from kafka-app, it does not need a\n  # `from` section, hence it does not support it.\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  namespace: namespace # required\n  # Allowed configs:\n  # https://github.com/bakdata/streams-bootstrap/tree/master/charts/producer-app\n  values: # required\n    streams: # required, producer-app-specific\n      brokers: ${config.kafka_brokers} # required\n      schemaRegistryUrl: ${config.schema_registry.url}\n      outputTopic: output_topic\n      extraOutputTopics:\n        output_role1: output_topic1\n        output_role2: output_topic2\n    nameOverride: override-with-this-name # kafka-app-specific\n  # Helm repository configuration (optional)\n  # If not set the helm repo add will not be called. Useful when using local Helm charts\n  repo_config:\n    repository_name: bakdata-streams-bootstrap # required\n    url: https://bakdata.github.io/streams-bootstrap/ # required\n    repo_auth_flags:\n      username: user\n      password: pass\n      ca_file: /home/user/path/to/ca-file\n      insecure_skip_tls_verify: false\n  version: \"2.12.0\" # Helm chart version\n</code></pre>"}, {"location": "user/core-concepts/components/producer-app/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/producer-app/#deploy", "title": "deploy", "text": "<p>In addition to KubernetesApp's <code>deploy</code>:</p> <ul> <li>Create topics if provided (optional)</li> <li>Submit Avro schemas to the registry if provided (optional)</li> </ul>"}, {"location": "user/core-concepts/components/producer-app/#destroy", "title": "destroy", "text": "<p>Uninstall Helm release.</p>"}, {"location": "user/core-concepts/components/producer-app/#reset", "title": "reset", "text": "<p>Do nothing, producers are stateless.</p>"}, {"location": "user/core-concepts/components/producer-app/#clean", "title": "clean", "text": "<ul> <li>Delete the output topics of the Kafka producer</li> <li>Delete all associated schemas in the Schema Registry</li> </ul>"}, {"location": "user/core-concepts/components/streams-app/", "title": "StreamsApp", "text": "<p>Subclass of and StreamsBootstrap.</p>"}, {"location": "user/core-concepts/components/streams-app/#usage", "title": "Usage", "text": "<p>Configures a streams-bootstrap Kafka Streams app</p>"}, {"location": "user/core-concepts/components/streams-app/#configuration", "title": "Configuration", "text": "<code>pipeline.yaml</code> <pre><code># StreamsApp component that configures a streams bootstrap app.\n# More documentation on StreamsApp: https://github.com/bakdata/streams-bootstrap\n- type: streams-app # required\n  name: streams-app # required\n  # Pipeline prefix that will prefix every component name. If you wish to not\n  # have any prefix you can specify an empty string.\n  prefix: ${pipeline.name}-\n  from: # Must not be null\n    topics: # read from topic\n      ${pipeline.name}-input-topic:\n        type: input # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra\n      ${pipeline.name}-input-pattern-topic:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      ${pipeline.name}-extra-pattern-topic:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n    components: # read from specific component\n      account-producer:\n        type: input # Implied when role is NOT specified\n      other-producer:\n        role: some-role # Implies `type` to be extra\n      component-as-input-pattern:\n        type: pattern # Implied to be an input pattern if `role` is undefined\n      component-as-extra-pattern:\n        type: pattern # Implied to be an extra pattern if `role` is defined\n        role: some-role\n  # Topic(s) into which the component will write output\n  to:\n    topics:\n      ${pipeline.name}-output-topic:\n        type: output # Implied when role is NOT specified\n      ${pipeline.name}-extra-topic:\n        role: topic-role # Implies `type` to be extra; Will throw an error if `type` is defined\n      ${pipeline.name}-error-topic:\n        type: error\n        # Currently KPOps supports Avro and JSON schemas.\n        key_schema: key-schema # must implement SchemaProvider to use\n        value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs: # https://kafka.apache.org/documentation/#topicconfigs\n          cleanup.policy: compact\n    models: # SchemaProvider is initiated with the values given here\n      model: model\n  namespace: namespace # required\n  # No arbitrary keys are allowed under `app`here\n  # Allowed configs:\n  # https://github.com/bakdata/streams-bootstrap/tree/master/charts/streams-app\n  values: # required\n    # Streams Bootstrap streams section\n    streams: # required, streams-app-specific\n      brokers: ${config.kafka_brokers} # required\n      schemaRegistryUrl: ${config.schema_registry.url}\n      inputTopics:\n        - topic1\n        - topic2\n      outputTopic: output-topic\n      inputPattern: input-pattern\n      extraInputTopics:\n        input_role1:\n          - input_topic1\n          - input_topic2\n        input_role2:\n          - input_topic3\n          - input_topic4\n      extraInputPatterns:\n        pattern_role1: input_pattern1\n      extraOutputTopics:\n        output_role1: output_topic1\n        output_role2: output_topic2\n      errorTopic: error-topic\n      config:\n        my.streams.config: my.value\n    nameOverride: override-with-this-name # streams-app-specific\n    autoscaling: # streams-app-specific\n      consumerGroup: consumer-group # required\n      lagThreshold: 0 # Average target value to trigger scaling actions.\n      enabled: false # Whether to enable auto-scaling using KEDA.\n      # This is the interval to check each trigger on.\n      # https://keda.sh/docs/2.9/concepts/scaling-deployments/#pollinginterval\n      pollingInterval: 30\n      # The period to wait after the last trigger reported active before scaling\n      #  the resource back to 0. https://keda.sh/docs/2.9/concepts/scaling-deployments/#cooldownperiod\n      cooldownPeriod: 300\n      # The offset reset policy for the consumer if the the consumer group is\n      # not yet subscribed to a partition.\n      offsetResetPolicy: earliest\n      # This setting is passed to the HPA definition that KEDA will create for a\n      # given resource and holds the maximum number of replicas of the target resouce.\n      # https://keda.sh/docs/2.9/concepts/scaling-deployments/#maxreplicacount\n      maxReplicas: 1\n      # Minimum number of replicas KEDA will scale the resource down to.\n      # https://keda.sh/docs/2.7/concepts/scaling-deployments/#minreplicacount\n      minReplicas: 0\n      # If this property is set, KEDA will scale the resource down to this\n      # number of replicas.\n      # https://keda.sh/docs/2.9/concepts/scaling-deployments/#idlereplicacount\n      idleReplicas: 0\n      topics: # List of auto-generated Kafka Streams topics used by the streams app.\n        - topic1\n        - topic2\n  # Helm repository configuration (optional)\n  # If not set the helm repo add will not be called. Useful when using local Helm charts\n  repo_config:\n    repository_name: bakdata-streams-bootstrap # required\n    url: https://bakdata.github.io/streams-bootstrap/ # required\n    repo_auth_flags:\n      username: user\n      password: pass\n      ca_file: /home/user/path/to/ca-file\n      insecure_skip_tls_verify: false\n  version: \"2.12.0\" # Helm chart version\n</code></pre>"}, {"location": "user/core-concepts/components/streams-app/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/streams-app/#deploy", "title": "deploy", "text": "<p>In addition to KubernetesApp's <code>deploy</code>:</p> <ul> <li>Create topics if provided (optional)</li> <li>Submit Avro schemas to the registry if provided (optional)</li> </ul>"}, {"location": "user/core-concepts/components/streams-app/#destroy", "title": "destroy", "text": "<p>Uninstall Helm release.</p>"}, {"location": "user/core-concepts/components/streams-app/#reset", "title": "reset", "text": "<ul> <li>Delete the consumer group offsets</li> <li>Delete Kafka Streams state</li> </ul>"}, {"location": "user/core-concepts/components/streams-app/#clean", "title": "clean", "text": "<p>Similar to <code>reset</code> with to additional steps:</p> <ul> <li>Delete the app's output topics</li> <li>Delete all associated schemas in the Schema Registry</li> </ul>"}, {"location": "user/core-concepts/components/streams-bootstrap/", "title": "Streams Bootstrap", "text": "<p>Subclass of HelmApp.</p>"}, {"location": "user/core-concepts/components/streams-bootstrap/#usage", "title": "Usage", "text": "<ul> <li> <p>Defines a streams-bootstrap component</p> </li> <li> <p>Often used in <code>defaults.yaml</code></p> </li> </ul>"}, {"location": "user/core-concepts/components/streams-bootstrap/#operations", "title": "Operations", "text": ""}, {"location": "user/core-concepts/components/streams-bootstrap/#deploy", "title": "deploy", "text": "<p>Deploy using Helm.</p>"}, {"location": "user/core-concepts/components/streams-bootstrap/#destroy", "title": "destroy", "text": "<p>Uninstall Helm release.</p>"}, {"location": "user/core-concepts/components/streams-bootstrap/#reset", "title": "reset", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/components/streams-bootstrap/#clean", "title": "clean", "text": "<p>Do nothing.</p>"}, {"location": "user/core-concepts/variables/environment_variables/", "title": "Environment variables", "text": "<p>Environment variables can be set by using the export command in Linux or the set command in Windows.</p> <p>dotenv files</p> <p>KPOps currently supports <code>.env</code> files only for variables related to the config. Full support for <code>.env</code> files is on the roadmap. One of the possible ways to use one and export the contents manually is with the following command: <code>export $(xargs &lt; .env)</code>. This would work in <code>bash</code> suppose there are no spaces inside the values.</p>"}, {"location": "user/core-concepts/variables/environment_variables/#config", "title": "Config", "text": "<p>These variables take precedence over the settings in <code>config.yaml</code>. Variables marked as required can instead be set in the global config.</p> Name Default Value Required Description Setting name KPOPS_PIPELINE_BASE_DIR . False Base directory to the pipelines (default is current working directory) pipeline_base_dir KPOPS_KAFKA_BROKERS True The comma separated Kafka brokers address. kafka_brokers KPOPS_TOPIC_NAME_CONFIG__DEFAULT_OUTPUT_TOPIC_NAME ${pipeline.name}-${component.name} False Configures the value for the variable ${output_topic_name} topic_name_config.default_output_topic_name KPOPS_TOPIC_NAME_CONFIG__DEFAULT_ERROR_TOPIC_NAME ${pipeline.name}-${component.name}-error False Configures the value for the variable ${error_topic_name} topic_name_config.default_error_topic_name KPOPS_SCHEMA_REGISTRY__ENABLED False False Whether the Schema Registry handler should be initialized. schema_registry.enabled KPOPS_SCHEMA_REGISTRY__URL http://localhost:8081/ False Address of the Schema Registry. schema_registry.url KPOPS_SCHEMA_REGISTRY__TIMEOUT 30 False Operation timeout in seconds. schema_registry.timeout KPOPS_KAFKA_REST__URL http://localhost:8082/ False Address of the Kafka REST Proxy. kafka_rest.url KPOPS_KAFKA_REST__TIMEOUT 30 False Operation timeout in seconds. kafka_rest.timeout KPOPS_KAFKA_CONNECT__URL http://localhost:8083/ False Address of Kafka Connect. kafka_connect.url KPOPS_KAFKA_CONNECT__TIMEOUT 30 False Operation timeout in seconds. kafka_connect.timeout KPOPS_CREATE_NAMESPACE False False Flag for <code>helm upgrade --install</code>. Create the release namespace if not present. create_namespace KPOPS_HELM_CONFIG__CONTEXT False Name of kubeconfig context (<code>--kube-context</code>) helm_config.context KPOPS_HELM_CONFIG__DEBUG False False Run Helm in Debug mode helm_config.debug KPOPS_HELM_CONFIG__API_VERSION False Kubernetes API version used for <code>Capabilities.APIVersions</code> helm_config.api_version KPOPS_RETAIN_CLEAN_JOBS False False Whether to retain clean up jobs in the cluster or uninstall the, after completion. retain_clean_jobs KPOPS_STRIMZI_TOPIC False Configuration for Strimzi Kafka Topics. strimzi_topic KPOPS_OPERATION_MODE managed False The operation mode of KPOps (managed, manifest, argo). operation_mode config_env_vars.env Exhaustive list of all config-related environment variables<pre><code># Global config environment variables\n#\n# The default setup is shown. These variables take precedence over the\n# settings in `config.yaml`. Variables marked as required can instead\n# be set in the global config.\n#\n# pipeline_base_dir\n# Base directory to the pipelines (default is current working\n# directory)\nKPOPS_PIPELINE_BASE_DIR=.\n# kafka_brokers\n# The comma separated Kafka brokers address.\nKPOPS_KAFKA_BROKERS # No default value, required\n# topic_name_config.default_output_topic_name\n# Configures the value for the variable ${output_topic_name}\nKPOPS_TOPIC_NAME_CONFIG__DEFAULT_OUTPUT_TOPIC_NAME=${pipeline.name}-${component.name}\n# topic_name_config.default_error_topic_name\n# Configures the value for the variable ${error_topic_name}\nKPOPS_TOPIC_NAME_CONFIG__DEFAULT_ERROR_TOPIC_NAME=${pipeline.name}-${component.name}-error\n# schema_registry.enabled\n# Whether the Schema Registry handler should be initialized.\nKPOPS_SCHEMA_REGISTRY__ENABLED=False\n# schema_registry.url\n# Address of the Schema Registry.\nKPOPS_SCHEMA_REGISTRY__URL=http://localhost:8081/\n# schema_registry.timeout\n# Operation timeout in seconds.\nKPOPS_SCHEMA_REGISTRY__TIMEOUT=30\n# kafka_rest.url\n# Address of the Kafka REST Proxy.\nKPOPS_KAFKA_REST__URL=http://localhost:8082/\n# kafka_rest.timeout\n# Operation timeout in seconds.\nKPOPS_KAFKA_REST__TIMEOUT=30\n# kafka_connect.url\n# Address of Kafka Connect.\nKPOPS_KAFKA_CONNECT__URL=http://localhost:8083/\n# kafka_connect.timeout\n# Operation timeout in seconds.\nKPOPS_KAFKA_CONNECT__TIMEOUT=30\n# create_namespace\n# Flag for `helm upgrade --install`. Create the release namespace if\n# not present.\nKPOPS_CREATE_NAMESPACE=False\n# helm_config.context\n# Name of kubeconfig context (`--kube-context`)\nKPOPS_HELM_CONFIG__CONTEXT # No default value, not required\n# helm_config.debug\n# Run Helm in Debug mode\nKPOPS_HELM_CONFIG__DEBUG=False\n# helm_config.api_version\n# Kubernetes API version used for `Capabilities.APIVersions`\nKPOPS_HELM_CONFIG__API_VERSION # No default value, not required\n# retain_clean_jobs\n# Whether to retain clean up jobs in the cluster or uninstall the,\n# after completion.\nKPOPS_RETAIN_CLEAN_JOBS=False\n# strimzi_topic\n# Configuration for Strimzi Kafka Topics.\nKPOPS_STRIMZI_TOPIC # No default value, not required\n# operation_mode\n# The operation mode of KPOps (managed, manifest, argo).\nKPOPS_OPERATION_MODE=managed\n</code></pre>"}, {"location": "user/core-concepts/variables/environment_variables/#cli", "title": "CLI", "text": "<p>These variables take precedence over the commands' flags. If a variable is set, the corresponding flag does not have to be specified in commands. Variables marked as required can instead be set as flags.</p> Name Default Value Required Description KPOPS_CONFIG_PATH . False Path to the dir containing config.yaml files KPOPS_DOTENV_PATH False Path to dotenv file. Multiple files can be provided. The files will be loaded in order, with each file overriding the previous one. KPOPS_ENVIRONMENT False The environment you want to generate and deploy the pipeline to. Suffix your environment files with this value (e.g. defaults_development.yaml for environment=development). KPOPS_OPERATION_MODE managed False How KPOps should operate. KPOPS_PIPELINE_PATHS True Paths to dir containing 'pipeline.yaml' or files named 'pipeline.yaml'. KPOPS_PIPELINE_STEPS False Comma separated list of steps to apply the command on cli_env_vars.env Exhaustive list of all cli-related environment variables<pre><code># CLI Environment variables\n#\n# The default setup is shown. These variables take precedence over the\n# commands' flags. If a variable is set, the corresponding flag does\n# not have to be specified in commands. Variables marked as required\n# can instead be set as flags.\n#\n# Path to the dir containing config.yaml files\nKPOPS_CONFIG_PATH=.\n# Path to dotenv file. Multiple files can be provided. The files will\n# be loaded in order, with each file overriding the previous one.\nKPOPS_DOTENV_PATH # No default value, not required\n# The environment you want to generate and deploy the pipeline to.\n# Suffix your environment files with this value (e.g.\n# defaults_development.yaml for environment=development).\nKPOPS_ENVIRONMENT # No default value, not required\n# How KPOps should operate.\nKPOPS_OPERATION_MODE=managed\n# Paths to dir containing 'pipeline.yaml' or files named\n# 'pipeline.yaml'.\nKPOPS_PIPELINE_PATHS # No default value, required\n# Comma separated list of steps to apply the command on\nKPOPS_PIPELINE_STEPS # No default value, not required\n</code></pre>"}, {"location": "user/core-concepts/variables/substitution/", "title": "Substitution", "text": "<p>KPOps supports the usage of placeholders and environment variables in pipeline definition and defaults.</p>"}, {"location": "user/core-concepts/variables/substitution/#component-specific-variables", "title": "Component-specific variables", "text": "<p>These variables can be used in a component's definition to refer to any of its attributes, including ones that the user has defined in the defaults.</p> <p>All of them are prefixed with <code>component.</code> and follow the following form: <code>component.{attribute_name}</code>. If the attribute itself contains attributes, they can be referred to like this: <code>component.{attribute_name}.{subattribute_name}</code>.</p> Example <pre><code>- type: scheduled-producer\n  values:\n    labels:\n      app_type: \"${component.type}\"\n      app_name: \"${component.name}\"\n      app_schedule: \"${component.values.schedule}\"\n    commandLine:\n      FAKE_ARG: \"fake-arg-value\"\n    schedule: \"30 3/8 * * *\"\n- type: converter\n  values:\n    commandLine:\n      CONVERT_XML: true\n    resources:\n      limits:\n        memory: 2G\n      requests:\n        memory: 2G\n- type: filter\n  name: \"filter-app\"\n  values:\n    labels:\n      app_type: \"${component.type}\"\n      app_name: \"${component.name}\"\n      app_resources_requests_memory: \"${component.values.resources.requests.memory}\"\n      ${component.type}: \"${component.values.labels.app_name}-${component.values.labels.app_type}\"\n      test_placeholder_in_placeholder: \"${component.values.labels.${component.type}}\"\n    commandLine:\n      TYPE: \"nothing\"\n    resources:\n      requests:\n        memory: 3G\n    replicaCount: 4\n    autoscaling:\n      minReplicas: 4\n      maxReplicas: 4\n</code></pre>"}, {"location": "user/core-concepts/variables/substitution/#pipeline-config-specific-variables", "title": "Pipeline-config-specific variables", "text": "<p>These variables include all fields in the config and refer to the pipeline configuration that is independent of the components.</p> <p>All such variables are prefixed with <code>config.</code> and are of the same form as the component-specific variables.</p> <p>Info</p> <p><code>error_topic_name</code> is an alias for <code>config.topic_name_config.default_error_topic_name</code> <code>output_topic_name</code> is an alias for <code>config.topic_name_config.default_output_topic_name</code></p>"}, {"location": "user/core-concepts/variables/substitution/#environment-variables", "title": "Environment variables", "text": "<p>Environment variables such as <code>$PATH</code> can be used in the pipeline definition and defaults without any transformation following the form <code>${ENV_VAR_NAME}</code>. This, of course, includes variables like the ones relevant to the KPOps cli that are exported by the user.</p> <p>See all KPOps environment variables</p>"}, {"location": "user/core-concepts/variables/substitution/#pipeline-name-variables", "title": "Pipeline name variables", "text": "<p>These are special variables that refer to the name and path of a pipeline.</p> <ul> <li> <p><code>${pipeline.name}</code>: Concatenated path of the parent directory where pipeline.yaml is defined in.   For instance, <code>./data/pipelines/v1/pipeline.yaml</code>, here the value for the variable would be <code>data-pipelines-v1</code>.</p> </li> <li> <p><code>${pipeline_name_&lt;level&gt;}</code>: Similar to the previous variable, each <code>&lt;level&gt;</code> contains a part of the path to the <code>pipeline.yaml</code> file.   Consider the previous example, <code>${pipeline_name_0}</code> would be <code>data</code>, <code>${pipeline_name_1}</code> would be <code>pipelines</code>, and <code>${pipeline_name_2}</code> equals to <code>v1</code>.</p> </li> </ul>"}, {"location": "user/core-concepts/variables/substitution/#advanced-use-cases", "title": "Advanced use cases", "text": "<ol> <li>Refer to default component field values: As long as a value is assigned to a component attribute, it is possible to refer to it with a placeholder. To see all component fields, take a look at the pipeline schema.</li> <li>Chaining variables: It is possible to chain any number of variables, see the example above.</li> <li>Cross-component substitution: YAML is quite an intricate language and with some of its magic one could write cross-component references.</li> </ol>"}, {"location": "user/examples/atm-fraud-pipeline/", "title": "ATM fraud detection pipeline", "text": "<p>ATM fraud is a demo pipeline for ATM fraud detection. The original by Confluent is written in KSQL and outlined in this blogpost. The one used in this example is re-built from scratch using bakdata's <code>streams-bootstrap</code> library.</p>"}, {"location": "user/examples/atm-fraud-pipeline/#what-this-will-demonstrate", "title": "What this will demonstrate", "text": "<ul> <li>Deploying a PostgreSQL database using Helm</li> <li>Deploying a pipeline using KPOps</li> <li>Destroying a pipeline using KPOps</li> </ul>"}, {"location": "user/examples/atm-fraud-pipeline/#prerequisites", "title": "Prerequisites", "text": "<p>Completed all steps in the setup.</p>"}, {"location": "user/examples/atm-fraud-pipeline/#setup-and-deployment", "title": "Setup and deployment", "text": ""}, {"location": "user/examples/atm-fraud-pipeline/#postgresql", "title": "PostgreSQL", "text": "<p>Deploy PostgreSQL using the Bitnami Helm chart: Add the helm repository:</p> <pre><code>helm repo add bitnami https://charts.bitnami.com/bitnami &amp;&amp; \\\nhelm repo update\n</code></pre> <p>Install the PostgreSQL with helm:</p> <pre><code>helm upgrade --install -f ./postgresql.yaml \\\n--namespace kpops \\\npostgresql bitnami/postgresql\n</code></pre> PostgreSQL Example Helm chart values (<code>postgresql.yaml</code>) <pre><code>auth:\n  database: app_db\n  enablePostgresUser: true\n  password: AppPassword\n  postgresPassword: StrongPassword\n  username: app1\nprimary:\n  persistence:\n    enabled: false\n    existingClaim: postgresql-data-claim\nvolumePermissions:\n  enabled: true\n</code></pre>"}, {"location": "user/examples/atm-fraud-pipeline/#atm-fraud-detection-example-pipeline-setup", "title": "ATM fraud detection example pipeline setup", "text": ""}, {"location": "user/examples/atm-fraud-pipeline/#port-forwarding", "title": "Port forwarding", "text": "<p>Before we deploy the pipeline, we need to forward the ports of <code>kafka-rest-proxy</code> and <code>kafka-connect</code>. Run the following commands in two different terminals.</p> <pre><code>kubectl port-forward --namespace kpops service/k8kafka-cp-rest 8082:8082\n</code></pre> <pre><code>kubectl port-forward --namespace kpops service/k8kafka-cp-kafka-connect 8083:8083\n</code></pre>"}, {"location": "user/examples/atm-fraud-pipeline/#deploying-the-atm-fraud-detection-pipeline", "title": "Deploying the ATM fraud detection pipeline", "text": "<ol> <li> <p>Clone the kpops-examples repository and <code>cd</code> into the directory.</p> </li> <li> <p>Install KPOps <code>pip install -r requirements.txt</code>.</p> </li> <li> <p>Export environment variables in your terminal:</p> <pre><code>export DOCKER_REGISTRY=bakdata &amp;&amp; \\\nexport NAMESPACE=kpops\n</code></pre> </li> <li> <p>Deploy the pipeline</p> <pre><code>kpops deploy atm-fraud/pipeline.yaml --execute\n</code></pre> </li> </ol> <p>Note</p> <p>You can use the <code>--dry-run</code> flag instead of the <code>--execute</code> flag and check the logs if your pipeline will be deployed correctly.</p>"}, {"location": "user/examples/atm-fraud-pipeline/#check-if-the-deployment-is-successful", "title": "Check if the deployment is successful", "text": "<p>You can use the Streams Explorer to see the deployed pipeline. To do so, port-forward the service in a separate terminal session using the command below:</p> <pre><code>kubectl port-forward -n kpops service/streams-explorer 8080:8080\n</code></pre> <p>After that open http://localhost:8080 in your browser. You should be able to see pipeline shown in the image below:</p> <p> </p> An overview of ATM fraud pipeline shown in Streams Explorer <p>Attention</p> <p>Kafka Connect needs some time to set up the connector. Moreover, Streams Explorer needs a while to scrape the information from Kafka connect. Therefore, it might take a bit until you see the whole graph.</p>"}, {"location": "user/examples/atm-fraud-pipeline/#teardown-resources", "title": "Teardown resources", "text": ""}, {"location": "user/examples/atm-fraud-pipeline/#postrgresql", "title": "PostrgreSQL", "text": "<p>PostgreSQL can be uninstalled by running the following command:</p> <pre><code>helm --namespace kpops uninstall postgresql\n</code></pre>"}, {"location": "user/examples/atm-fraud-pipeline/#atm-fraud-pipeline", "title": "ATM fraud pipeline", "text": "<ol> <li> <p>Export environment variables in your terminal.</p> <pre><code>export DOCKER_REGISTRY=bakdata &amp;&amp; \\\nexport NAMESPACE=kpops\n</code></pre> </li> <li> <p>Remove the pipeline</p> <pre><code>kpops clean atm-fraud/pipeline.yaml --verbose  --execute\n</code></pre> </li> </ol> <p>Note</p> <p>You can use the <code>--dry-run</code> flag instead of the <code>--execute</code> flag and check the logs if your pipeline will be destroyed correctly.</p> <p>Attention</p> <p>If you face any issues destroying this example see Teardown for manual deletion.</p>"}, {"location": "user/examples/atm-fraud-pipeline/#common-errors", "title": "Common errors", "text": "<ul> <li><code>deploy</code> fails:</li> <li>Read the error message.</li> <li>Try to correct the mistakes if there were any. Likely the configuration is incorrect, or the port-forwarding is not working as intended.</li> <li>Run <code>clean</code>.</li> <li>Run <code>deploy --dry-run</code> to avoid havig to <code>clean</code> again. If an error is dropped, start over from step 1.</li> <li>If the dry-run is succesful, run <code>deploy</code>.</li> <li><code>clean</code> fails:</li> <li>Read the error message.</li> <li>Try to correct the indicated mistakes if there were any. Likely the configuration is incorrect, or the port-forwarding is not working as intended.</li> <li>Run <code>clean</code>.</li> <li>If <code>clean</code> fails, follow the steps in teardown.</li> </ul>"}, {"location": "user/getting-started/quick-start/", "title": "Quick start", "text": ""}, {"location": "user/getting-started/quick-start/#word-count", "title": "Word-count", "text": "<p>Word-count is a demo pipeline consisting of a producer producing words to Kafka, a Kafka streams app counting the number of times each word occurs, and finally a Redis database into which the words are exported.</p>"}, {"location": "user/getting-started/quick-start/#what-this-will-demonstrate", "title": "What this will demonstrate", "text": "<ul> <li>Deploying a Redis database using Helm</li> <li>Deploying a pipeline using KPOps</li> <li>Destroying a pipeline using KPOps</li> </ul>"}, {"location": "user/getting-started/quick-start/#prerequisites", "title": "Prerequisites", "text": "<p>Completed all steps in the setup.</p>"}, {"location": "user/getting-started/quick-start/#setup-and-deployment", "title": "Setup and deployment", "text": ""}, {"location": "user/getting-started/quick-start/#redis", "title": "Redis", "text": "<p>Deploy Redis using the Bitnami Helm chart: Add the Helm repository:</p> <pre><code>helm repo add bitnami https://charts.bitnami.com/bitnami &amp;&amp; \\\nhelm repo update\n</code></pre> <p>Install Redis with Helm:</p> <pre><code>helm upgrade --install -f ./values-redis.yaml \\\n--namespace kpops \\\nredis bitnami/redis\n</code></pre> Redis example Helm chart values (<code>values-redis.yaml</code>) <pre><code>architecture: standalone\nauth:\n  enabled: false\nmaster:\n  count: 1\n  configuration: \"databases 1\"\nimage:\n  tag: 7.0.8\n</code></pre>"}, {"location": "user/getting-started/quick-start/#word-count-example-pipeline-setup", "title": "Word-count example pipeline setup", "text": ""}, {"location": "user/getting-started/quick-start/#port-forwarding", "title": "Port forwarding", "text": "<p>Before we deploy the pipeline, we need to forward the ports of <code>kafka-rest-proxy</code> and <code>kafka-connect</code>. Run the following commands in two different terminals.</p> <pre><code>kubectl port-forward --namespace kpops service/k8kafka-cp-rest 8082:8082\n</code></pre> <pre><code>kubectl port-forward --namespace kpops service/k8kafka-cp-kafka-connect 8083:8083\n</code></pre>"}, {"location": "user/getting-started/quick-start/#deploying-the-word-count-pipeline", "title": "Deploying the Word-count pipeline", "text": "<ol> <li> <p>Clone the kpops-examples repository and <code>cd</code> into the directory.</p> </li> <li> <p>Install KPOps <code>pip install -r requirements.txt</code>.</p> </li> <li> <p>Export environment variables in your terminal:</p> <pre><code>export DOCKER_REGISTRY=bakdata &amp;&amp; \\\nexport NAMESPACE=kpops\n</code></pre> </li> <li> <p>Deploy the pipeline</p> <pre><code>kpops deploy word-count/pipeline.yaml --execute\n</code></pre> </li> </ol> <p>Note</p> <p>You can use the <code>--dry-run</code> flag instead of the <code>--execute</code> flag and check the logs if your pipeline will be deployed correctly.</p>"}, {"location": "user/getting-started/quick-start/#check-if-the-deployment-is-successful", "title": "Check if the deployment is successful", "text": "<p>You can use the Streams Explorer to inspect the deployed pipeline. To do so, port-forward the service in a separate terminal session using the command below:</p> <pre><code>kubectl port-forward -n kpops service/streams-explorer 8080:8080\n</code></pre> <p>After that open http://localhost:8080 in your browser.</p> <p>You should be able to see pipeline shown in the image below:</p> <p> </p> An overview of Word-count pipeline shown in Streams Explorer <p>Attention</p> <p>Kafka Connect needs some time to set up the connector. Moreover, Streams Explorer needs a while to scrape the information from Kafka Connect. Therefore, it might take a bit until you see the whole graph.</p>"}, {"location": "user/getting-started/quick-start/#teardown-resources", "title": "Teardown resources", "text": ""}, {"location": "user/getting-started/quick-start/#redis_1", "title": "Redis", "text": "<p>Redis can be uninstalled by running the following command:</p> <pre><code>helm --namespace kpops uninstall redis\n</code></pre>"}, {"location": "user/getting-started/quick-start/#word-count-pipeline", "title": "Word-count pipeline", "text": "<ol> <li> <p>Export environment variables in your terminal.</p> <pre><code>export DOCKER_REGISTRY=bakdata &amp;&amp; \\\nexport NAMESPACE=kpops\n</code></pre> </li> <li> <p>Remove the pipeline</p> <pre><code>kpops clean word-count/pipeline.yaml --verbose --execute\n</code></pre> </li> </ol> <p>Note</p> <p>You can use the <code>--dry-run</code> flag instead of the <code>--execute</code> flag and check the logs if your pipeline will be destroyed correctly.</p> <p>Attention</p> <p>If you face any issues destroying this example see Teardown for manual deletion.</p>"}, {"location": "user/getting-started/quick-start/#common-errors", "title": "Common errors", "text": "<ul> <li><code>deploy</code> fails:<ol> <li>Read the error message.</li> <li>Try to correct the mistakes if there were any. Likely the configuration is incorrect, or the port-forwarding is not working as intended.</li> <li>Run <code>clean</code>.</li> <li>Run <code>deploy --dry-run</code> to avoid having to <code>clean</code> again. If an error is dropped, start over from step 1.</li> <li>If the dry-run is successful, run <code>deploy</code>.</li> </ol> </li> <li><code>clean</code> fails:<ol> <li>Read the error message.</li> <li>Try to correct the indicated mistakes if there were any. Likely the configuration is incorrect, or the port-forwarding is not working as intended.</li> <li>Run <code>clean</code>.</li> <li>If <code>clean</code> fails, follow the steps in teardown.</li> </ol> </li> </ul>"}, {"location": "user/getting-started/setup/", "title": "Setup KPOps", "text": "<p>In this part, you will set up KPOps. This includes:</p> <ul> <li>optionally creating a local Kubernetes cluster</li> <li>running Apache Kafka and Confluent's Schema Registry</li> <li>installing KPOps</li> </ul>"}, {"location": "user/getting-started/setup/#prerequisites", "title": "Prerequisites", "text": "<ul> <li>k3d (Version 5.4.6+) and Docker (Version &gt;= v20.10.5) or an existing Kubernetes cluster (&gt;= 1.21.0)</li> <li>kubectl (Compatible with server version 1.21.0)</li> <li>Helm (Version 3.8.0+)</li> </ul>"}, {"location": "user/getting-started/setup/#setup-kubernetes-with-k3d", "title": "Setup Kubernetes with k3d", "text": "<p>If you don't have access to an existing Kubernetes cluster, this section will guide you through creating a local cluster. We recommend the lightweight Kubernetes distribution k3s for this. k3d is a wrapper around k3s in Docker that lets you get started fast.</p> <ol> <li> <p>You can install k3d with its installation script:</p> <pre><code>wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/v5.4.6/install.sh | bash\n</code></pre> <p>For other ways of installing k3d, you can have a look at their installation guide.</p> </li> <li> <p>The Kafka deployment needs a modified Docker image. In that case the image is built and pushed to a Docker registry that holds it. If you do not have access to an existing Docker registry, you can use k3d's Docker registry:</p> <pre><code>k3d registry create kpops-registry.localhost --port 12345\n</code></pre> </li> <li> <p>Now you can create a new cluster called <code>kpops</code> that uses the previously created Docker registry:</p> <pre><code>k3d cluster create kpops --k3s-arg \"--no-deploy=traefik@server:*\" --registry-use k3d-kpops-registry.localhost:12345\n</code></pre> </li> </ol> <p>Note</p> <p>Creating a new k3d cluster automatically configures <code>kubectl</code> to connect to the local cluster by modifying your <code>~/.kube/config</code>. In case you manually set the <code>KUBECONFIG</code> variable or don't want k3d to modify your config, k3d offers many other options.</p> <p>You can check the cluster status with <code>kubectl get pods -n kube-system</code>. If all returned elements have a <code>STATUS</code> of <code>Running</code> or <code>Completed</code>, then the cluster is up and running.</p>"}, {"location": "user/getting-started/setup/#deploy-kafka", "title": "Deploy Kafka", "text": "<p>Kafka is an open-source data streaming platform. More information about Kafka can be found in the documentation. To deploy Kafka, this guide uses Confluent's Helm chart.</p> <ol> <li> <p>To allow connectivity to other systems Kafka Connect needs to be extended with drivers. You can install a JDBC driver for Kafka Connect by creating a new Docker image:</p> <ol> <li> <p>Create a <code>Dockerfile</code> with the following content:</p> <pre><code>FROM confluentinc/cp-kafka-connect:7.1.3\n\nRUN confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.6.0\n</code></pre> </li> <li> <p>Build and push the modified image to your private Docker registry:</p> <pre><code>docker build . --tag localhost:12345/kafka-connect-jdbc:7.1.3 &amp;&amp; \\\ndocker push localhost:12345/kafka-connect-jdbc:7.1.3\n</code></pre> </li> </ol> <p>Detailed instructions on building, tagging and pushing a docker image can be found in Docker docs.</p> </li> <li> <p>Add Confluent's Helm chart repository and update the index:</p> <pre><code>helm repo add confluentinc https://confluentinc.github.io/cp-helm-charts/ &amp;&amp;  \nhelm repo update\n</code></pre> </li> <li> <p>Install Kafka, Zookeeper, Confluent's Schema Registry, Kafka Rest Proxy, and Kafka Connect. A single Helm chart installs all five components. Below you can find an example for the <code>--values ./kafka.yaml</code> file configuring the deployment accordingly. Deploy the services:</p> <pre><code>helm upgrade \\\n    --install \\\n    --version 0.6.1 \\\n    --values ./kafka.yaml \\\n    --namespace kpops \\\n    --create-namespace \\\n    --wait \\\n    k8kafka confluentinc/cp-helm-charts\n</code></pre> </li> </ol> Kafka Helm chart values (<code>kafka.yaml</code>) <p>An example value configuration for Confluent's Helm chart. This configuration deploys a single Kafka Broker, a Schema Registry, Zookeeper, Kafka Rest Proxy, and Kafka Connect with minimal resources.</p> <pre><code>cp-zookeeper:\n  enabled: true\n  servers: 1\n  imageTag: 7.1.3\n  heapOptions: \"-Xms124M -Xmx124M\"\n  overrideGroupId: k8kafka\n  fullnameOverride: \"k8kafka-cp-zookeeper\"\n  resources:\n    requests:\n      cpu: 50m\n      memory: 0.2G\n    limits:\n      cpu: 250m\n      memory: 0.2G\n  prometheus:\n    jmx:\n      enabled: false\n\ncp-kafka:\n  enabled: true\n  brokers: 1\n  imageTag: 7.1.3\n  podManagementPolicy: Parallel\n  configurationOverrides:\n    \"auto.create.topics.enable\": false\n    \"offsets.topic.replication.factor\": 1\n    \"transaction.state.log.replication.factor\": 1\n    \"transaction.state.log.min.isr\": 1\n    \"confluent.metrics.reporter.topic.replicas\": 1\n  resources:\n    requests:\n      cpu: 50m\n      memory: 0.5G\n    limits:\n      cpu: 250m\n      memory: 0.5G\n  prometheus:\n    jmx:\n      enabled: false\n  persistence:\n    enabled: false\n\ncp-schema-registry:\n  enabled: true\n  imageTag: 7.1.3\n  fullnameOverride: \"k8kafka-cp-schema-registry\"\n  overrideGroupId: k8kafka\n  kafka:\n    bootstrapServers: \"PLAINTEXT://k8kafka-cp-kafka-headless:9092\"\n  resources:\n    requests:\n      cpu: 50m\n      memory: 0.25G\n    limits:\n      cpu: 250m\n      memory: 0.25G\n  prometheus:\n    jmx:\n      enabled: false\n\ncp-kafka-connect:\n  enabled: true\n  replicaCount: 1\n  image: k3d-kpops-registry.localhost:12345/kafka-connect-jdbc\n  imageTag: 7.1.3\n  fullnameOverride: \"k8kafka-cp-kafka-connect\"\n  overrideGroupId: k8kafka\n  kafka:\n    bootstrapServers: \"PLAINTEXT://k8kafka-cp-kafka-headless:9092\"\n  heapOptions: \"-Xms256M -Xmx256M\"\n  resources:\n    requests:\n      cpu: 500m\n      memory: 0.25G\n    limits:\n      cpu: 500m\n      memory: 0.25G\n  configurationOverrides:\n    \"consumer.max.poll.records\": \"10\"\n    \"consumer.max.poll.interval.ms\": \"900000\"\n    \"config.storage.replication.factor\": \"1\"\n    \"offset.storage.replication.factor\": \"1\"\n    \"status.storage.replication.factor\": \"1\"\n  cp-schema-registry:\n    url: http://k8kafka-cp-schema-registry:8081\n  prometheus:\n    jmx:\n      enabled: false\n\ncp-kafka-rest:\n  enabled: true\n  imageTag: 7.1.3\n  fullnameOverride: \"k8kafka-cp-rest\"\n  heapOptions: \"-Xms256M -Xmx256M\"\n  resources:\n    requests:\n      cpu: 50m\n      memory: 0.25G\n    limits:\n      cpu: 250m\n      memory: 0.5G\n  prometheus:\n    jmx:\n      enabled: false\n\ncp-ksql-server:\n  enabled: false\ncp-control-center:\n  enabled: false\n</code></pre>"}, {"location": "user/getting-started/setup/#deploy-streams-explorer", "title": "Deploy Streams Explorer", "text": "<p>Streams Explorer allows examining Apache Kafka data pipelines in a Kubernetes cluster including the inspection of schemas and monitoring of metrics. First, add the Helm repository:</p> <pre><code>helm repo add streams-explorer https://bakdata.github.io/streams-explorer &amp;&amp; \\\nhelm repo update\n</code></pre> <p>Below you can find an example for the <code>--values ./streams-explorer.yaml</code> file configuring the deployment accordingly. Now, deploy the service:</p> <pre><code>helm upgrade \\\n    --install \\\n    --version 0.2.3 \\\n    --values ./streams-explorer.yaml \\\n    --namespace kpops \\\n    streams-explorer streams-explorer/streams-explorer\n</code></pre> Streams Explorer Helm chart values (<code>streams-explorer.yaml</code>) <p>An example value configuration for Steams Explorer Helm chart.</p> <pre><code>imageTag: \"v2.1.2\"\nconfig:\n   K8S__deployment__cluster: true\n   SCHEMAREGISTRY__url: http://k8kafka-cp-schema-registry.kpops.svc.cluster.local:8081\n   KAFKACONNECT__url: http://k8kafka-cp-kafka-connect.kpops.svc.cluster.local:8083\nresources:\n   requests:\n       cpu: 200m\n       memory: 300Mi\n   limits:\n       cpu: 200m\n       memory: 300Mi\n</code></pre>"}, {"location": "user/getting-started/setup/#check-the-status-of-your-deployments", "title": "Check the status of your deployments", "text": "<p>Now we will check if all the pods are running in our namespace. You can list all pods in the namespace with this command:</p> <pre><code>kubectl --namespace kpops get pods\n</code></pre> <p>Then you should see the following output in your terminal:</p> <pre><code>NAME                                          READY   STATUS    RESTARTS   AGE\nk8kafka-cp-kafka-connect-8fc7d544f-8pjnt      1/1     Running   0          15m\nk8kafka-cp-zookeeper-0                        1/1     Running   0          15m\nk8kafka-cp-kafka-0                            1/1     Running   0          15m\nk8kafka-cp-schema-registry-588f8c65db-jdwbq   1/1     Running   0          15m\nk8kafka-cp-rest-6bbfd7b645-nwkf8              1/1     Running   0          15m\nstreams-explorer-54db878c67-s8wbz             1/1     Running   0          15m\n</code></pre> <p>Pay attention to the <code>STATUS</code> row. The pods should have a status of <code>Running</code>.</p>"}, {"location": "user/getting-started/setup/#install-kpops", "title": "Install KPOps", "text": "<p>KPOps comes as a PyPI package. You can install it with <code>pip</code>:</p> <pre><code>pip install kpops\n</code></pre>"}, {"location": "user/getting-started/teardown/", "title": "Teardown resources", "text": ""}, {"location": "user/getting-started/teardown/#kpops-teardown-commands", "title": "KPOps teardown commands", "text": "<ul> <li><code>destroy</code>: Removes Kubernetes resources.</li> <li><code>reset</code>: Runs <code>destroy</code>, resets the states of Kafka Streams apps and resets offsets to zero.</li> <li><code>clean</code>: Runs <code>reset</code> and removes all Kafka resources.</li> </ul>"}, {"location": "user/getting-started/teardown/#kpops-deployed-pipeline", "title": "KPOps-deployed pipeline", "text": "<p>The <code>kpops</code> CLI can be used to destroy a pipeline that was previously deployed with KPOps. In case that doesn't work, the pipeline can always be taken down manually with <code>helm</code> (see section Infrastructure).</p> <ol> <li> <p>Export environment variables.</p> <pre><code>export DOCKER_REGISTRY=bakdata &amp;&amp; \\\nexport NAMESPACE=kpops\n</code></pre> </li> <li> <p>Navigate to the <code>examples</code> folder.     Replace the <code>&lt;name-of-the-example-directory&gt;</code> with the example you want to tear down.     For example the <code>atm-fraud-detection</code>.</p> </li> <li> <p>Remove the pipeline</p> <pre><code># Uncomment 1 line to either destroy, reset or clean.\n\n# kpops destroy &lt;name-of-the-example-directory&gt;/pipeline.yaml \\\n# kpops reset &lt;name-of-the-example-directory&gt;/pipeline.yaml \\\n# kpops clean &lt;name-of-the-example-directory&gt;/pipeline.yaml \\\n--config &lt;name-of-the-example-directory&gt;/config.yaml \\\n--execute\n</code></pre> </li> </ol>"}, {"location": "user/getting-started/teardown/#infrastructure", "title": "Infrastructure", "text": "<p>Delete namespace:</p> <pre><code>kubectl delete namespace kpops\n</code></pre> <p>Note</p> <p>In case <code>kpops destroy</code> is not working one can uninstall the pipeline services one by one. This is equivalent to running <code>kpops destroy</code>. In case a clean uninstall (like the one <code>kpops clean</code> does)  is needed, one needs to also delete the topics and schemas created by deployment of the pipeline.</p>"}, {"location": "user/getting-started/teardown/#local-cluster", "title": "Local cluster", "text": "<p>Delete local cluster:</p> <pre><code>k3d cluster delete kpops\n</code></pre>"}, {"location": "user/getting-started/teardown/#local-image-registry", "title": "Local image registry", "text": "<p>Delete local registry:</p> <pre><code>k3d registry delete k3d-kpops-registry.localhost\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/", "title": "Migrate from V1 to V2", "text": ""}, {"location": "user/migration-guide/v1-v2/#derive-component-type-automatically-from-class-name", "title": "Derive component type automatically from class name", "text": "<p>KPOps automatically infers the component <code>type</code> from the class name. Therefore, the <code>type</code> and <code>schema_type</code> attributes can be removed from your custom components. By convention the <code>type</code> would be the lower, and kebab cased name of the class.</p> <pre><code>class MyCoolStreamApp(StreamsApp):\n-    type = \"my-cool-stream-app\"\n+    ...\n</code></pre> <p>Because of this new convention <code>producer</code> has been renamed to <code>producer-app</code>. This must be addressed in your <code>pipeline.yaml</code> and <code>defaults.yaml</code>.</p> <pre><code>- producer:\n+ producer-app:\n    app:\n        streams:\n        outputTopic: output_topic\n        extraOutputTopics:\n            output_role1: output_topic1\n            output_role2: output_topic2\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#refactor-inputoutput-types", "title": "Refactor input/output types", "text": ""}, {"location": "user/migration-guide/v1-v2/#to-section", "title": "To section", "text": "<p>In the <code>to</code> section these have changed:</p> <ul> <li>The default type is <code>output</code></li> <li>If <code>role</code> is set, type is inferred to be <code>extra</code></li> <li>The type <code>error</code> needs to be defined explicitly</li> </ul> <pre><code>  to:\n    topics:\n      ${pipeline_name}-topic-1:\n-       type: extra\n        role: \"role-1\"\n        ...\n      ${pipeline_name}-topic-2:\n-       type: output\n        ...\n      ${pipeline_name}-topic-3:\n         type: error\n         ...\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#from-section", "title": "From section", "text": "<p>In the <code>from</code> section these have changed:</p> <ul> <li>The default type is <code>input</code></li> <li><code>input-pattern</code> type is replaced by <code>pattern</code></li> <li>If <code>role</code> is set, type is inferred to be <code>extra</code></li> <li>If <code>role</code> is set, type is explicitly set to <code>pattern</code>, this would be inferred type <code>extra-pattern</code></li> </ul> <pre><code>  from:\n    topics:\n      ${pipeline_name}-input-topic:\n-       type: input\n        ...\n      ${pipeline_name}-extra-topic:\n-       type: extra\n        role: topic-role\n        ...\n      ${pipeline_name}-input-pattern-topic:\n-       type: input-pattern\n+       type: pattern\n        ...\n      ${pipeline_name}-extra-pattern-topic:\n-       type: extra-pattern\n+       type: pattern\n        role: some-role\n        ...\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#remove-camel-case-conversion-of-internal-models", "title": "Remove camel case conversion of internal models", "text": "<p>All the internal KPOps models are now snake_case, and only Helm/Kubernetes values require camel casing. You can find an example of a <code>pipeline.yaml</code> in the following. Notice that the <code>app</code> section here remains untouched.</p> <pre><code>...\ntype: streams-app\n  name: streams-app\n  namespace: namespace\n  app:\n    streams:\n      brokers: ${brokers}\n      schemaRegistryUrl: ${schema_registry_url}\n     autoscaling:\n      consumerGroup: consumer-group\n      lagThreshold: 0\n      enabled: false\n      pollingInterval: 30\n\n  to:\n    topics:\n      ${pipeline_name}-output-topic:\n        type: error\n-       keySchema: key-schema\n+       key_schema: key-schema\n-       valueSchema: value-schema\n+       value_schema: value-schema\n        partitions_count: 1\n        replication_factor: 1\n        configs:\n          cleanup.policy: compact\n    models:\n      model: model\n  prefix: ${pipeline_name}-\n- repoConfig:\n+ repo_config:\n-   repositoryName: bakdata-streams-bootstrap\n+   repository_name: bakdata-streams-bootstrap\n    url: https://bakdata.github.io/streams-bootstrap/\n-   repoAuthFlags:\n+   repo_auth_flags:\n      username: user\n      password: pass\n      ca_file: /home/user/path/to/ca-file\n      insecure_skip_tls_verify: false\n  version: \"1.0.4\"\n...\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#refactor-handling-of-helm-flags", "title": "Refactor handling of Helm flags", "text": "<p>If you are using the <code>KubernetesApp</code> class to define your own Kubernetes resource to deploy, the abstract function <code>get_helm_chart</code> that returns the chart for deploying the app using Helm is now a Python property and renamed to <code>helm_chart</code>.</p> <pre><code>class MyCoolApp(KubernetesApp):\n\n+   @property\n    @override\n-   def get_helm_chart(self) -&gt; str:\n+   def helm_chart(self) -&gt; str:\n        return \"./charts/charts-folder\"\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#plural-broker-field-in-pipeline-config", "title": "Plural broker field in pipeline config", "text": "<p>Since you can pass a comma separated string of broker address, the broker field in KPOps is now plural. The pluralization has affected multiple areas:</p>"}, {"location": "user/migration-guide/v1-v2/#configyaml", "title": "config.yaml", "text": "<pre><code>  environment: development\n- broker: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n+ brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n  kafka_connect_host: \"http://localhost:8083\"\n  kafka_rest_host: \"http://localhost:8082\"\n  schema_registry_url: \"http://localhost:8081\"\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#pipelineyaml-and-defaultyaml", "title": "pipeline.yaml and default.yaml", "text": "<p>The variable is now called <code>brokers</code>.</p> <pre><code>...\n  app:\n    streams:\n-     brokers: ${broker}\n+     brokers: ${brokers}\n      schemaRegistryUrl: ${schema_registry_url}\n    nameOverride: override-with-this-name\n    imageTag: \"1.0.0\"\n...\n</code></pre>"}, {"location": "user/migration-guide/v1-v2/#environment-variable", "title": "Environment variable", "text": "<p>Previously, if you set the environment variable <code>KPOPS_KAFKA_BROKER</code>, you need to replace that now with <code>KPOPS_KAFKA_BROKERS</code>.</p>"}, {"location": "user/migration-guide/v2-v3/", "title": "Migrate from V2 to V3", "text": "<p>Jump to the summary</p>"}, {"location": "user/migration-guide/v2-v3/#use-hash-and-trim-long-helm-release-names-instead-of-only-trimming", "title": "Use hash and trim long Helm release names instead of only trimming", "text": "<p>KPOps handles long (more than 53 characters) Helm releases names differently. Helm will not find your (long) old release names anymore. Therefore, it is recommended that you should once destroy your pipeline with KPOps v2 to remove old Helm release names. After a clean destroy, re-deploy your pipeline with the KPOps v3.</p> <p>For example if you have a component with the Helm release name <code>example-component-name-too-long-fake-fakefakefakefakefake</code>. The new release name will shorten the original name to 53 characters and then replace the last 6 characters of the trimmed name with the first 5 characters of the result of SHA-1(helm_release_name).</p> <pre><code>example-component-name-too-long-fake-fakefakef-0a7fc ----&gt; 53 chars\n---------------------------------------------- -----\n  ^Shortened helm_release_name                 ^first 5 characters of SHA1(helm_release_name)\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#create-helmapp-component", "title": "Create HelmApp component", "text": "<p>All Helm-specific parts of the built-in <code>KubernetesApp</code> have been extracted to a new child component that is more appropriately named <code>HelmApp</code>. It has to be renamed in your existing pipeline defintions and custom components module.</p>"}, {"location": "user/migration-guide/v2-v3/#pipelineyaml", "title": "pipeline.yaml", "text": "<pre><code>-- type: kubernetes-app\n+- type: helm-app\n   name: foo\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#custom_modulepy", "title": "custom_module.py", "text": "<pre><code>- from kpops.components import KubernetesApp\n+ from kpops.components import HelmApp\n\n\n- class CustomHelmApp(KubernetesApp):\n+ class CustomHelmApp(HelmApp):\n      ...\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#create-streamsbootstrap-component-refactor-cleanup-jobs-as-individual-helmapp", "title": "Create StreamsBootstrap component &amp; refactor cleanup jobs as individual HelmApp", "text": "<p>Previously the default <code>KafkaApp</code> component configured the streams-bootstrap Helm Charts. Now, this component is no longer tied to Helm (or Kubernetes). Instead, there is a new <code>StreamsBootstrap</code> component that configures the Helm Chart repository for the components that use it, e.g. <code>StreamsApp</code> and <code>ProducerApp</code>. If you are using non-default values for the Helm Chart repository or version, it has to be updated as shown below.</p>"}, {"location": "user/migration-guide/v2-v3/#defaultsyaml", "title": "defaults.yaml", "text": "<pre><code>  kafka-app:\n    app:\n      streams: ...\n\n+ streams-bootstrap:\n    repo_config: ...\n    version: ...\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#refactor-kafka-connector-resetter-as-individual-helmapp", "title": "Refactor Kafka Connector resetter as individual HelmApp", "text": "<p>Internally, the Kafka Connector resetter is now its own standard <code>HelmApp</code>, removing a lot of the shared code. It is configured using the <code>resetter_namespace</code> (formerly <code>namespace</code>) and <code>resetter_values</code> attributes.</p>"}, {"location": "user/migration-guide/v2-v3/#defaultsyaml_1", "title": "defaults.yaml", "text": "<pre><code>  kafka-connector:\n-   namespace: my-namespace\n+   resetter_namespace: my-namespace\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#make-kafka-rest-proxy-kafka-connect-hosts-default-and-improve-schema-registry-config", "title": "Make Kafka REST Proxy &amp; Kafka Connect hosts default and improve Schema Registry config", "text": "<p>The breaking changes target the <code>config.yaml</code> file:</p> <ul> <li> <p>The <code>schema_registry_url</code> is replaced with <code>schema_registry.url</code> (default <code>http://localhost:8081</code>) and <code>schema_registry.enabled</code> (default <code>false</code>).</p> </li> <li> <p><code>kafka_rest_host</code> is renamed to <code>kafka_rest.url</code> (default <code>http://localhost:8082</code>).</p> </li> <li> <p><code>kafka_connect_host</code> is replaced with <code>kafka_connect.url</code> (default <code>http://localhost:8083</code>).</p> </li> <li> <p><code>brokers</code> is renamed to <code>kafka_brokers</code>.</p> </li> </ul> <p>The environment variable names of these config fields changed respectively. Please refer to the environment variables documentation page to see the newest changes.</p>"}, {"location": "user/migration-guide/v2-v3/#configyaml", "title": "config.yaml", "text": "<pre><code>  environment: development\n- brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n- kafka_rest_host: \"http://my-custom-rest.url:8082\"\n- kafka_connect_host: \"http://my-custom-connect.url:8083\"\n- schema_registry_url: \"http://my-custom-sr.url:8081\"\n+ kafka_brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n+ kafka_rest:\n+   url: \"http://my-custom-rest.url:8082\"\n+ kafka_connect:\n+   url: \"http://my-custom-connect.url:8083\"\n+ schema_registry:\n+   enabled: true\n+   url: \"http://my-custom-sr.url:8081\"\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#pipelineyaml-and-defaultyaml", "title": "pipeline.yaml and default.yaml", "text": "<p>The variable is now called <code>kafka_brokers</code>.</p> <pre><code>...\n  app:\n    streams:\n-     brokers: ${brokers}\n+     brokers: ${kafka_brokers}\n      schemaRegistryUrl: ${schema_registry_url}\n    nameOverride: override-with-this-name\n    imageTag: \"1.0.0\"\n...\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#define-custom-components-module-pipeline-base-dir-globally", "title": "Define custom components module &amp; pipeline base dir globally", "text": "<p>Warning</p> <p>The previous CLI parameters have been removed.</p> <p>The options for a custom <code>components_module</code> and <code>pipeline_base_dir</code> are now global settings, defined in <code>config.yaml</code>.</p>"}, {"location": "user/migration-guide/v2-v3/#configyaml_1", "title": "config.yaml", "text": "<pre><code>  kafka_brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n  environment: development\n+ components_module: components\n+ pipeline_base_dir: pipelines\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#move-github-action-to-repsitory-root", "title": "Move GitHub action to repsitory root", "text": "<p>The location of the GitHub action has changed, and it's now available directly as <code>bakdata/kpops</code>.</p> <p>You'll need to change it in your GitHub CI workflows.</p> <pre><code>steps:\n  - name: kpops deploy\n-   uses: bakdata/kpops/actions/kpops-runner@main\n+   uses: bakdata/kpops@main\n    with:\n      command: deploy --execute\n      # ...\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#allow-overriding-config-files", "title": "Allow overriding config files", "text": "<p>Specifying the environment is no longer mandatory. If not defined, only the global files will be used.</p> <p><code>environment</code> is no longer specified in <code>config.yaml</code>. Instead, it can be either set via the CLI flag <code>--environment</code> or with the environment variable <code>KPOPS_ENVIRONMENT</code>.</p> <p>The <code>--config</code> flag in the CLI now points to the directory that contains <code>config*.yaml</code> files. The files to be used are resolved based on the provided (or not) <code>environment</code>.</p>"}, {"location": "user/migration-guide/v2-v3/#configyaml_2", "title": "config.yaml", "text": "<pre><code>- environment: development\n  kafka_brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n  schema_registry:\n    enabled: true\n    url: \"http://my-custom-sr.url:8081\"\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#change-substitution-variables-separator-to", "title": "Change substitution variables separator to <code>.</code>", "text": "<p>The delimiter in the substitution variables is changed to <code>.</code>.</p>"}, {"location": "user/migration-guide/v2-v3/#pipelineyaml-and-defaultyaml_1", "title": "pipeline.yaml and default.yaml", "text": "<pre><code>steps:\n  - type: scheduled-producer\n    app:\n      labels:\n-       app_type: \"${component_type}\"\n-       app_name: \"${component_name}\"\n-       app_schedule: \"${component_app_schedule}\"\n+       app_type: \"${component.type}\"\n+       app_name: \"${component.name}\"\n+       app_schedule: \"${component.app.schedule}\"\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#configyaml_3", "title": "config.yaml", "text": "<pre><code>topic_name_config:\n- default_error_topic_name: \"${pipeline_name}-${component_name}-dead-letter-topic\"\n- default_output_topic_name: \"${pipeline_name}-${component_name}-topic\"\n+ default_error_topic_name: \"${pipeline_name}-${component.name}-dead-letter-topic\"\n+ default_output_topic_name: \"${pipeline_name}-${component.name}-topic\"\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#refactor-generate-template-for-python-api-usage", "title": "Refactor generate template for Python API usage", "text": "<p>The <code>template</code> method of every pipeline component has been renamed to <code>manifest</code> as it is no longer strictly tied to Helm template. Instead, it can be used to render the final resources of a component, such as Kubernetes manifests.</p> <p>There is also a new <code>kpops manifest</code> command replacing the existing <code>kpops generate --template</code> flag.</p> <p>If you're using this functionality in your custom components, it needs to be updated.</p> <pre><code>  from kpops.components.base_components.models.resource import Resource\n\n  @override\n- def template(self) -&gt; None:\n+ def manifest(self) -&gt; Resource:\n  \"\"\"Render final component resources, e.g. Kubernetes manifests.\"\"\"\n      return []  # list of manifests\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#namespace-substitution-vars", "title": "Namespace substitution vars", "text": "<p>The global configuration variables are now namespaced under the config key, such as <code>${config.kafka_brokers}</code>, <code>${config.schema_registry.url}</code>. Same with pipeline variables, e.g. <code>${pipeline_name} \u2192 ${pipeline.name}</code>. This would make it more uniform with the existing <code>${component.&lt;key&gt;}</code> variables.</p>"}, {"location": "user/migration-guide/v2-v3/#pipelineyaml_1", "title": "pipeline.yaml", "text": "<pre><code>  name: kafka-app\n- prefix: ${pipeline_name}-\n+ prefix: ${pipeline.name}-\n  app:\n    streams:\n-     brokers: ${kafka_brokers}\n-     schemaRegistryUrl: ${schema_registry.url}\n+     brokers: ${config.kafka_brokers}\n+     schemaRegistryUrl: ${config.schema_registry.url}\n</code></pre>"}, {"location": "user/migration-guide/v2-v3/#summary", "title": "Summary", "text": "<p>Warning</p> <p>Helm will not find your (long) old release names anymore.</p> defaults.yaml <pre><code>  kafka-app:\n    app:\n      streams: ...\n\n+ streams-bootstrap:\n    repo_config: ...\n    version: ...\n</code></pre> pipeline.yaml <pre><code>- - type: kubernetes-app\n+ - type: helm-app\n  ...\n  - type: kafka-app\n    app:\n-     brokers: ${brokers}\n+     brokers: ${config.kafka_brokers}\n      labels:\n-       app_schedule: \"${component_app_schedule}\"\n+       app_schedule: \"${component.app.schedule}\"\n  ...\n  - type: kafka-connector\n-   namespace: my-namespace\n+   resetter_namespace: my-namespace\n  ...\n</code></pre> config.yaml <pre><code>- environment: development\n\n+ components_module: components\n\n+ pipeline_base_dir: pipelines\n\n- brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n+ kafka_brokers: \"http://k8kafka-cp-kafka-headless.kpops.svc.cluster.local:9092\"\n\n- kafka_rest_host: \"http://my-custom-rest.url:8082\"\n+ kafka_rest:\n+   url: \"http://my-custom-rest.url:8082\"\n\n- kafka_connect_host: \"http://my-custom-connect.url:8083\"\n+ kafka_connect:\n+   url: \"http://my-custom-connect.url:8083\"\n\n- schema_registry_url: \"http://my-custom-sr.url:8081\"\n+ schema_registry:\n+   enabled: true\n+   url: \"http://my-custom-sr.url:8081\"\n\n  topic_name_config:\n- default_error_topic_name: \"${pipeline_name}-${component_name}-dead-letter-topic\"\n+ default_error_topic_name: \"${pipeline.name}-${component.name}-dead-letter-topic\"\n  ...\n</code></pre> custom_module.py <pre><code>- from kpops.components import KubernetesApp\n+ from kpops.components import HelmApp\n+ from kpops.components.base_components.models.resource import Resource\n\n- class CustomHelmApp(KubernetesApp):\n+ class CustomHelmApp(HelmApp):\n\n  @override\n- def template(self) -&gt; None:\n+ def manifest(self) -&gt; Resource:\n  \"\"\"Render final component resources, e.g. Kubernetes manifests.\"\"\"\n      return []  # list of manifests\n  ...\n</code></pre> github_ci_workflow.yaml <pre><code>  steps:\n    - name: ...\n-     uses: bakdata/kpops/actions/kpops-runner@main\n+     uses: bakdata/kpops@main\n  ...\n</code></pre>"}, {"location": "user/migration-guide/v3-v4/", "title": "Migrate from V3 to V4", "text": ""}, {"location": "user/migration-guide/v3-v4/#distribute-defaults-across-multiple-files", "title": "Distribute defaults across multiple files", "text": "<p>Warning</p> <p>The <code>--defaults</code> flag is removed</p> <p>It is possible now to use multiple default values. The <code>defaults.yaml</code> (or <code>defaults_&lt;env&gt;.yaml</code>) files can be distributed across multiple files. These will be picked up by KPOps and get merged into a single <code>pipeline.yaml</code> file. KPOps starts from reading the default files from where the pipeline path is defined and picks up every defaults file on its way to where the <code>pipeline_base_dir</code> is defined.</p> <p>For example, imagine the following folder structure:</p> <pre><code>\u2514\u2500 pipelines\n   \u2514\u2500\u2500 distributed-defaults\n       \u251c\u2500\u2500 defaults.yaml\n       \u251c\u2500\u2500 defaults_dev.yaml\n       \u2514\u2500\u2500 pipeline-deep\n           \u251c\u2500\u2500 defaults.yaml\n           \u2514\u2500\u2500 pipeline.yaml\n</code></pre> <p>The <code>pipeline_base_dir</code> is configured to <code>pipelines</code>. Now if we generate this pipeline with the following command:</p> <pre><code>kpops generate \\\n      --environment dev\n      ./pipelines/distributed-defaults/pipeline-deep/pipeline.yaml\n</code></pre> <p>The defaults would be picked in the following order (high to low priority):</p> <ul> <li><code>./pipelines/distributed-defaults/pipeline-deep/defaults.yaml</code></li> <li><code>./pipelines/distributed-defaults/defaults_dev.yaml</code></li> <li><code>./pipelines/distributed-defaults/defaults.yaml</code></li> </ul> <p>The deepest <code>defaults.yaml</code> file in the folder hierarchy (i.e., the closest one to the <code>pipeline.yaml</code>) overwrites the higher-level defaults' values.</p>"}, {"location": "user/migration-guide/v4-v5/", "title": "Migrate from V4 to V5", "text": ""}, {"location": "user/migration-guide/v4-v5/#allow-custom-timeout-for-external-services", "title": "Allow custom timeout for external services", "text": "<p>The global <code>timeout</code> setting has been removed. Instead, an individual timeout can be set for each external service. The default is 30 seconds.</p>"}, {"location": "user/migration-guide/v4-v5/#configyaml", "title": "config.yaml", "text": "<pre><code>- timeout: 300\n\n  kafka_rest:\n    url: \"http://my-custom-rest.url:8082\"\n+   timeout: 30\n  kafka_connect:\n    url: \"http://my-custom-connect.url:8083\"\n+   timeout: 30\n  schema_registry:\n    enabled: true\n    url: \"http://my-custom-sr.url:8081\"\n+   timeout: 30\n</code></pre>"}, {"location": "user/migration-guide/v5-v6/", "title": "Migrate from V5 to V6", "text": ""}, {"location": "user/migration-guide/v5-v6/#deploy-multiple-pipelines", "title": "Deploy multiple pipelines", "text": "<p>KPOps can now deploy multiple pipelines in a single command. It is possible to pass one or many pipeline.yaml files or pass a directory with many pipeline.yaml files within it.</p> <p>The environment variable <code>KPOPS_PIPELINE_PATH</code> is changed to <code>KPOPS_PIPELINE_PATHS</code>.</p> <p>Read more:</p> <ul> <li>CLI Usage</li> <li>Environment variables</li> </ul>"}, {"location": "user/migration-guide/v5-v6/#separate-kpops-api-from-the-cli", "title": "Separate KPOps API from the CLI", "text": "<p>KPops Python API is now stable and separated from the CLI! \ud83c\udf89</p>"}, {"location": "user/migration-guide/v6-v7/", "title": "Migrate from V6 to V7", "text": ""}, {"location": "user/migration-guide/v6-v7/#automatic-loading-of-namespaced-custom-components", "title": "Automatic loading of namespaced custom components", "text": "<p>KPOps is now distributed as a Python namespace package (as defined by PEP 420). This allows us to standardize the namespace <code>kpops.components</code> for both builtin and custom pipeline components.</p> <p>As a result of the restructure, some imports need to be adjusted:</p> <p>KPOps Python API</p> <pre><code>- import kpops\n+ import kpops.api as kpops\n</code></pre> <p>builtin KPOps components</p> <pre><code>- from kpops.components import (\n-     HelmApp,\n-     KafkaApp,\n-     KafkaConnector,\n-     KafkaSinkConnector,\n-     KafkaSourceConnector,\n-     KubernetesApp,\n-     StreamsBootstrap,\n-     ProducerApp,\n-     StreamsApp,\n-     PipelineComponent,\n-     StreamsApp,\n-     ProducerApp,\n- )\n+ from kpops.components.base_components import (\n+     HelmApp,\n+     KafkaApp,\n+     KafkaConnector,\n+     KafkaSinkConnector,\n+     KafkaSourceConnector,\n+     KubernetesApp,\n+     PipelineComponent,\n+ )\n+ from kpops.components.streams_bootstrap import (\n+     StreamsBootstrap,\n+     StreamsApp,\n+     ProducerApp,\n+ )\n</code></pre>"}, {"location": "user/migration-guide/v6-v7/#your-custom-kpops-components", "title": "your custom KPOps components", "text": ""}, {"location": "user/migration-guide/v6-v7/#configyaml", "title": "config.yaml", "text": "<pre><code>- components_module: components\n</code></pre>"}, {"location": "user/migration-guide/v6-v7/#python-module", "title": "Python module", "text": "<pre><code>- components/__init__.py\n+ kpops/components/custom/__init__.py\n</code></pre>"}, {"location": "user/migration-guide/v6-v7/#rename-app-field", "title": "Rename app field", "text": "<p>The <code>app</code> attribute of the builtin KPOps components has been renamed to better differentiate them. Both your <code>pipeline.yaml</code> and <code>defaults.yaml</code> files have to be updated, e.g.:</p>"}, {"location": "user/migration-guide/v6-v7/#defaultsyaml", "title": "defaults.yaml", "text": "<pre><code>  kubernetes-app:\n-   app: {}\n+   values: {}\n\n  helm-app:\n-   app: {}\n+   values: {}\n\n  kafka-app:\n-   app: {}\n+   values: {}\n\n  streams-app:\n-   app: {}\n+   values: {}\n\n  producer-app:\n-   app: {}\n+   values: {}\n\n  kafka-connector:\n-   app: {}\n+   config: {}\n\n  kafka-source-connector:\n-   app: {}\n+   config: {}\n\n  kafka-sink-connector:\n-   app: {}\n+   config: {}\n</code></pre>"}, {"location": "user/migration-guide/v6-v7/#call-destroy-from-inside-of-reset-or-clean", "title": "Call destroy from inside of reset or clean", "text": "<p>Before v7, the KPOps CLI executed <code>destroy</code> before running <code>reset/clean</code> to ensure the component was destroyed.</p> <p>This logic has changed. The <code>destroy</code> method is now called within the <code>PipelineComponent</code>'s <code>reset</code>/<code>clean</code>.</p> <p>During migrating to v7, you should check your custom components and see if they override the <code>reset</code>/<code>clean</code> methods. If so, you need to call the supermethod <code>reset</code>/<code>clean</code> to trigger the <code>destroy</code> inside the parent class. Alternatively, if you are implementing the <code>PipelineComponent</code> class, you need to call the <code>destroy</code> method at the beginning of the method.</p>"}, {"location": "user/migration-guide/v6-v7/#componentspy", "title": "components.py", "text": "<p>For example, when creating a custom <code>StreamsApp</code> or <code>ProducerApp</code> (or any other custom component), you must call the supermethod <code>reset</code>/<code>clean</code> to execute the <code>destroy</code> in the parent class. Otherwise, the logic of destroy will not be executed!</p> <pre><code>class MyStreamsApp(StreamsApp):\n\n    @override\n    async def clean(self, dry_run: bool) -&gt; None:\n+       await super().clean(dry_run)\n        # Some custom clean logic\n        # ...\n        ```diff\n        \n \nclass MyCustomComponent(PipelineComponent):\n    \n    @override\n    async def destroy(self, dry_run: bool) -&gt; None:\n        # Some custom destroy logic\n        # ...\n\n    @override\n    async def clean(self, dry_run: bool) -&gt; None:\n+       await super().clean(dry_run)\n        # Some custom clean logic\n        # ...\n</code></pre>"}, {"location": "user/migration-guide/v7-v8/", "title": "Migrate from V7 to V8", "text": ""}, {"location": "user/migration-guide/v7-v8/#add-support-for-streams-bootstrap-v3", "title": "Add support for streams-bootstrap v3", "text": "<p>From now on KPOps supports streams-bootstrap v3 as its default component. The previous streams-bootstrap version (below 3.x.x) is marked as deprecated and will be removed in a future version of KPOps. If you don't want to migrate your producer or streams app to v3, you should suffix your components with <code>-v2</code>. Here is an example of a <code>pipeline.yaml</code> file.</p>"}, {"location": "user/migration-guide/v7-v8/#pipelineyaml", "title": "pipeline.yaml", "text": "<pre><code>- - type: producer-app\n+ - type: producer-app-v2\n\n- - type: streams-app\n+ - type: streams-app-v2\n\n# rest of your pipeline\n</code></pre>"}, {"location": "user/migration-guide/v7-v8/#my-componentspy", "title": "my-components.py", "text": "<pre><code>- class MyStreamsApp(StreamsApp):\n+ class MyStreamsApp(StreamsAppV2):\n    ...\n</code></pre> <p>Info</p> <p>The <code>streams-boostrap</code>, <code>streams-app</code>, and <code>producer-app</code> now all take the Helm values of streams-bootstrap version 3. You can find these values under the Helm charts documentation or by referring to the Base model definitions.</p>"}, {"location": "user/migration-guide/v7-v8/#rename-role-to-label", "title": "Rename role to label", "text": "<p>The keyword <code>role</code> is renamed to <code>label</code>. You need to replace it in your <code>pipeline.yaml</code>, <code>defaults.yaml</code>, and the Python components definition files. Here is a simple example of the <code>defaults.yaml</code>.</p>"}, {"location": "user/migration-guide/v7-v8/#defaultsyaml", "title": "defaults.yaml", "text": "<pre><code>streams-app-v2:\n  values:\n    streams:\n      brokers: localhost:9092\n  from:\n    topics:\n      my-labeled-input-topic:\n-       role: my-input-topic-label\n+       label: my-input-topic-label\n      my-labeled-input-pattern:\n        type: pattern\n-       role: my-input-topic-labeled-pattern\n+       label: my-input-topic-labeled-pattern\n\n  to:\n    topics:\n      my-labeled-topic-output:\n-       role: my-output-topic-label\n+       label: my-output-topic-label\n\n# rest of your pipeline\n</code></pre>"}, {"location": "user/migration-guide/v7-v8/#make-kafkaapp-responsible-for-deployingcleaning-streams-bootstrap-components", "title": "Make KafkaApp responsible for deploying/cleaning streams bootstrap components", "text": "<p>The <code>KafkaApp</code> component now only contains the deployment logic of the stream-bootstrap applications (streams-app, producer-app). It should not be used in the <code>defaults.yaml</code> nor the <code>pipeline.yaml</code>. If you are using it, it should be replaced by <code>streams-bootstrap</code>.</p>"}, {"location": "user/migration-guide/v7-v8/#defaultsyaml_1", "title": "defaults.yaml", "text": "<pre><code>- kafka-app:\n+ streams-bootstrap-v2:\n    values:\n      streams:\n        brokers: 127.0.0.1:9092\n        schemaRegistryUrl: 127.0.0.1:8081\n</code></pre>"}, {"location": "user/migration-guide/v8-v9/", "title": "Migrate from V8 to V9", "text": ""}, {"location": "user/migration-guide/v8-v9/#introduce-kpops-operation-and-manifest-resources-for-deployment", "title": "Introduce KPOps operation and manifest resources for deployment", "text": "<p>The <code>kpops manifest</code> command and <code>kpops.manifest()</code> API have been removed.</p> <p>Resource manifesting is now integrated into the operation commands (<code>deploy</code>, <code>destroy</code>, <code>reset</code>, <code>clean</code>) through the new operation mode feature.</p> <p>To manifest resources, you can:</p> <ul> <li>Pass <code>--operation-mode manifest</code> when executing <code>kpops</code> commands.</li> <li>Set the operation mode by defining the <code>KPOPS_OPERATION_MODE</code> environment variable.</li> </ul>"}, {"location": "user/migration-guide/v8-v9/#manifest-tosection-with-strimzi-kafkatopic", "title": "Manifest toSection with Strimzi KafkaTopic", "text": "<p>KPOps now supports generating valid Kubernetes KafkaTopic resources compatible with Strimzi. When using manifest or argo as the operation_mode, you must specify the Strimzi cluster label to ensure the topics are recognized by the deployed Strimzi Topic Operator.</p> <pre><code>operation_mode: manifest\n\n+ strimzi_topic:\n+  label:\n+     strimzi.io/cluster: my-cluster\n\n# rest of your config\n</code></pre> <p>Info</p> <p>Refer to the Strimzi documentation on deploying a standalone topic operator for more details.</p>"}, {"location": "user/migration-guide/v8-v9/#drop-support-for-python-310", "title": "Drop support for Python 3.10", "text": "<p>KPOps V9 no longer supports Python 3.10. Ensure your environment is running Python 3.11 to 3.12.</p>"}, {"location": "user/migration-guide/v8-v9/#action-required", "title": "Action Required:", "text": "<p>Upgrade your Python version to a supported version (3.11 or 3.12). Update your virtual environments and CI pipelines to reflect this change.</p>"}, {"location": "user/migration-guide/v9-v10/", "title": "Migrate from V9 to V10", "text": ""}, {"location": "user/migration-guide/v9-v10/#helm-diff-config", "title": "Helm diff config", "text": "<ul> <li>https://github.com/bakdata/kpops/pull/600</li> <li>https://github.com/bakdata/kpops/pull/601</li> </ul> <p>The Helm diff configuration has moved from <code>config.yaml</code> to the <code>HelmApp</code> component. To ignore specific keypaths we use string arrays now (formerly dot-notation). It is now possible to ignore YAML keys containing <code>.</code> or other special characters.</p>"}, {"location": "user/migration-guide/v9-v10/#example", "title": "Example", "text": ""}, {"location": "user/migration-guide/v9-v10/#defaultsyaml", "title": "defaults.yaml", "text": "<pre><code>helm-app:\n  diff_config:\n    ignore:\n      - [\"metadata\", \"labels\", \"helm.sh/chart\"]\n</code></pre>"}, {"location": "user/references/cli-commands/", "title": "CLI Usage", "text": "<p>Usage:</p> <pre><code>$ kpops [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <ul> <li><code>-V, --version</code>: Print KPOps version</li> <li><code>--install-completion</code>: Install completion for the current shell.</li> <li><code>--show-completion</code>: Show completion for the current shell, to copy it or customize the installation.</li> <li><code>--help</code>: Show this message and exit.</li> </ul> <p>Commands:</p> <ul> <li><code>init</code>: Initialize a new KPOps project.</li> <li><code>generate</code>: Generate enriched pipeline representation</li> <li><code>deploy</code>: Deploy pipeline steps</li> <li><code>destroy</code>: Destroy pipeline steps</li> <li><code>reset</code>: Reset pipeline steps</li> <li><code>clean</code>: Clean pipeline steps</li> <li><code>schema</code>: Generate JSON schema.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-init", "title": "<code>kpops init</code>", "text": "<p>Initialize a new KPOps project.</p> <p>Usage:</p> <pre><code>$ kpops init [OPTIONS] PATH\n</code></pre> <p>Arguments:</p> <ul> <li><code>PATH</code>: Path for a new KPOps project. It should lead to an empty (or non-existent) directory. The part of the path that doesn't exist will be created.  [required]</li> </ul> <p>Options:</p> <ul> <li><code>--config-include-optional / --no-config-include-optional</code>: Whether to include non-required settings in the generated 'config.yaml'  [default: no-config-include-optional]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-generate", "title": "<code>kpops generate</code>", "text": "<p>Enrich pipeline steps with defaults. The enriched pipeline is used for all KPOps operations (deploy, destroy, ...).</p> <p>Usage:</p> <pre><code>$ kpops generate [OPTIONS] PIPELINE_PATHS...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PIPELINE_PATHS...</code>: Paths to dir containing 'pipeline.yaml' or files named 'pipeline.yaml'.  [env var: KPOPS_PIPELINE_PATHS; required]</li> </ul> <p>Options:</p> <ul> <li><code>--dotenv FILE</code>: Path to dotenv file. Multiple files can be provided. The files will be loaded in order, with each file overriding the previous one.  [env var: KPOPS_DOTENV_PATH]</li> <li><code>--config DIRECTORY</code>: Path to the dir containing config.yaml files  [env var: KPOPS_CONFIG_PATH; default: .]</li> <li><code>--steps TEXT</code>: Comma separated list of steps to apply the command on  [env var: KPOPS_PIPELINE_STEPS]</li> <li><code>--filter-type [include|exclude]</code>: Whether the --steps option should include/exclude the steps  [default: include]</li> <li><code>--environment TEXT</code>: The environment you want to generate and deploy the pipeline to. Suffix your environment files with this value (e.g. defaults_development.yaml for environment=development).   [env var: KPOPS_ENVIRONMENT]</li> <li><code>--verbose / --no-verbose</code>: Enable verbose printing  [default: no-verbose]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-deploy", "title": "<code>kpops deploy</code>", "text": "<p>Deploy pipeline steps</p> <p>Usage:</p> <pre><code>$ kpops deploy [OPTIONS] PIPELINE_PATHS...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PIPELINE_PATHS...</code>: Paths to dir containing 'pipeline.yaml' or files named 'pipeline.yaml'.  [env var: KPOPS_PIPELINE_PATHS; required]</li> </ul> <p>Options:</p> <ul> <li><code>--dotenv FILE</code>: Path to dotenv file. Multiple files can be provided. The files will be loaded in order, with each file overriding the previous one.  [env var: KPOPS_DOTENV_PATH]</li> <li><code>--config DIRECTORY</code>: Path to the dir containing config.yaml files  [env var: KPOPS_CONFIG_PATH; default: .]</li> <li><code>--steps TEXT</code>: Comma separated list of steps to apply the command on  [env var: KPOPS_PIPELINE_STEPS]</li> <li><code>--filter-type [include|exclude]</code>: Whether the --steps option should include/exclude the steps  [default: include]</li> <li><code>--environment TEXT</code>: The environment you want to generate and deploy the pipeline to. Suffix your environment files with this value (e.g. defaults_development.yaml for environment=development).   [env var: KPOPS_ENVIRONMENT]</li> <li><code>--dry-run / --execute</code>: Whether to dry run the command or execute it  [default: dry-run]</li> <li><code>--verbose / --no-verbose</code>: Enable verbose printing  [default: no-verbose]</li> <li><code>--parallel / --no-parallel</code>: Enable or disable parallel execution of pipeline steps. If enabled, multiple steps can be processed concurrently. If disabled, steps will be processed sequentially.  [default: no-parallel]</li> <li><code>--operation-mode [argo|manifest|managed]</code>: How KPOps should operate.  [env var: KPOPS_OPERATION_MODE; default: managed]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-destroy", "title": "<code>kpops destroy</code>", "text": "<p>Destroy pipeline steps</p> <p>Usage:</p> <pre><code>$ kpops destroy [OPTIONS] PIPELINE_PATHS...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PIPELINE_PATHS...</code>: Paths to dir containing 'pipeline.yaml' or files named 'pipeline.yaml'.  [env var: KPOPS_PIPELINE_PATHS; required]</li> </ul> <p>Options:</p> <ul> <li><code>--dotenv FILE</code>: Path to dotenv file. Multiple files can be provided. The files will be loaded in order, with each file overriding the previous one.  [env var: KPOPS_DOTENV_PATH]</li> <li><code>--config DIRECTORY</code>: Path to the dir containing config.yaml files  [env var: KPOPS_CONFIG_PATH; default: .]</li> <li><code>--steps TEXT</code>: Comma separated list of steps to apply the command on  [env var: KPOPS_PIPELINE_STEPS]</li> <li><code>--filter-type [include|exclude]</code>: Whether the --steps option should include/exclude the steps  [default: include]</li> <li><code>--environment TEXT</code>: The environment you want to generate and deploy the pipeline to. Suffix your environment files with this value (e.g. defaults_development.yaml for environment=development).   [env var: KPOPS_ENVIRONMENT]</li> <li><code>--dry-run / --execute</code>: Whether to dry run the command or execute it  [default: dry-run]</li> <li><code>--verbose / --no-verbose</code>: Enable verbose printing  [default: no-verbose]</li> <li><code>--parallel / --no-parallel</code>: Enable or disable parallel execution of pipeline steps. If enabled, multiple steps can be processed concurrently. If disabled, steps will be processed sequentially.  [default: no-parallel]</li> <li><code>--operation-mode [argo|manifest|managed]</code>: How KPOps should operate.  [env var: KPOPS_OPERATION_MODE; default: managed]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-reset", "title": "<code>kpops reset</code>", "text": "<p>Reset pipeline steps</p> <p>Usage:</p> <pre><code>$ kpops reset [OPTIONS] PIPELINE_PATHS...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PIPELINE_PATHS...</code>: Paths to dir containing 'pipeline.yaml' or files named 'pipeline.yaml'.  [env var: KPOPS_PIPELINE_PATHS; required]</li> </ul> <p>Options:</p> <ul> <li><code>--dotenv FILE</code>: Path to dotenv file. Multiple files can be provided. The files will be loaded in order, with each file overriding the previous one.  [env var: KPOPS_DOTENV_PATH]</li> <li><code>--config DIRECTORY</code>: Path to the dir containing config.yaml files  [env var: KPOPS_CONFIG_PATH; default: .]</li> <li><code>--steps TEXT</code>: Comma separated list of steps to apply the command on  [env var: KPOPS_PIPELINE_STEPS]</li> <li><code>--filter-type [include|exclude]</code>: Whether the --steps option should include/exclude the steps  [default: include]</li> <li><code>--environment TEXT</code>: The environment you want to generate and deploy the pipeline to. Suffix your environment files with this value (e.g. defaults_development.yaml for environment=development).   [env var: KPOPS_ENVIRONMENT]</li> <li><code>--dry-run / --execute</code>: Whether to dry run the command or execute it  [default: dry-run]</li> <li><code>--verbose / --no-verbose</code>: Enable verbose printing  [default: no-verbose]</li> <li><code>--parallel / --no-parallel</code>: Enable or disable parallel execution of pipeline steps. If enabled, multiple steps can be processed concurrently. If disabled, steps will be processed sequentially.  [default: no-parallel]</li> <li><code>--operation-mode [argo|manifest|managed]</code>: How KPOps should operate.  [env var: KPOPS_OPERATION_MODE; default: managed]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-clean", "title": "<code>kpops clean</code>", "text": "<p>Clean pipeline steps</p> <p>Usage:</p> <pre><code>$ kpops clean [OPTIONS] PIPELINE_PATHS...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PIPELINE_PATHS...</code>: Paths to dir containing 'pipeline.yaml' or files named 'pipeline.yaml'.  [env var: KPOPS_PIPELINE_PATHS; required]</li> </ul> <p>Options:</p> <ul> <li><code>--dotenv FILE</code>: Path to dotenv file. Multiple files can be provided. The files will be loaded in order, with each file overriding the previous one.  [env var: KPOPS_DOTENV_PATH]</li> <li><code>--config DIRECTORY</code>: Path to the dir containing config.yaml files  [env var: KPOPS_CONFIG_PATH; default: .]</li> <li><code>--steps TEXT</code>: Comma separated list of steps to apply the command on  [env var: KPOPS_PIPELINE_STEPS]</li> <li><code>--filter-type [include|exclude]</code>: Whether the --steps option should include/exclude the steps  [default: include]</li> <li><code>--environment TEXT</code>: The environment you want to generate and deploy the pipeline to. Suffix your environment files with this value (e.g. defaults_development.yaml for environment=development).   [env var: KPOPS_ENVIRONMENT]</li> <li><code>--dry-run / --execute</code>: Whether to dry run the command or execute it  [default: dry-run]</li> <li><code>--verbose / --no-verbose</code>: Enable verbose printing  [default: no-verbose]</li> <li><code>--parallel / --no-parallel</code>: Enable or disable parallel execution of pipeline steps. If enabled, multiple steps can be processed concurrently. If disabled, steps will be processed sequentially.  [default: no-parallel]</li> <li><code>--operation-mode [argo|manifest|managed]</code>: How KPOps should operate.  [env var: KPOPS_OPERATION_MODE; default: managed]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/cli-commands/#kpops-schema", "title": "<code>kpops schema</code>", "text": "<p>Generate JSON schema.</p> <p>The schemas can be used to enable support for KPOps files in a text editor.</p> <p>Usage:</p> <pre><code>$ kpops schema [OPTIONS] SCOPE:{pipeline|defaults|config}\n</code></pre> <p>Arguments:</p> <ul> <li><code>SCOPE:{pipeline|defaults|config}</code>: Scope of the generated schema<pre><code>- pipeline: Schema of PipelineComponents for KPOps pipeline.yaml\n\n- defaults: Schema of PipelineComponents for KPOps defaults.yaml\n\n- config: Schema for KPOps config.yaml  [required]\n</code></pre> </li> </ul> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"}, {"location": "user/references/editor-integration/", "title": "Editor integration", "text": ""}, {"location": "user/references/editor-integration/#native", "title": "Native", "text": "<p>We are working towards first-class editor support by providing plugins that work out of the box.</p> <ul> <li>Neovim: kpops.nvim</li> <li>Visual Studio Code: planned</li> </ul>"}, {"location": "user/references/editor-integration/#manual-for-unsupported-editors-with-lsp", "title": "Manual (for unsupported editors with LSP)", "text": "<ol> <li>Install the yaml-language-server in your editor of choice. (requires LSP support)</li> <li>Configure the extension with the settings below.</li> </ol> <code>settings.json</code> <pre><code>{\n    \"yaml.schemas\": {\n        \"https://bakdata.github.io/kpops/4.0/schema/pipeline.json\": [\n            \"pipeline.yaml\",\n            \"pipeline_*.yaml\"\n        ],\n        \"https://bakdata.github.io/kpops/4.0/schema/defaults.json\": [\n            \"defaults.yaml\",\n            \"defaults_*.yaml\"\n        ],\n        \"https://bakdata.github.io/kpops/4.0/schema/config.json\": [\n            \"config.yaml\",\n            \"config_*.yaml\"\n        ]\n    }\n}\n</code></pre> <p>Advanced usage</p> <p>It is possible to generate schemas with the <code>kpops schema</code> command. Useful for including custom components or when using a pre-release version of KPOps.</p>"}, {"location": "user/references/editor-integration/#concepts", "title": "Concepts", "text": "<p>KPOps provides JSON schemas that enable autocompletion and validation for all YAML files that the user must work with.</p>"}, {"location": "user/references/editor-integration/#supported-files", "title": "Supported files", "text": "<ul> <li><code>pipeline.yaml</code></li> <li><code>defaults.yaml</code></li> <li><code>config.yaml</code></li> </ul>"}, {"location": "user/references/ci-integration/github-actions/", "title": "GitHub Actions integration", "text": "<p>We provided a GitHub composite action <code>bakdata/kpops</code> that installs and executes KPOps commands with the given parameters.</p>"}, {"location": "user/references/ci-integration/github-actions/#input-parameters", "title": "Input Parameters", "text": "Name Required Default Value Type Description command \u2705 - string KPOps command to run. generate, deploy, destroy, reset, clean are possible values. Flags such as --dry-run and --execute need to be specified pipeline \u2705 - string Pipeline to run by KPOps working-directory \u274c . string root directory used by KPOps to run pipelines config \u274c - string Directory containing the config*.yaml file(s) environment \u274c - string Environment to run KPOps in components \u274c - string components package path filter-type \u274c - string Whether to include/exclude the steps defined in KPOPS_PIPELINE_STEPS parallel \u274c \"false\" string Whether to run pipelines in parallel python-version \u274c \"3.11.x\" string Python version to install (Defaults to the latest stable version of Python 3.11) kpops-version \u274c latest string KPOps version to install helm-version \u274c latest string Helm version to install token \u274c latest string secrets.GITHUB_TOKEN, needed for setup-helm action if helm-version is set to latest"}, {"location": "user/references/ci-integration/github-actions/#usage", "title": "Usage", "text": "<pre><code>steps:\n  # ...\n  # This step is useful for debugging reasons\n  - name: Generate Kafka pipeline\n    uses: bakdata/kpops@main\n    with:\n      command: generate\n      working-directory: home/my-kpops-root-dir\n      pipeline: pipelines/my-pipeline-file.yaml\n      kpops-version: 1.2.3\n\n  # It is possible to use a pre-release KPOps version from TestPyPI https://test.pypi.org/project/kpops/#history\n  - name: Deploy Kafka pipeline\n    uses: bakdata/kpops@main\n    with:\n      command: deploy --execute\n      working-directory: home/my-kpops-root-dir\n      pipeline: pipelines/my-pipeline-file.yaml\n      kpops-version: 1.2.5.dev20230707132709\n  # ...\n</code></pre>"}]}